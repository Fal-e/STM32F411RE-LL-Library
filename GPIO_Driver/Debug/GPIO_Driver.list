
GPIO_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000053dc  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000280  08005580  08005580  00015580  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08005800  08005800  00015800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08005808  08005808  00015808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0800580c  0800580c  0001580c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000006f0  20000000  08005810  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000068  200006f0  08005f00  000206f0  2**2
                  ALLOC
  8 ._user_heap_stack 00000400  20000758  08005f00  00020758  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000206f0  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000364f  00000000  00000000  00020720  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00000a35  00000000  00000000  00023d6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 000001c0  00000000  00000000  000247a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000158  00000000  00000000  00024968  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000116f  00000000  00000000  00024ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00000fb0  00000000  00000000  00025c2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  00026bdf  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00001004  00000000  00000000  00026c5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .stabstr      0000003f  00000000  00000000  00027c60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200006f0 	.word	0x200006f0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08005564 	.word	0x08005564

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200006f4 	.word	0x200006f4
 80001dc:	08005564 	.word	0x08005564

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f092 0f00 	teq	r2, #0
 800057a:	bf14      	ite	ne
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	4770      	bxeq	lr
 8000582:	b530      	push	{r4, r5, lr}
 8000584:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000588:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800058c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000590:	e720      	b.n	80003d4 <__adddf3+0x138>
 8000592:	bf00      	nop

08000594 <__aeabi_ul2d>:
 8000594:	ea50 0201 	orrs.w	r2, r0, r1
 8000598:	bf08      	it	eq
 800059a:	4770      	bxeq	lr
 800059c:	b530      	push	{r4, r5, lr}
 800059e:	f04f 0500 	mov.w	r5, #0
 80005a2:	e00a      	b.n	80005ba <__aeabi_l2d+0x16>

080005a4 <__aeabi_l2d>:
 80005a4:	ea50 0201 	orrs.w	r2, r0, r1
 80005a8:	bf08      	it	eq
 80005aa:	4770      	bxeq	lr
 80005ac:	b530      	push	{r4, r5, lr}
 80005ae:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005b2:	d502      	bpl.n	80005ba <__aeabi_l2d+0x16>
 80005b4:	4240      	negs	r0, r0
 80005b6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005ba:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005be:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005c2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005c6:	f43f aedc 	beq.w	8000382 <__adddf3+0xe6>
 80005ca:	f04f 0203 	mov.w	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005e2:	f1c2 0320 	rsb	r3, r2, #32
 80005e6:	fa00 fc03 	lsl.w	ip, r0, r3
 80005ea:	fa20 f002 	lsr.w	r0, r0, r2
 80005ee:	fa01 fe03 	lsl.w	lr, r1, r3
 80005f2:	ea40 000e 	orr.w	r0, r0, lr
 80005f6:	fa21 f102 	lsr.w	r1, r1, r2
 80005fa:	4414      	add	r4, r2
 80005fc:	e6c1      	b.n	8000382 <__adddf3+0xe6>
 80005fe:	bf00      	nop

08000600 <__aeabi_dmul>:
 8000600:	b570      	push	{r4, r5, r6, lr}
 8000602:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000606:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800060a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800060e:	bf1d      	ittte	ne
 8000610:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000614:	ea94 0f0c 	teqne	r4, ip
 8000618:	ea95 0f0c 	teqne	r5, ip
 800061c:	f000 f8de 	bleq	80007dc <__aeabi_dmul+0x1dc>
 8000620:	442c      	add	r4, r5
 8000622:	ea81 0603 	eor.w	r6, r1, r3
 8000626:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800062a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800062e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000632:	bf18      	it	ne
 8000634:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000638:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800063c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000640:	d038      	beq.n	80006b4 <__aeabi_dmul+0xb4>
 8000642:	fba0 ce02 	umull	ip, lr, r0, r2
 8000646:	f04f 0500 	mov.w	r5, #0
 800064a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800064e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000652:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000656:	f04f 0600 	mov.w	r6, #0
 800065a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800065e:	f09c 0f00 	teq	ip, #0
 8000662:	bf18      	it	ne
 8000664:	f04e 0e01 	orrne.w	lr, lr, #1
 8000668:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800066c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000670:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000674:	d204      	bcs.n	8000680 <__aeabi_dmul+0x80>
 8000676:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800067a:	416d      	adcs	r5, r5
 800067c:	eb46 0606 	adc.w	r6, r6, r6
 8000680:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000684:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000688:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800068c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000690:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000694:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000698:	bf88      	it	hi
 800069a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800069e:	d81e      	bhi.n	80006de <__aeabi_dmul+0xde>
 80006a0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006a4:	bf08      	it	eq
 80006a6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006aa:	f150 0000 	adcs.w	r0, r0, #0
 80006ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b8:	ea46 0101 	orr.w	r1, r6, r1
 80006bc:	ea40 0002 	orr.w	r0, r0, r2
 80006c0:	ea81 0103 	eor.w	r1, r1, r3
 80006c4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c8:	bfc2      	ittt	gt
 80006ca:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006ce:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006d2:	bd70      	popgt	{r4, r5, r6, pc}
 80006d4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d8:	f04f 0e00 	mov.w	lr, #0
 80006dc:	3c01      	subs	r4, #1
 80006de:	f300 80ab 	bgt.w	8000838 <__aeabi_dmul+0x238>
 80006e2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006e6:	bfde      	ittt	le
 80006e8:	2000      	movle	r0, #0
 80006ea:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006ee:	bd70      	pople	{r4, r5, r6, pc}
 80006f0:	f1c4 0400 	rsb	r4, r4, #0
 80006f4:	3c20      	subs	r4, #32
 80006f6:	da35      	bge.n	8000764 <__aeabi_dmul+0x164>
 80006f8:	340c      	adds	r4, #12
 80006fa:	dc1b      	bgt.n	8000734 <__aeabi_dmul+0x134>
 80006fc:	f104 0414 	add.w	r4, r4, #20
 8000700:	f1c4 0520 	rsb	r5, r4, #32
 8000704:	fa00 f305 	lsl.w	r3, r0, r5
 8000708:	fa20 f004 	lsr.w	r0, r0, r4
 800070c:	fa01 f205 	lsl.w	r2, r1, r5
 8000710:	ea40 0002 	orr.w	r0, r0, r2
 8000714:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000718:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800071c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000720:	fa21 f604 	lsr.w	r6, r1, r4
 8000724:	eb42 0106 	adc.w	r1, r2, r6
 8000728:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800072c:	bf08      	it	eq
 800072e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000732:	bd70      	pop	{r4, r5, r6, pc}
 8000734:	f1c4 040c 	rsb	r4, r4, #12
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f304 	lsl.w	r3, r0, r4
 8000740:	fa20 f005 	lsr.w	r0, r0, r5
 8000744:	fa01 f204 	lsl.w	r2, r1, r4
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000754:	f141 0100 	adc.w	r1, r1, #0
 8000758:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800075c:	bf08      	it	eq
 800075e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000762:	bd70      	pop	{r4, r5, r6, pc}
 8000764:	f1c4 0520 	rsb	r5, r4, #32
 8000768:	fa00 f205 	lsl.w	r2, r0, r5
 800076c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000770:	fa20 f304 	lsr.w	r3, r0, r4
 8000774:	fa01 f205 	lsl.w	r2, r1, r5
 8000778:	ea43 0302 	orr.w	r3, r3, r2
 800077c:	fa21 f004 	lsr.w	r0, r1, r4
 8000780:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000784:	fa21 f204 	lsr.w	r2, r1, r4
 8000788:	ea20 0002 	bic.w	r0, r0, r2
 800078c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f094 0f00 	teq	r4, #0
 80007a0:	d10f      	bne.n	80007c2 <__aeabi_dmul+0x1c2>
 80007a2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007a6:	0040      	lsls	r0, r0, #1
 80007a8:	eb41 0101 	adc.w	r1, r1, r1
 80007ac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b0:	bf08      	it	eq
 80007b2:	3c01      	subeq	r4, #1
 80007b4:	d0f7      	beq.n	80007a6 <__aeabi_dmul+0x1a6>
 80007b6:	ea41 0106 	orr.w	r1, r1, r6
 80007ba:	f095 0f00 	teq	r5, #0
 80007be:	bf18      	it	ne
 80007c0:	4770      	bxne	lr
 80007c2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007c6:	0052      	lsls	r2, r2, #1
 80007c8:	eb43 0303 	adc.w	r3, r3, r3
 80007cc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d0:	bf08      	it	eq
 80007d2:	3d01      	subeq	r5, #1
 80007d4:	d0f7      	beq.n	80007c6 <__aeabi_dmul+0x1c6>
 80007d6:	ea43 0306 	orr.w	r3, r3, r6
 80007da:	4770      	bx	lr
 80007dc:	ea94 0f0c 	teq	r4, ip
 80007e0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007e4:	bf18      	it	ne
 80007e6:	ea95 0f0c 	teqne	r5, ip
 80007ea:	d00c      	beq.n	8000806 <__aeabi_dmul+0x206>
 80007ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f0:	bf18      	it	ne
 80007f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007f6:	d1d1      	bne.n	800079c <__aeabi_dmul+0x19c>
 80007f8:	ea81 0103 	eor.w	r1, r1, r3
 80007fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000800:	f04f 0000 	mov.w	r0, #0
 8000804:	bd70      	pop	{r4, r5, r6, pc}
 8000806:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800080a:	bf06      	itte	eq
 800080c:	4610      	moveq	r0, r2
 800080e:	4619      	moveq	r1, r3
 8000810:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000814:	d019      	beq.n	800084a <__aeabi_dmul+0x24a>
 8000816:	ea94 0f0c 	teq	r4, ip
 800081a:	d102      	bne.n	8000822 <__aeabi_dmul+0x222>
 800081c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000820:	d113      	bne.n	800084a <__aeabi_dmul+0x24a>
 8000822:	ea95 0f0c 	teq	r5, ip
 8000826:	d105      	bne.n	8000834 <__aeabi_dmul+0x234>
 8000828:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800082c:	bf1c      	itt	ne
 800082e:	4610      	movne	r0, r2
 8000830:	4619      	movne	r1, r3
 8000832:	d10a      	bne.n	800084a <__aeabi_dmul+0x24a>
 8000834:	ea81 0103 	eor.w	r1, r1, r3
 8000838:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800083c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000840:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000844:	f04f 0000 	mov.w	r0, #0
 8000848:	bd70      	pop	{r4, r5, r6, pc}
 800084a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800084e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000852:	bd70      	pop	{r4, r5, r6, pc}

08000854 <__aeabi_ddiv>:
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800085a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800085e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000862:	bf1d      	ittte	ne
 8000864:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000868:	ea94 0f0c 	teqne	r4, ip
 800086c:	ea95 0f0c 	teqne	r5, ip
 8000870:	f000 f8a7 	bleq	80009c2 <__aeabi_ddiv+0x16e>
 8000874:	eba4 0405 	sub.w	r4, r4, r5
 8000878:	ea81 0e03 	eor.w	lr, r1, r3
 800087c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000880:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000884:	f000 8088 	beq.w	8000998 <__aeabi_ddiv+0x144>
 8000888:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800088c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000890:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000894:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000898:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800089c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008a4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008ac:	429d      	cmp	r5, r3
 80008ae:	bf08      	it	eq
 80008b0:	4296      	cmpeq	r6, r2
 80008b2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008b6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008ba:	d202      	bcs.n	80008c2 <__aeabi_ddiv+0x6e>
 80008bc:	085b      	lsrs	r3, r3, #1
 80008be:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c2:	1ab6      	subs	r6, r6, r2
 80008c4:	eb65 0503 	sbc.w	r5, r5, r3
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008d2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008de:	bf22      	ittt	cs
 80008e0:	1ab6      	subcs	r6, r6, r2
 80008e2:	4675      	movcs	r5, lr
 80008e4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e8:	085b      	lsrs	r3, r3, #1
 80008ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000930:	ea55 0e06 	orrs.w	lr, r5, r6
 8000934:	d018      	beq.n	8000968 <__aeabi_ddiv+0x114>
 8000936:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800093a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800093e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000942:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000946:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800094a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800094e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000952:	d1c0      	bne.n	80008d6 <__aeabi_ddiv+0x82>
 8000954:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000958:	d10b      	bne.n	8000972 <__aeabi_ddiv+0x11e>
 800095a:	ea41 0100 	orr.w	r1, r1, r0
 800095e:	f04f 0000 	mov.w	r0, #0
 8000962:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000966:	e7b6      	b.n	80008d6 <__aeabi_ddiv+0x82>
 8000968:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800096c:	bf04      	itt	eq
 800096e:	4301      	orreq	r1, r0
 8000970:	2000      	moveq	r0, #0
 8000972:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000976:	bf88      	it	hi
 8000978:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800097c:	f63f aeaf 	bhi.w	80006de <__aeabi_dmul+0xde>
 8000980:	ebb5 0c03 	subs.w	ip, r5, r3
 8000984:	bf04      	itt	eq
 8000986:	ebb6 0c02 	subseq.w	ip, r6, r2
 800098a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800098e:	f150 0000 	adcs.w	r0, r0, #0
 8000992:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000996:	bd70      	pop	{r4, r5, r6, pc}
 8000998:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800099c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009a4:	bfc2      	ittt	gt
 80009a6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	popgt	{r4, r5, r6, pc}
 80009b0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009b4:	f04f 0e00 	mov.w	lr, #0
 80009b8:	3c01      	subs	r4, #1
 80009ba:	e690      	b.n	80006de <__aeabi_dmul+0xde>
 80009bc:	ea45 0e06 	orr.w	lr, r5, r6
 80009c0:	e68d      	b.n	80006de <__aeabi_dmul+0xde>
 80009c2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009c6:	ea94 0f0c 	teq	r4, ip
 80009ca:	bf08      	it	eq
 80009cc:	ea95 0f0c 	teqeq	r5, ip
 80009d0:	f43f af3b 	beq.w	800084a <__aeabi_dmul+0x24a>
 80009d4:	ea94 0f0c 	teq	r4, ip
 80009d8:	d10a      	bne.n	80009f0 <__aeabi_ddiv+0x19c>
 80009da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009de:	f47f af34 	bne.w	800084a <__aeabi_dmul+0x24a>
 80009e2:	ea95 0f0c 	teq	r5, ip
 80009e6:	f47f af25 	bne.w	8000834 <__aeabi_dmul+0x234>
 80009ea:	4610      	mov	r0, r2
 80009ec:	4619      	mov	r1, r3
 80009ee:	e72c      	b.n	800084a <__aeabi_dmul+0x24a>
 80009f0:	ea95 0f0c 	teq	r5, ip
 80009f4:	d106      	bne.n	8000a04 <__aeabi_ddiv+0x1b0>
 80009f6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009fa:	f43f aefd 	beq.w	80007f8 <__aeabi_dmul+0x1f8>
 80009fe:	4610      	mov	r0, r2
 8000a00:	4619      	mov	r1, r3
 8000a02:	e722      	b.n	800084a <__aeabi_dmul+0x24a>
 8000a04:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a08:	bf18      	it	ne
 8000a0a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a0e:	f47f aec5 	bne.w	800079c <__aeabi_dmul+0x19c>
 8000a12:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a16:	f47f af0d 	bne.w	8000834 <__aeabi_dmul+0x234>
 8000a1a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a1e:	f47f aeeb 	bne.w	80007f8 <__aeabi_dmul+0x1f8>
 8000a22:	e712      	b.n	800084a <__aeabi_dmul+0x24a>

08000a24 <__gedf2>:
 8000a24:	f04f 3cff 	mov.w	ip, #4294967295
 8000a28:	e006      	b.n	8000a38 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__ledf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	e002      	b.n	8000a38 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__cmpdf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a48:	bf18      	it	ne
 8000a4a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a4e:	d01b      	beq.n	8000a88 <__cmpdf2+0x54>
 8000a50:	b001      	add	sp, #4
 8000a52:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a56:	bf0c      	ite	eq
 8000a58:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a5c:	ea91 0f03 	teqne	r1, r3
 8000a60:	bf02      	ittt	eq
 8000a62:	ea90 0f02 	teqeq	r0, r2
 8000a66:	2000      	moveq	r0, #0
 8000a68:	4770      	bxeq	lr
 8000a6a:	f110 0f00 	cmn.w	r0, #0
 8000a6e:	ea91 0f03 	teq	r1, r3
 8000a72:	bf58      	it	pl
 8000a74:	4299      	cmppl	r1, r3
 8000a76:	bf08      	it	eq
 8000a78:	4290      	cmpeq	r0, r2
 8000a7a:	bf2c      	ite	cs
 8000a7c:	17d8      	asrcs	r0, r3, #31
 8000a7e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a82:	f040 0001 	orr.w	r0, r0, #1
 8000a86:	4770      	bx	lr
 8000a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	d102      	bne.n	8000a98 <__cmpdf2+0x64>
 8000a92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a96:	d107      	bne.n	8000aa8 <__cmpdf2+0x74>
 8000a98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa0:	d1d6      	bne.n	8000a50 <__cmpdf2+0x1c>
 8000aa2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa6:	d0d3      	beq.n	8000a50 <__cmpdf2+0x1c>
 8000aa8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aac:	4770      	bx	lr
 8000aae:	bf00      	nop

08000ab0 <__aeabi_cdrcmple>:
 8000ab0:	4684      	mov	ip, r0
 8000ab2:	4610      	mov	r0, r2
 8000ab4:	4662      	mov	r2, ip
 8000ab6:	468c      	mov	ip, r1
 8000ab8:	4619      	mov	r1, r3
 8000aba:	4663      	mov	r3, ip
 8000abc:	e000      	b.n	8000ac0 <__aeabi_cdcmpeq>
 8000abe:	bf00      	nop

08000ac0 <__aeabi_cdcmpeq>:
 8000ac0:	b501      	push	{r0, lr}
 8000ac2:	f7ff ffb7 	bl	8000a34 <__cmpdf2>
 8000ac6:	2800      	cmp	r0, #0
 8000ac8:	bf48      	it	mi
 8000aca:	f110 0f00 	cmnmi.w	r0, #0
 8000ace:	bd01      	pop	{r0, pc}

08000ad0 <__aeabi_dcmpeq>:
 8000ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad4:	f7ff fff4 	bl	8000ac0 <__aeabi_cdcmpeq>
 8000ad8:	bf0c      	ite	eq
 8000ada:	2001      	moveq	r0, #1
 8000adc:	2000      	movne	r0, #0
 8000ade:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_dcmplt>:
 8000ae4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae8:	f7ff ffea 	bl	8000ac0 <__aeabi_cdcmpeq>
 8000aec:	bf34      	ite	cc
 8000aee:	2001      	movcc	r0, #1
 8000af0:	2000      	movcs	r0, #0
 8000af2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000af6:	bf00      	nop

08000af8 <__aeabi_dcmple>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff ffe0 	bl	8000ac0 <__aeabi_cdcmpeq>
 8000b00:	bf94      	ite	ls
 8000b02:	2001      	movls	r0, #1
 8000b04:	2000      	movhi	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmpge>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffce 	bl	8000ab0 <__aeabi_cdrcmple>
 8000b14:	bf94      	ite	ls
 8000b16:	2001      	movls	r0, #1
 8000b18:	2000      	movhi	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmpgt>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffc4 	bl	8000ab0 <__aeabi_cdrcmple>
 8000b28:	bf34      	ite	cc
 8000b2a:	2001      	movcc	r0, #1
 8000b2c:	2000      	movcs	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpun>:
 8000b34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b3c:	d102      	bne.n	8000b44 <__aeabi_dcmpun+0x10>
 8000b3e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b42:	d10a      	bne.n	8000b5a <__aeabi_dcmpun+0x26>
 8000b44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b4c:	d102      	bne.n	8000b54 <__aeabi_dcmpun+0x20>
 8000b4e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b52:	d102      	bne.n	8000b5a <__aeabi_dcmpun+0x26>
 8000b54:	f04f 0000 	mov.w	r0, #0
 8000b58:	4770      	bx	lr
 8000b5a:	f04f 0001 	mov.w	r0, #1
 8000b5e:	4770      	bx	lr

08000b60 <__aeabi_d2iz>:
 8000b60:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d215      	bcs.n	8000b96 <__aeabi_d2iz+0x36>
 8000b6a:	d511      	bpl.n	8000b90 <__aeabi_d2iz+0x30>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d912      	bls.n	8000b9c <__aeabi_d2iz+0x3c>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b86:	fa23 f002 	lsr.w	r0, r3, r2
 8000b8a:	bf18      	it	ne
 8000b8c:	4240      	negne	r0, r0
 8000b8e:	4770      	bx	lr
 8000b90:	f04f 0000 	mov.w	r0, #0
 8000b94:	4770      	bx	lr
 8000b96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b9a:	d105      	bne.n	8000ba8 <__aeabi_d2iz+0x48>
 8000b9c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	bf08      	it	eq
 8000ba2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	bf00      	nop

08000bb0 <__aeabi_uldivmod>:
 8000bb0:	b953      	cbnz	r3, 8000bc8 <__aeabi_uldivmod+0x18>
 8000bb2:	b94a      	cbnz	r2, 8000bc8 <__aeabi_uldivmod+0x18>
 8000bb4:	2900      	cmp	r1, #0
 8000bb6:	bf08      	it	eq
 8000bb8:	2800      	cmpeq	r0, #0
 8000bba:	bf1c      	itt	ne
 8000bbc:	f04f 31ff 	movne.w	r1, #4294967295
 8000bc0:	f04f 30ff 	movne.w	r0, #4294967295
 8000bc4:	f000 b97a 	b.w	8000ebc <__aeabi_idiv0>
 8000bc8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bcc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bd0:	f000 f806 	bl	8000be0 <__udivmoddi4>
 8000bd4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bdc:	b004      	add	sp, #16
 8000bde:	4770      	bx	lr

08000be0 <__udivmoddi4>:
 8000be0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000be4:	468c      	mov	ip, r1
 8000be6:	460d      	mov	r5, r1
 8000be8:	4604      	mov	r4, r0
 8000bea:	9e08      	ldr	r6, [sp, #32]
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d151      	bne.n	8000c94 <__udivmoddi4+0xb4>
 8000bf0:	428a      	cmp	r2, r1
 8000bf2:	4617      	mov	r7, r2
 8000bf4:	d96d      	bls.n	8000cd2 <__udivmoddi4+0xf2>
 8000bf6:	fab2 fe82 	clz	lr, r2
 8000bfa:	f1be 0f00 	cmp.w	lr, #0
 8000bfe:	d00b      	beq.n	8000c18 <__udivmoddi4+0x38>
 8000c00:	f1ce 0c20 	rsb	ip, lr, #32
 8000c04:	fa01 f50e 	lsl.w	r5, r1, lr
 8000c08:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000c0c:	fa02 f70e 	lsl.w	r7, r2, lr
 8000c10:	ea4c 0c05 	orr.w	ip, ip, r5
 8000c14:	fa00 f40e 	lsl.w	r4, r0, lr
 8000c18:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 8000c1c:	0c25      	lsrs	r5, r4, #16
 8000c1e:	fbbc f8fa 	udiv	r8, ip, sl
 8000c22:	fa1f f987 	uxth.w	r9, r7
 8000c26:	fb0a cc18 	mls	ip, sl, r8, ip
 8000c2a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8000c2e:	fb08 f309 	mul.w	r3, r8, r9
 8000c32:	42ab      	cmp	r3, r5
 8000c34:	d90a      	bls.n	8000c4c <__udivmoddi4+0x6c>
 8000c36:	19ed      	adds	r5, r5, r7
 8000c38:	f108 32ff 	add.w	r2, r8, #4294967295
 8000c3c:	f080 8123 	bcs.w	8000e86 <__udivmoddi4+0x2a6>
 8000c40:	42ab      	cmp	r3, r5
 8000c42:	f240 8120 	bls.w	8000e86 <__udivmoddi4+0x2a6>
 8000c46:	f1a8 0802 	sub.w	r8, r8, #2
 8000c4a:	443d      	add	r5, r7
 8000c4c:	1aed      	subs	r5, r5, r3
 8000c4e:	b2a4      	uxth	r4, r4
 8000c50:	fbb5 f0fa 	udiv	r0, r5, sl
 8000c54:	fb0a 5510 	mls	r5, sl, r0, r5
 8000c58:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000c5c:	fb00 f909 	mul.w	r9, r0, r9
 8000c60:	45a1      	cmp	r9, r4
 8000c62:	d909      	bls.n	8000c78 <__udivmoddi4+0x98>
 8000c64:	19e4      	adds	r4, r4, r7
 8000c66:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c6a:	f080 810a 	bcs.w	8000e82 <__udivmoddi4+0x2a2>
 8000c6e:	45a1      	cmp	r9, r4
 8000c70:	f240 8107 	bls.w	8000e82 <__udivmoddi4+0x2a2>
 8000c74:	3802      	subs	r0, #2
 8000c76:	443c      	add	r4, r7
 8000c78:	eba4 0409 	sub.w	r4, r4, r9
 8000c7c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000c80:	2100      	movs	r1, #0
 8000c82:	2e00      	cmp	r6, #0
 8000c84:	d061      	beq.n	8000d4a <__udivmoddi4+0x16a>
 8000c86:	fa24 f40e 	lsr.w	r4, r4, lr
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	6034      	str	r4, [r6, #0]
 8000c8e:	6073      	str	r3, [r6, #4]
 8000c90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c94:	428b      	cmp	r3, r1
 8000c96:	d907      	bls.n	8000ca8 <__udivmoddi4+0xc8>
 8000c98:	2e00      	cmp	r6, #0
 8000c9a:	d054      	beq.n	8000d46 <__udivmoddi4+0x166>
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	e886 0021 	stmia.w	r6, {r0, r5}
 8000ca2:	4608      	mov	r0, r1
 8000ca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca8:	fab3 f183 	clz	r1, r3
 8000cac:	2900      	cmp	r1, #0
 8000cae:	f040 808e 	bne.w	8000dce <__udivmoddi4+0x1ee>
 8000cb2:	42ab      	cmp	r3, r5
 8000cb4:	d302      	bcc.n	8000cbc <__udivmoddi4+0xdc>
 8000cb6:	4282      	cmp	r2, r0
 8000cb8:	f200 80fa 	bhi.w	8000eb0 <__udivmoddi4+0x2d0>
 8000cbc:	1a84      	subs	r4, r0, r2
 8000cbe:	eb65 0503 	sbc.w	r5, r5, r3
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	46ac      	mov	ip, r5
 8000cc6:	2e00      	cmp	r6, #0
 8000cc8:	d03f      	beq.n	8000d4a <__udivmoddi4+0x16a>
 8000cca:	e886 1010 	stmia.w	r6, {r4, ip}
 8000cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd2:	b912      	cbnz	r2, 8000cda <__udivmoddi4+0xfa>
 8000cd4:	2701      	movs	r7, #1
 8000cd6:	fbb7 f7f2 	udiv	r7, r7, r2
 8000cda:	fab7 fe87 	clz	lr, r7
 8000cde:	f1be 0f00 	cmp.w	lr, #0
 8000ce2:	d134      	bne.n	8000d4e <__udivmoddi4+0x16e>
 8000ce4:	1beb      	subs	r3, r5, r7
 8000ce6:	0c3a      	lsrs	r2, r7, #16
 8000ce8:	fa1f fc87 	uxth.w	ip, r7
 8000cec:	2101      	movs	r1, #1
 8000cee:	fbb3 f8f2 	udiv	r8, r3, r2
 8000cf2:	0c25      	lsrs	r5, r4, #16
 8000cf4:	fb02 3318 	mls	r3, r2, r8, r3
 8000cf8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000cfc:	fb0c f308 	mul.w	r3, ip, r8
 8000d00:	42ab      	cmp	r3, r5
 8000d02:	d907      	bls.n	8000d14 <__udivmoddi4+0x134>
 8000d04:	19ed      	adds	r5, r5, r7
 8000d06:	f108 30ff 	add.w	r0, r8, #4294967295
 8000d0a:	d202      	bcs.n	8000d12 <__udivmoddi4+0x132>
 8000d0c:	42ab      	cmp	r3, r5
 8000d0e:	f200 80d1 	bhi.w	8000eb4 <__udivmoddi4+0x2d4>
 8000d12:	4680      	mov	r8, r0
 8000d14:	1aed      	subs	r5, r5, r3
 8000d16:	b2a3      	uxth	r3, r4
 8000d18:	fbb5 f0f2 	udiv	r0, r5, r2
 8000d1c:	fb02 5510 	mls	r5, r2, r0, r5
 8000d20:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000d24:	fb0c fc00 	mul.w	ip, ip, r0
 8000d28:	45a4      	cmp	ip, r4
 8000d2a:	d907      	bls.n	8000d3c <__udivmoddi4+0x15c>
 8000d2c:	19e4      	adds	r4, r4, r7
 8000d2e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d32:	d202      	bcs.n	8000d3a <__udivmoddi4+0x15a>
 8000d34:	45a4      	cmp	ip, r4
 8000d36:	f200 80b8 	bhi.w	8000eaa <__udivmoddi4+0x2ca>
 8000d3a:	4618      	mov	r0, r3
 8000d3c:	eba4 040c 	sub.w	r4, r4, ip
 8000d40:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000d44:	e79d      	b.n	8000c82 <__udivmoddi4+0xa2>
 8000d46:	4631      	mov	r1, r6
 8000d48:	4630      	mov	r0, r6
 8000d4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d4e:	f1ce 0420 	rsb	r4, lr, #32
 8000d52:	fa05 f30e 	lsl.w	r3, r5, lr
 8000d56:	fa07 f70e 	lsl.w	r7, r7, lr
 8000d5a:	fa20 f804 	lsr.w	r8, r0, r4
 8000d5e:	0c3a      	lsrs	r2, r7, #16
 8000d60:	fa25 f404 	lsr.w	r4, r5, r4
 8000d64:	ea48 0803 	orr.w	r8, r8, r3
 8000d68:	fbb4 f1f2 	udiv	r1, r4, r2
 8000d6c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8000d70:	fb02 4411 	mls	r4, r2, r1, r4
 8000d74:	fa1f fc87 	uxth.w	ip, r7
 8000d78:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 8000d7c:	fb01 f30c 	mul.w	r3, r1, ip
 8000d80:	42ab      	cmp	r3, r5
 8000d82:	fa00 f40e 	lsl.w	r4, r0, lr
 8000d86:	d909      	bls.n	8000d9c <__udivmoddi4+0x1bc>
 8000d88:	19ed      	adds	r5, r5, r7
 8000d8a:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d8e:	f080 808a 	bcs.w	8000ea6 <__udivmoddi4+0x2c6>
 8000d92:	42ab      	cmp	r3, r5
 8000d94:	f240 8087 	bls.w	8000ea6 <__udivmoddi4+0x2c6>
 8000d98:	3902      	subs	r1, #2
 8000d9a:	443d      	add	r5, r7
 8000d9c:	1aeb      	subs	r3, r5, r3
 8000d9e:	fa1f f588 	uxth.w	r5, r8
 8000da2:	fbb3 f0f2 	udiv	r0, r3, r2
 8000da6:	fb02 3310 	mls	r3, r2, r0, r3
 8000daa:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000dae:	fb00 f30c 	mul.w	r3, r0, ip
 8000db2:	42ab      	cmp	r3, r5
 8000db4:	d907      	bls.n	8000dc6 <__udivmoddi4+0x1e6>
 8000db6:	19ed      	adds	r5, r5, r7
 8000db8:	f100 38ff 	add.w	r8, r0, #4294967295
 8000dbc:	d26f      	bcs.n	8000e9e <__udivmoddi4+0x2be>
 8000dbe:	42ab      	cmp	r3, r5
 8000dc0:	d96d      	bls.n	8000e9e <__udivmoddi4+0x2be>
 8000dc2:	3802      	subs	r0, #2
 8000dc4:	443d      	add	r5, r7
 8000dc6:	1aeb      	subs	r3, r5, r3
 8000dc8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dcc:	e78f      	b.n	8000cee <__udivmoddi4+0x10e>
 8000dce:	f1c1 0720 	rsb	r7, r1, #32
 8000dd2:	fa22 f807 	lsr.w	r8, r2, r7
 8000dd6:	408b      	lsls	r3, r1
 8000dd8:	fa05 f401 	lsl.w	r4, r5, r1
 8000ddc:	ea48 0303 	orr.w	r3, r8, r3
 8000de0:	fa20 fe07 	lsr.w	lr, r0, r7
 8000de4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000de8:	40fd      	lsrs	r5, r7
 8000dea:	ea4e 0e04 	orr.w	lr, lr, r4
 8000dee:	fbb5 f9fc 	udiv	r9, r5, ip
 8000df2:	ea4f 441e 	mov.w	r4, lr, lsr #16
 8000df6:	fb0c 5519 	mls	r5, ip, r9, r5
 8000dfa:	fa1f f883 	uxth.w	r8, r3
 8000dfe:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000e02:	fb09 f408 	mul.w	r4, r9, r8
 8000e06:	42ac      	cmp	r4, r5
 8000e08:	fa02 f201 	lsl.w	r2, r2, r1
 8000e0c:	fa00 fa01 	lsl.w	sl, r0, r1
 8000e10:	d908      	bls.n	8000e24 <__udivmoddi4+0x244>
 8000e12:	18ed      	adds	r5, r5, r3
 8000e14:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e18:	d243      	bcs.n	8000ea2 <__udivmoddi4+0x2c2>
 8000e1a:	42ac      	cmp	r4, r5
 8000e1c:	d941      	bls.n	8000ea2 <__udivmoddi4+0x2c2>
 8000e1e:	f1a9 0902 	sub.w	r9, r9, #2
 8000e22:	441d      	add	r5, r3
 8000e24:	1b2d      	subs	r5, r5, r4
 8000e26:	fa1f fe8e 	uxth.w	lr, lr
 8000e2a:	fbb5 f0fc 	udiv	r0, r5, ip
 8000e2e:	fb0c 5510 	mls	r5, ip, r0, r5
 8000e32:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000e36:	fb00 f808 	mul.w	r8, r0, r8
 8000e3a:	45a0      	cmp	r8, r4
 8000e3c:	d907      	bls.n	8000e4e <__udivmoddi4+0x26e>
 8000e3e:	18e4      	adds	r4, r4, r3
 8000e40:	f100 35ff 	add.w	r5, r0, #4294967295
 8000e44:	d229      	bcs.n	8000e9a <__udivmoddi4+0x2ba>
 8000e46:	45a0      	cmp	r8, r4
 8000e48:	d927      	bls.n	8000e9a <__udivmoddi4+0x2ba>
 8000e4a:	3802      	subs	r0, #2
 8000e4c:	441c      	add	r4, r3
 8000e4e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e52:	eba4 0408 	sub.w	r4, r4, r8
 8000e56:	fba0 8902 	umull	r8, r9, r0, r2
 8000e5a:	454c      	cmp	r4, r9
 8000e5c:	46c6      	mov	lr, r8
 8000e5e:	464d      	mov	r5, r9
 8000e60:	d315      	bcc.n	8000e8e <__udivmoddi4+0x2ae>
 8000e62:	d012      	beq.n	8000e8a <__udivmoddi4+0x2aa>
 8000e64:	b156      	cbz	r6, 8000e7c <__udivmoddi4+0x29c>
 8000e66:	ebba 030e 	subs.w	r3, sl, lr
 8000e6a:	eb64 0405 	sbc.w	r4, r4, r5
 8000e6e:	fa04 f707 	lsl.w	r7, r4, r7
 8000e72:	40cb      	lsrs	r3, r1
 8000e74:	431f      	orrs	r7, r3
 8000e76:	40cc      	lsrs	r4, r1
 8000e78:	6037      	str	r7, [r6, #0]
 8000e7a:	6074      	str	r4, [r6, #4]
 8000e7c:	2100      	movs	r1, #0
 8000e7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e82:	4618      	mov	r0, r3
 8000e84:	e6f8      	b.n	8000c78 <__udivmoddi4+0x98>
 8000e86:	4690      	mov	r8, r2
 8000e88:	e6e0      	b.n	8000c4c <__udivmoddi4+0x6c>
 8000e8a:	45c2      	cmp	sl, r8
 8000e8c:	d2ea      	bcs.n	8000e64 <__udivmoddi4+0x284>
 8000e8e:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e92:	eb69 0503 	sbc.w	r5, r9, r3
 8000e96:	3801      	subs	r0, #1
 8000e98:	e7e4      	b.n	8000e64 <__udivmoddi4+0x284>
 8000e9a:	4628      	mov	r0, r5
 8000e9c:	e7d7      	b.n	8000e4e <__udivmoddi4+0x26e>
 8000e9e:	4640      	mov	r0, r8
 8000ea0:	e791      	b.n	8000dc6 <__udivmoddi4+0x1e6>
 8000ea2:	4681      	mov	r9, r0
 8000ea4:	e7be      	b.n	8000e24 <__udivmoddi4+0x244>
 8000ea6:	4601      	mov	r1, r0
 8000ea8:	e778      	b.n	8000d9c <__udivmoddi4+0x1bc>
 8000eaa:	3802      	subs	r0, #2
 8000eac:	443c      	add	r4, r7
 8000eae:	e745      	b.n	8000d3c <__udivmoddi4+0x15c>
 8000eb0:	4608      	mov	r0, r1
 8000eb2:	e708      	b.n	8000cc6 <__udivmoddi4+0xe6>
 8000eb4:	f1a8 0802 	sub.w	r8, r8, #2
 8000eb8:	443d      	add	r5, r7
 8000eba:	e72b      	b.n	8000d14 <__udivmoddi4+0x134>

08000ebc <__aeabi_idiv0>:
 8000ebc:	4770      	bx	lr
 8000ebe:	bf00      	nop

08000ec0 <main>:
 * - Shows how to use ADC and print to an 16 x 02 LCD screen via I2C
 *
 */


int main(void) {
 8000ec0:	b590      	push	{r4, r7, lr}
 8000ec2:	b09d      	sub	sp, #116	; 0x74
 8000ec4:	af06      	add	r7, sp, #24

    config_clock_50MHz();
 8000ec6:	f001 fa9d 	bl	8002404 <config_clock_50MHz>

    // Setting up PORT C Pin 0 as an analog input
    GPIO_TYPE myGPIO;
    myGPIO.port = PORTC;
 8000eca:	4b40      	ldr	r3, [pc, #256]	; (8000fcc <main+0x10c>)
 8000ecc:	62fb      	str	r3, [r7, #44]	; 0x2c
    myGPIO.mode = ANALOG_MODE;
 8000ece:	2303      	movs	r3, #3
 8000ed0:	637b      	str	r3, [r7, #52]	; 0x34
    gpio_port_config(myGPIO,(int []) {0},1); // 0 is the Pin number, 1 is the number of pins you want to configure
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	64bb      	str	r3, [r7, #72]	; 0x48
 8000ed6:	2301      	movs	r3, #1
 8000ed8:	9304      	str	r3, [sp, #16]
 8000eda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000ede:	9303      	str	r3, [sp, #12]
 8000ee0:	466c      	mov	r4, sp
 8000ee2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000ee6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8000eea:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8000eee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000ef2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000ef4:	f001 f922 	bl	800213c <gpio_port_config>
    // It is possible to setup multiple pins with the function above.

    /* Example below is how to set up the STM32F411RE on board LED.
     * It is not */
    GPIO_TYPE myLed;
    myLed.port = PORTA;
 8000ef8:	4b35      	ldr	r3, [pc, #212]	; (8000fd0 <main+0x110>)
 8000efa:	613b      	str	r3, [r7, #16]
    myLed.mode = OUTPUT_MODE;
 8000efc:	2301      	movs	r3, #1
 8000efe:	61bb      	str	r3, [r7, #24]
    myLed.mode_type = OUTPUT_PUP;
 8000f00:	2300      	movs	r3, #0
 8000f02:	61fb      	str	r3, [r7, #28]
    gpio_port_config(myLed,(int []) {5},1);
 8000f04:	2305      	movs	r3, #5
 8000f06:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000f08:	2301      	movs	r3, #1
 8000f0a:	9304      	str	r3, [sp, #16]
 8000f0c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8000f10:	9303      	str	r3, [sp, #12]
 8000f12:	466c      	mov	r4, sp
 8000f14:	f107 0320 	add.w	r3, r7, #32
 8000f18:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8000f1c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8000f20:	f107 0310 	add.w	r3, r7, #16
 8000f24:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000f26:	f001 f909 	bl	800213c <gpio_port_config>

    I2C_enable(); // Setting up I2C
 8000f2a:	f001 f97f 	bl	800222c <I2C_enable>
} */


    char str[16];
    // Setting up ADC and printing it to the LCD via I2C
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000f2e:	4a29      	ldr	r2, [pc, #164]	; (8000fd4 <main+0x114>)
 8000f30:	4b28      	ldr	r3, [pc, #160]	; (8000fd4 <main+0x114>)
 8000f32:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000f38:	6453      	str	r3, [r2, #68]	; 0x44
    ADC1->SQR1 |= ADC_SQR1_L_0; // One conversion ->  0001. 1111
 8000f3a:	4a27      	ldr	r2, [pc, #156]	; (8000fd8 <main+0x118>)
 8000f3c:	4b26      	ldr	r3, [pc, #152]	; (8000fd8 <main+0x118>)
 8000f3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000f40:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000f44:	62d3      	str	r3, [r2, #44]	; 0x2c
    ADC1->SQR3 |= ADC_SQR3_SQ1_1 | ADC_SQR3_SQ1_3; // 2 or 10, gives us 1100 which is 10. We want
 8000f46:	4a24      	ldr	r2, [pc, #144]	; (8000fd8 <main+0x118>)
 8000f48:	4b23      	ldr	r3, [pc, #140]	; (8000fd8 <main+0x118>)
 8000f4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000f4c:	f043 030a 	orr.w	r3, r3, #10
 8000f50:	6353      	str	r3, [r2, #52]	; 0x34
    ADC1->CR2 |= ADC_CR2_CONT; // continous mode
 8000f52:	4a21      	ldr	r2, [pc, #132]	; (8000fd8 <main+0x118>)
 8000f54:	4b20      	ldr	r3, [pc, #128]	; (8000fd8 <main+0x118>)
 8000f56:	689b      	ldr	r3, [r3, #8]
 8000f58:	f043 0302 	orr.w	r3, r3, #2
 8000f5c:	6093      	str	r3, [r2, #8]
    ADC1->CR2 |= ADC_CR2_ADON;
 8000f5e:	4a1e      	ldr	r2, [pc, #120]	; (8000fd8 <main+0x118>)
 8000f60:	4b1d      	ldr	r3, [pc, #116]	; (8000fd8 <main+0x118>)
 8000f62:	689b      	ldr	r3, [r3, #8]
 8000f64:	f043 0301 	orr.w	r3, r3, #1
 8000f68:	6093      	str	r3, [r2, #8]
    // maybe put a check that adon is 1
    ADC1->CR2 |= ADC_CR2_SWSTART; // Continous Conversion Mode
 8000f6a:	4a1b      	ldr	r2, [pc, #108]	; (8000fd8 <main+0x118>)
 8000f6c:	4b1a      	ldr	r3, [pc, #104]	; (8000fd8 <main+0x118>)
 8000f6e:	689b      	ldr	r3, [r3, #8]
 8000f70:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000f74:	6093      	str	r3, [r2, #8]

    while(1) {
        int result = ADC1->DR;
 8000f76:	4b18      	ldr	r3, [pc, #96]	; (8000fd8 <main+0x118>)
 8000f78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f7a:	657b      	str	r3, [r7, #84]	; 0x54
        float new_result = result/819.0f;
 8000f7c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000f7e:	ee07 3a90 	vmov	s15, r3
 8000f82:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000f86:	eddf 6a15 	vldr	s13, [pc, #84]	; 8000fdc <main+0x11c>
 8000f8a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000f8e:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50
        snprintf(str,6,"%f", new_result); //snprintf not supported in c99...?
 8000f92:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8000f94:	f7ff fae0 	bl	8000558 <__aeabi_f2d>
 8000f98:	4603      	mov	r3, r0
 8000f9a:	460c      	mov	r4, r1
 8000f9c:	4638      	mov	r0, r7
 8000f9e:	e88d 0018 	stmia.w	sp, {r3, r4}
 8000fa2:	4a0f      	ldr	r2, [pc, #60]	; (8000fe0 <main+0x120>)
 8000fa4:	2106      	movs	r1, #6
 8000fa6:	f001 fbd3 	bl	8002750 <snprintf>
        //ftoa(new_result, 3, str);
        //itoa(result, str, 10); // convert from integer to string
        lcd_i2c_print("Voltage: ");
 8000faa:	480e      	ldr	r0, [pc, #56]	; (8000fe4 <main+0x124>)
 8000fac:	f001 fb84 	bl	80026b8 <lcd_i2c_print>
        lcd_i2c_print(str);
 8000fb0:	463b      	mov	r3, r7
 8000fb2:	4618      	mov	r0, r3
 8000fb4:	f001 fb80 	bl	80026b8 <lcd_i2c_print>
        lcd_i2c_print("V");
 8000fb8:	480b      	ldr	r0, [pc, #44]	; (8000fe8 <main+0x128>)
 8000fba:	f001 fb7d 	bl	80026b8 <lcd_i2c_print>
        delay_mS(1000);
 8000fbe:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000fc2:	f001 fadd 	bl	8002580 <delay_mS>
        lcd_i2c_clear();
 8000fc6:	f001 fb95 	bl	80026f4 <lcd_i2c_clear>
    while(1) {
 8000fca:	e7d4      	b.n	8000f76 <main+0xb6>
 8000fcc:	40020800 	.word	0x40020800
 8000fd0:	40020000 	.word	0x40020000
 8000fd4:	40023800 	.word	0x40023800
 8000fd8:	40012000 	.word	0x40012000
 8000fdc:	444cc000 	.word	0x444cc000
 8000fe0:	08005580 	.word	0x08005580
 8000fe4:	08005584 	.word	0x08005584
 8000fe8:	08005590 	.word	0x08005590

08000fec <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8000fec:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001024 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000ff0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000ff2:	e003      	b.n	8000ffc <LoopCopyDataInit>

08000ff4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000ff4:	4b0c      	ldr	r3, [pc, #48]	; (8001028 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000ff6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000ff8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000ffa:	3104      	adds	r1, #4

08000ffc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000ffc:	480b      	ldr	r0, [pc, #44]	; (800102c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000ffe:	4b0c      	ldr	r3, [pc, #48]	; (8001030 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001000:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001002:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001004:	d3f6      	bcc.n	8000ff4 <CopyDataInit>
  ldr  r2, =_sbss
 8001006:	4a0b      	ldr	r2, [pc, #44]	; (8001034 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001008:	e002      	b.n	8001010 <LoopFillZerobss>

0800100a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800100a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800100c:	f842 3b04 	str.w	r3, [r2], #4

08001010 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001010:	4b09      	ldr	r3, [pc, #36]	; (8001038 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001012:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001014:	d3f9      	bcc.n	800100a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001016:	f000 f813 	bl	8001040 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800101a:	f001 fb75 	bl	8002708 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800101e:	f7ff ff4f 	bl	8000ec0 <main>
  bx  lr    
 8001022:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001024:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8001028:	08005810 	.word	0x08005810
  ldr  r0, =_sdata
 800102c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001030:	200006f0 	.word	0x200006f0
  ldr  r2, =_sbss
 8001034:	200006f0 	.word	0x200006f0
  ldr  r3, = _ebss
 8001038:	20000758 	.word	0x20000758

0800103c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800103c:	e7fe      	b.n	800103c <ADC_IRQHandler>
	...

08001040 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001040:	b480      	push	{r7}
 8001042:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001044:	4a16      	ldr	r2, [pc, #88]	; (80010a0 <SystemInit+0x60>)
 8001046:	4b16      	ldr	r3, [pc, #88]	; (80010a0 <SystemInit+0x60>)
 8001048:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800104c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001050:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001054:	4a13      	ldr	r2, [pc, #76]	; (80010a4 <SystemInit+0x64>)
 8001056:	4b13      	ldr	r3, [pc, #76]	; (80010a4 <SystemInit+0x64>)
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	f043 0301 	orr.w	r3, r3, #1
 800105e:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001060:	4b10      	ldr	r3, [pc, #64]	; (80010a4 <SystemInit+0x64>)
 8001062:	2200      	movs	r2, #0
 8001064:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8001066:	4a0f      	ldr	r2, [pc, #60]	; (80010a4 <SystemInit+0x64>)
 8001068:	4b0e      	ldr	r3, [pc, #56]	; (80010a4 <SystemInit+0x64>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001070:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001074:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8001076:	4b0b      	ldr	r3, [pc, #44]	; (80010a4 <SystemInit+0x64>)
 8001078:	4a0b      	ldr	r2, [pc, #44]	; (80010a8 <SystemInit+0x68>)
 800107a:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800107c:	4a09      	ldr	r2, [pc, #36]	; (80010a4 <SystemInit+0x64>)
 800107e:	4b09      	ldr	r3, [pc, #36]	; (80010a4 <SystemInit+0x64>)
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001086:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001088:	4b06      	ldr	r3, [pc, #24]	; (80010a4 <SystemInit+0x64>)
 800108a:	2200      	movs	r2, #0
 800108c:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800108e:	4b04      	ldr	r3, [pc, #16]	; (80010a0 <SystemInit+0x60>)
 8001090:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001094:	609a      	str	r2, [r3, #8]
#endif
}
 8001096:	bf00      	nop
 8001098:	46bd      	mov	sp, r7
 800109a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109e:	4770      	bx	lr
 80010a0:	e000ed00 	.word	0xe000ed00
 80010a4:	40023800 	.word	0x40023800
 80010a8:	24003010 	.word	0x24003010

080010ac <config_pin>:
    (0x14), //5
    (0x18), //6
    (0x1C), //7
};

static void config_pin(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinSpeed, uint32_t mode, uint16_t mode_type, uint32_t alt_func) {
 80010ac:	b480      	push	{r7}
 80010ae:	b085      	sub	sp, #20
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	60f8      	str	r0, [r7, #12]
 80010b4:	60b9      	str	r1, [r7, #8]
 80010b6:	607a      	str	r2, [r7, #4]
 80010b8:	603b      	str	r3, [r7, #0]

    if (mode == OUTPUT_MODE) {
 80010ba:	683b      	ldr	r3, [r7, #0]
 80010bc:	2b01      	cmp	r3, #1
 80010be:	f040 80aa 	bne.w	8001216 <config_pin+0x16a>
        port->MODER |= (1<<PINPOS[pinNumber]);
 80010c2:	68fb      	ldr	r3, [r7, #12]
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	49b1      	ldr	r1, [pc, #708]	; (800138c <config_pin+0x2e0>)
 80010c8:	68ba      	ldr	r2, [r7, #8]
 80010ca:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80010ce:	2101      	movs	r1, #1
 80010d0:	fa01 f202 	lsl.w	r2, r1, r2
 80010d4:	431a      	orrs	r2, r3
 80010d6:	68fb      	ldr	r3, [r7, #12]
 80010d8:	601a      	str	r2, [r3, #0]
        port->MODER &= ~(1<<PINPOS[pinNumber]+1);
 80010da:	68fb      	ldr	r3, [r7, #12]
 80010dc:	681b      	ldr	r3, [r3, #0]
 80010de:	49ab      	ldr	r1, [pc, #684]	; (800138c <config_pin+0x2e0>)
 80010e0:	68ba      	ldr	r2, [r7, #8]
 80010e2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80010e6:	3201      	adds	r2, #1
 80010e8:	2101      	movs	r1, #1
 80010ea:	fa01 f202 	lsl.w	r2, r1, r2
 80010ee:	43d2      	mvns	r2, r2
 80010f0:	401a      	ands	r2, r3
 80010f2:	68fb      	ldr	r3, [r7, #12]
 80010f4:	601a      	str	r2, [r3, #0]


        if (mode_type == OUTPUT_PUP) {
 80010f6:	8b3b      	ldrh	r3, [r7, #24]
 80010f8:	2b00      	cmp	r3, #0
 80010fa:	d109      	bne.n	8001110 <config_pin+0x64>
            port->OTYPER &= ~(1<<pinNumber);
 80010fc:	68fb      	ldr	r3, [r7, #12]
 80010fe:	685b      	ldr	r3, [r3, #4]
 8001100:	2101      	movs	r1, #1
 8001102:	68ba      	ldr	r2, [r7, #8]
 8001104:	fa01 f202 	lsl.w	r2, r1, r2
 8001108:	43d2      	mvns	r2, r2
 800110a:	401a      	ands	r2, r3
 800110c:	68fb      	ldr	r3, [r7, #12]
 800110e:	605a      	str	r2, [r3, #4]
        }

        if (mode_type == OUTPUT_OD) {
 8001110:	8b3b      	ldrh	r3, [r7, #24]
 8001112:	2b01      	cmp	r3, #1
 8001114:	d108      	bne.n	8001128 <config_pin+0x7c>
            port->OTYPER |= (1<<pinNumber);
 8001116:	68fb      	ldr	r3, [r7, #12]
 8001118:	685b      	ldr	r3, [r3, #4]
 800111a:	2101      	movs	r1, #1
 800111c:	68ba      	ldr	r2, [r7, #8]
 800111e:	fa01 f202 	lsl.w	r2, r1, r2
 8001122:	431a      	orrs	r2, r3
 8001124:	68fb      	ldr	r3, [r7, #12]
 8001126:	605a      	str	r2, [r3, #4]
        }


        switch(pinSpeed) {
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	2b03      	cmp	r3, #3
 800112c:	f200 80c5 	bhi.w	80012ba <config_pin+0x20e>
 8001130:	a201      	add	r2, pc, #4	; (adr r2, 8001138 <config_pin+0x8c>)
 8001132:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001136:	bf00      	nop
 8001138:	08001149 	.word	0x08001149
 800113c:	08001175 	.word	0x08001175
 8001140:	080011ab 	.word	0x080011ab
 8001144:	080011e1 	.word	0x080011e1
        //Output speed
        case (SPEED_LOW):
        port->OSPEEDR &= ~(1<<PINPOS[pinNumber]) & ~(1<<PINPOS[pinNumber+1]); // Putting a 00
 8001148:	68fb      	ldr	r3, [r7, #12]
 800114a:	689b      	ldr	r3, [r3, #8]
 800114c:	498f      	ldr	r1, [pc, #572]	; (800138c <config_pin+0x2e0>)
 800114e:	68ba      	ldr	r2, [r7, #8]
 8001150:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001154:	2101      	movs	r1, #1
 8001156:	4091      	lsls	r1, r2
 8001158:	68ba      	ldr	r2, [r7, #8]
 800115a:	3201      	adds	r2, #1
 800115c:	488b      	ldr	r0, [pc, #556]	; (800138c <config_pin+0x2e0>)
 800115e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001162:	2001      	movs	r0, #1
 8001164:	fa00 f202 	lsl.w	r2, r0, r2
 8001168:	430a      	orrs	r2, r1
 800116a:	43d2      	mvns	r2, r2
 800116c:	401a      	ands	r2, r3
 800116e:	68fb      	ldr	r3, [r7, #12]
 8001170:	609a      	str	r2, [r3, #8]
        break;
 8001172:	e0a2      	b.n	80012ba <config_pin+0x20e>

        case (SPEED_MEDIUM): //Putting a 01
        port->OSPEEDR |= (1<<PINPOS[pinNumber]);
 8001174:	68fb      	ldr	r3, [r7, #12]
 8001176:	689b      	ldr	r3, [r3, #8]
 8001178:	4984      	ldr	r1, [pc, #528]	; (800138c <config_pin+0x2e0>)
 800117a:	68ba      	ldr	r2, [r7, #8]
 800117c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001180:	2101      	movs	r1, #1
 8001182:	fa01 f202 	lsl.w	r2, r1, r2
 8001186:	431a      	orrs	r2, r3
 8001188:	68fb      	ldr	r3, [r7, #12]
 800118a:	609a      	str	r2, [r3, #8]
        port->OSPEEDR &= ~(1<<PINPOS[pinNumber+1]);
 800118c:	68fb      	ldr	r3, [r7, #12]
 800118e:	689b      	ldr	r3, [r3, #8]
 8001190:	68ba      	ldr	r2, [r7, #8]
 8001192:	3201      	adds	r2, #1
 8001194:	497d      	ldr	r1, [pc, #500]	; (800138c <config_pin+0x2e0>)
 8001196:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800119a:	2101      	movs	r1, #1
 800119c:	fa01 f202 	lsl.w	r2, r1, r2
 80011a0:	43d2      	mvns	r2, r2
 80011a2:	401a      	ands	r2, r3
 80011a4:	68fb      	ldr	r3, [r7, #12]
 80011a6:	609a      	str	r2, [r3, #8]
        break;
 80011a8:	e087      	b.n	80012ba <config_pin+0x20e>

        case (SPEED_HIGH): //Putting a 10
        port->OSPEEDR &= ~(1<<PINPOS[pinNumber]);
 80011aa:	68fb      	ldr	r3, [r7, #12]
 80011ac:	689b      	ldr	r3, [r3, #8]
 80011ae:	4977      	ldr	r1, [pc, #476]	; (800138c <config_pin+0x2e0>)
 80011b0:	68ba      	ldr	r2, [r7, #8]
 80011b2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80011b6:	2101      	movs	r1, #1
 80011b8:	fa01 f202 	lsl.w	r2, r1, r2
 80011bc:	43d2      	mvns	r2, r2
 80011be:	401a      	ands	r2, r3
 80011c0:	68fb      	ldr	r3, [r7, #12]
 80011c2:	609a      	str	r2, [r3, #8]
        port->OSPEEDR |= (1<<PINPOS[pinNumber+1]);
 80011c4:	68fb      	ldr	r3, [r7, #12]
 80011c6:	689b      	ldr	r3, [r3, #8]
 80011c8:	68ba      	ldr	r2, [r7, #8]
 80011ca:	3201      	adds	r2, #1
 80011cc:	496f      	ldr	r1, [pc, #444]	; (800138c <config_pin+0x2e0>)
 80011ce:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80011d2:	2101      	movs	r1, #1
 80011d4:	fa01 f202 	lsl.w	r2, r1, r2
 80011d8:	431a      	orrs	r2, r3
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	609a      	str	r2, [r3, #8]
        break;
 80011de:	e06c      	b.n	80012ba <config_pin+0x20e>

        case (SPEED_V_HIGH): //Putting a 11
        port->OSPEEDR |= (1<<PINPOS[pinNumber]);
 80011e0:	68fb      	ldr	r3, [r7, #12]
 80011e2:	689b      	ldr	r3, [r3, #8]
 80011e4:	4969      	ldr	r1, [pc, #420]	; (800138c <config_pin+0x2e0>)
 80011e6:	68ba      	ldr	r2, [r7, #8]
 80011e8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80011ec:	2101      	movs	r1, #1
 80011ee:	fa01 f202 	lsl.w	r2, r1, r2
 80011f2:	431a      	orrs	r2, r3
 80011f4:	68fb      	ldr	r3, [r7, #12]
 80011f6:	609a      	str	r2, [r3, #8]
        port->OSPEEDR |= (1<<PINPOS[pinNumber+1]);
 80011f8:	68fb      	ldr	r3, [r7, #12]
 80011fa:	689b      	ldr	r3, [r3, #8]
 80011fc:	68ba      	ldr	r2, [r7, #8]
 80011fe:	3201      	adds	r2, #1
 8001200:	4962      	ldr	r1, [pc, #392]	; (800138c <config_pin+0x2e0>)
 8001202:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001206:	2101      	movs	r1, #1
 8001208:	fa01 f202 	lsl.w	r2, r1, r2
 800120c:	431a      	orrs	r2, r3
 800120e:	68fb      	ldr	r3, [r7, #12]
 8001210:	609a      	str	r2, [r3, #8]
        break;
 8001212:	bf00      	nop
 8001214:	e051      	b.n	80012ba <config_pin+0x20e>
        }
    }

    else {
       switch(mode) {
 8001216:	683b      	ldr	r3, [r7, #0]
 8001218:	2b02      	cmp	r3, #2
 800121a:	d019      	beq.n	8001250 <config_pin+0x1a4>
 800121c:	2b03      	cmp	r3, #3
 800121e:	d032      	beq.n	8001286 <config_pin+0x1da>
 8001220:	2b00      	cmp	r3, #0
 8001222:	d14a      	bne.n	80012ba <config_pin+0x20e>
            case (INPUT_MODE): //00
            port->MODER &= ~(1<<PINPOS[pinNumber]) & ~(1<<PINPOS[pinNumber+1]);
 8001224:	68fb      	ldr	r3, [r7, #12]
 8001226:	681b      	ldr	r3, [r3, #0]
 8001228:	4958      	ldr	r1, [pc, #352]	; (800138c <config_pin+0x2e0>)
 800122a:	68ba      	ldr	r2, [r7, #8]
 800122c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001230:	2101      	movs	r1, #1
 8001232:	4091      	lsls	r1, r2
 8001234:	68ba      	ldr	r2, [r7, #8]
 8001236:	3201      	adds	r2, #1
 8001238:	4854      	ldr	r0, [pc, #336]	; (800138c <config_pin+0x2e0>)
 800123a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800123e:	2001      	movs	r0, #1
 8001240:	fa00 f202 	lsl.w	r2, r0, r2
 8001244:	430a      	orrs	r2, r1
 8001246:	43d2      	mvns	r2, r2
 8001248:	401a      	ands	r2, r3
 800124a:	68fb      	ldr	r3, [r7, #12]
 800124c:	601a      	str	r2, [r3, #0]
            break;
 800124e:	e034      	b.n	80012ba <config_pin+0x20e>

            case (ALT_MODE): //10
            port->MODER &= ~(1<<PINPOS[pinNumber]);
 8001250:	68fb      	ldr	r3, [r7, #12]
 8001252:	681b      	ldr	r3, [r3, #0]
 8001254:	494d      	ldr	r1, [pc, #308]	; (800138c <config_pin+0x2e0>)
 8001256:	68ba      	ldr	r2, [r7, #8]
 8001258:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800125c:	2101      	movs	r1, #1
 800125e:	fa01 f202 	lsl.w	r2, r1, r2
 8001262:	43d2      	mvns	r2, r2
 8001264:	401a      	ands	r2, r3
 8001266:	68fb      	ldr	r3, [r7, #12]
 8001268:	601a      	str	r2, [r3, #0]
            port->MODER |= (1<<(PINPOS[pinNumber]+1));
 800126a:	68fb      	ldr	r3, [r7, #12]
 800126c:	681b      	ldr	r3, [r3, #0]
 800126e:	4947      	ldr	r1, [pc, #284]	; (800138c <config_pin+0x2e0>)
 8001270:	68ba      	ldr	r2, [r7, #8]
 8001272:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001276:	3201      	adds	r2, #1
 8001278:	2101      	movs	r1, #1
 800127a:	fa01 f202 	lsl.w	r2, r1, r2
 800127e:	431a      	orrs	r2, r3
 8001280:	68fb      	ldr	r3, [r7, #12]
 8001282:	601a      	str	r2, [r3, #0]
            break;
 8001284:	e019      	b.n	80012ba <config_pin+0x20e>

            case (ANALOG_MODE): //11
            port->MODER |= (1<<PINPOS[pinNumber]);
 8001286:	68fb      	ldr	r3, [r7, #12]
 8001288:	681b      	ldr	r3, [r3, #0]
 800128a:	4940      	ldr	r1, [pc, #256]	; (800138c <config_pin+0x2e0>)
 800128c:	68ba      	ldr	r2, [r7, #8]
 800128e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001292:	2101      	movs	r1, #1
 8001294:	fa01 f202 	lsl.w	r2, r1, r2
 8001298:	431a      	orrs	r2, r3
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	601a      	str	r2, [r3, #0]
            port->MODER |= (1<<(PINPOS[pinNumber]+1));
 800129e:	68fb      	ldr	r3, [r7, #12]
 80012a0:	681b      	ldr	r3, [r3, #0]
 80012a2:	493a      	ldr	r1, [pc, #232]	; (800138c <config_pin+0x2e0>)
 80012a4:	68ba      	ldr	r2, [r7, #8]
 80012a6:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80012aa:	3201      	adds	r2, #1
 80012ac:	2101      	movs	r1, #1
 80012ae:	fa01 f202 	lsl.w	r2, r1, r2
 80012b2:	431a      	orrs	r2, r3
 80012b4:	68fb      	ldr	r3, [r7, #12]
 80012b6:	601a      	str	r2, [r3, #0]
            break;
 80012b8:	bf00      	nop
            }
    }

    if (mode == ALT_MODE) {
 80012ba:	683b      	ldr	r3, [r7, #0]
 80012bc:	2b02      	cmp	r3, #2
 80012be:	f040 8734 	bne.w	800212a <config_pin+0x107e>
        if (pinNumber <=7) { //Low Register, AFRL
 80012c2:	68bb      	ldr	r3, [r7, #8]
 80012c4:	2b07      	cmp	r3, #7
 80012c6:	f200 83a0 	bhi.w	8001a0a <config_pin+0x95e>
            switch(alt_func) {
 80012ca:	69fb      	ldr	r3, [r7, #28]
 80012cc:	2b0f      	cmp	r3, #15
 80012ce:	f200 872c 	bhi.w	800212a <config_pin+0x107e>
 80012d2:	a201      	add	r2, pc, #4	; (adr r2, 80012d8 <config_pin+0x22c>)
 80012d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80012d8:	08001319 	.word	0x08001319
 80012dc:	08001395 	.word	0x08001395
 80012e0:	08001405 	.word	0x08001405
 80012e4:	08001475 	.word	0x08001475
 80012e8:	080014e3 	.word	0x080014e3
 80012ec:	08001553 	.word	0x08001553
 80012f0:	080015c1 	.word	0x080015c1
 80012f4:	08001635 	.word	0x08001635
 80012f8:	080016a1 	.word	0x080016a1
 80012fc:	08001711 	.word	0x08001711
 8001300:	0800177f 	.word	0x0800177f
 8001304:	080017ed 	.word	0x080017ed
 8001308:	08001859 	.word	0x08001859
 800130c:	080018cd 	.word	0x080018cd
 8001310:	08001937 	.word	0x08001937
 8001314:	080019a1 	.word	0x080019a1
                case (AF0):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001318:	68fb      	ldr	r3, [r7, #12]
 800131a:	6a1b      	ldr	r3, [r3, #32]
 800131c:	491c      	ldr	r1, [pc, #112]	; (8001390 <config_pin+0x2e4>)
 800131e:	68ba      	ldr	r2, [r7, #8]
 8001320:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001324:	2101      	movs	r1, #1
 8001326:	fa01 f202 	lsl.w	r2, r1, r2
 800132a:	43d2      	mvns	r2, r2
 800132c:	401a      	ands	r2, r3
 800132e:	68fb      	ldr	r3, [r7, #12]
 8001330:	621a      	str	r2, [r3, #32]
                   port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001332:	68fb      	ldr	r3, [r7, #12]
 8001334:	6a1b      	ldr	r3, [r3, #32]
 8001336:	4916      	ldr	r1, [pc, #88]	; (8001390 <config_pin+0x2e4>)
 8001338:	68ba      	ldr	r2, [r7, #8]
 800133a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800133e:	3201      	adds	r2, #1
 8001340:	2101      	movs	r1, #1
 8001342:	fa01 f202 	lsl.w	r2, r1, r2
 8001346:	43d2      	mvns	r2, r2
 8001348:	401a      	ands	r2, r3
 800134a:	68fb      	ldr	r3, [r7, #12]
 800134c:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 800134e:	68fb      	ldr	r3, [r7, #12]
 8001350:	6a1b      	ldr	r3, [r3, #32]
 8001352:	490f      	ldr	r1, [pc, #60]	; (8001390 <config_pin+0x2e4>)
 8001354:	68ba      	ldr	r2, [r7, #8]
 8001356:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800135a:	3202      	adds	r2, #2
 800135c:	2101      	movs	r1, #1
 800135e:	fa01 f202 	lsl.w	r2, r1, r2
 8001362:	43d2      	mvns	r2, r2
 8001364:	401a      	ands	r2, r3
 8001366:	68fb      	ldr	r3, [r7, #12]
 8001368:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 800136a:	68fb      	ldr	r3, [r7, #12]
 800136c:	6a1b      	ldr	r3, [r3, #32]
 800136e:	4908      	ldr	r1, [pc, #32]	; (8001390 <config_pin+0x2e4>)
 8001370:	68ba      	ldr	r2, [r7, #8]
 8001372:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001376:	3203      	adds	r2, #3
 8001378:	2101      	movs	r1, #1
 800137a:	fa01 f202 	lsl.w	r2, r1, r2
 800137e:	43d2      	mvns	r2, r2
 8001380:	401a      	ands	r2, r3
 8001382:	68fb      	ldr	r3, [r7, #12]
 8001384:	621a      	str	r2, [r3, #32]
                    break;
 8001386:	f000 bed0 	b.w	800212a <config_pin+0x107e>
 800138a:	bf00      	nop
 800138c:	20000000 	.word	0x20000000
 8001390:	20000040 	.word	0x20000040

                case (AF1):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001394:	68fb      	ldr	r3, [r7, #12]
 8001396:	6a1b      	ldr	r3, [r3, #32]
 8001398:	49a5      	ldr	r1, [pc, #660]	; (8001630 <config_pin+0x584>)
 800139a:	68ba      	ldr	r2, [r7, #8]
 800139c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80013a0:	2101      	movs	r1, #1
 80013a2:	fa01 f202 	lsl.w	r2, r1, r2
 80013a6:	431a      	orrs	r2, r3
 80013a8:	68fb      	ldr	r3, [r7, #12]
 80013aa:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 80013ac:	68fb      	ldr	r3, [r7, #12]
 80013ae:	6a1b      	ldr	r3, [r3, #32]
 80013b0:	499f      	ldr	r1, [pc, #636]	; (8001630 <config_pin+0x584>)
 80013b2:	68ba      	ldr	r2, [r7, #8]
 80013b4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80013b8:	3201      	adds	r2, #1
 80013ba:	2101      	movs	r1, #1
 80013bc:	fa01 f202 	lsl.w	r2, r1, r2
 80013c0:	43d2      	mvns	r2, r2
 80013c2:	401a      	ands	r2, r3
 80013c4:	68fb      	ldr	r3, [r7, #12]
 80013c6:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 80013c8:	68fb      	ldr	r3, [r7, #12]
 80013ca:	6a1b      	ldr	r3, [r3, #32]
 80013cc:	4998      	ldr	r1, [pc, #608]	; (8001630 <config_pin+0x584>)
 80013ce:	68ba      	ldr	r2, [r7, #8]
 80013d0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80013d4:	3202      	adds	r2, #2
 80013d6:	2101      	movs	r1, #1
 80013d8:	fa01 f202 	lsl.w	r2, r1, r2
 80013dc:	43d2      	mvns	r2, r2
 80013de:	401a      	ands	r2, r3
 80013e0:	68fb      	ldr	r3, [r7, #12]
 80013e2:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 80013e4:	68fb      	ldr	r3, [r7, #12]
 80013e6:	6a1b      	ldr	r3, [r3, #32]
 80013e8:	4991      	ldr	r1, [pc, #580]	; (8001630 <config_pin+0x584>)
 80013ea:	68ba      	ldr	r2, [r7, #8]
 80013ec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80013f0:	3203      	adds	r2, #3
 80013f2:	2101      	movs	r1, #1
 80013f4:	fa01 f202 	lsl.w	r2, r1, r2
 80013f8:	43d2      	mvns	r2, r2
 80013fa:	401a      	ands	r2, r3
 80013fc:	68fb      	ldr	r3, [r7, #12]
 80013fe:	621a      	str	r2, [r3, #32]
                    break;
 8001400:	f000 be93 	b.w	800212a <config_pin+0x107e>

                case (AF2):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001404:	68fb      	ldr	r3, [r7, #12]
 8001406:	6a1b      	ldr	r3, [r3, #32]
 8001408:	4989      	ldr	r1, [pc, #548]	; (8001630 <config_pin+0x584>)
 800140a:	68ba      	ldr	r2, [r7, #8]
 800140c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001410:	2101      	movs	r1, #1
 8001412:	fa01 f202 	lsl.w	r2, r1, r2
 8001416:	43d2      	mvns	r2, r2
 8001418:	401a      	ands	r2, r3
 800141a:	68fb      	ldr	r3, [r7, #12]
 800141c:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 800141e:	68fb      	ldr	r3, [r7, #12]
 8001420:	6a1b      	ldr	r3, [r3, #32]
 8001422:	4983      	ldr	r1, [pc, #524]	; (8001630 <config_pin+0x584>)
 8001424:	68ba      	ldr	r2, [r7, #8]
 8001426:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800142a:	3201      	adds	r2, #1
 800142c:	2101      	movs	r1, #1
 800142e:	fa01 f202 	lsl.w	r2, r1, r2
 8001432:	431a      	orrs	r2, r3
 8001434:	68fb      	ldr	r3, [r7, #12]
 8001436:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001438:	68fb      	ldr	r3, [r7, #12]
 800143a:	6a1b      	ldr	r3, [r3, #32]
 800143c:	497c      	ldr	r1, [pc, #496]	; (8001630 <config_pin+0x584>)
 800143e:	68ba      	ldr	r2, [r7, #8]
 8001440:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001444:	3202      	adds	r2, #2
 8001446:	2101      	movs	r1, #1
 8001448:	fa01 f202 	lsl.w	r2, r1, r2
 800144c:	43d2      	mvns	r2, r2
 800144e:	401a      	ands	r2, r3
 8001450:	68fb      	ldr	r3, [r7, #12]
 8001452:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001454:	68fb      	ldr	r3, [r7, #12]
 8001456:	6a1b      	ldr	r3, [r3, #32]
 8001458:	4975      	ldr	r1, [pc, #468]	; (8001630 <config_pin+0x584>)
 800145a:	68ba      	ldr	r2, [r7, #8]
 800145c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001460:	3203      	adds	r2, #3
 8001462:	2101      	movs	r1, #1
 8001464:	fa01 f202 	lsl.w	r2, r1, r2
 8001468:	43d2      	mvns	r2, r2
 800146a:	401a      	ands	r2, r3
 800146c:	68fb      	ldr	r3, [r7, #12]
 800146e:	621a      	str	r2, [r3, #32]
                    break;
 8001470:	f000 be5b 	b.w	800212a <config_pin+0x107e>

                case (AF3):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001474:	68fb      	ldr	r3, [r7, #12]
 8001476:	6a1b      	ldr	r3, [r3, #32]
 8001478:	496d      	ldr	r1, [pc, #436]	; (8001630 <config_pin+0x584>)
 800147a:	68ba      	ldr	r2, [r7, #8]
 800147c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001480:	2101      	movs	r1, #1
 8001482:	fa01 f202 	lsl.w	r2, r1, r2
 8001486:	431a      	orrs	r2, r3
 8001488:	68fb      	ldr	r3, [r7, #12]
 800148a:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); 	//1 in 2nd position
 800148c:	68fb      	ldr	r3, [r7, #12]
 800148e:	6a1b      	ldr	r3, [r3, #32]
 8001490:	4967      	ldr	r1, [pc, #412]	; (8001630 <config_pin+0x584>)
 8001492:	68ba      	ldr	r2, [r7, #8]
 8001494:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001498:	3201      	adds	r2, #1
 800149a:	2101      	movs	r1, #1
 800149c:	fa01 f202 	lsl.w	r2, r1, r2
 80014a0:	431a      	orrs	r2, r3
 80014a2:	68fb      	ldr	r3, [r7, #12]
 80014a4:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 80014a6:	68fb      	ldr	r3, [r7, #12]
 80014a8:	6a1b      	ldr	r3, [r3, #32]
 80014aa:	4961      	ldr	r1, [pc, #388]	; (8001630 <config_pin+0x584>)
 80014ac:	68ba      	ldr	r2, [r7, #8]
 80014ae:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80014b2:	3202      	adds	r2, #2
 80014b4:	2101      	movs	r1, #1
 80014b6:	fa01 f202 	lsl.w	r2, r1, r2
 80014ba:	43d2      	mvns	r2, r2
 80014bc:	401a      	ands	r2, r3
 80014be:	68fb      	ldr	r3, [r7, #12]
 80014c0:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 80014c2:	68fb      	ldr	r3, [r7, #12]
 80014c4:	6a1b      	ldr	r3, [r3, #32]
 80014c6:	495a      	ldr	r1, [pc, #360]	; (8001630 <config_pin+0x584>)
 80014c8:	68ba      	ldr	r2, [r7, #8]
 80014ca:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80014ce:	3203      	adds	r2, #3
 80014d0:	2101      	movs	r1, #1
 80014d2:	fa01 f202 	lsl.w	r2, r1, r2
 80014d6:	43d2      	mvns	r2, r2
 80014d8:	401a      	ands	r2, r3
 80014da:	68fb      	ldr	r3, [r7, #12]
 80014dc:	621a      	str	r2, [r3, #32]
                    break;
 80014de:	f000 be24 	b.w	800212a <config_pin+0x107e>

                case (AF4):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 80014e2:	68fb      	ldr	r3, [r7, #12]
 80014e4:	6a1b      	ldr	r3, [r3, #32]
 80014e6:	4952      	ldr	r1, [pc, #328]	; (8001630 <config_pin+0x584>)
 80014e8:	68ba      	ldr	r2, [r7, #8]
 80014ea:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80014ee:	2101      	movs	r1, #1
 80014f0:	fa01 f202 	lsl.w	r2, r1, r2
 80014f4:	43d2      	mvns	r2, r2
 80014f6:	401a      	ands	r2, r3
 80014f8:	68fb      	ldr	r3, [r7, #12]
 80014fa:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 80014fc:	68fb      	ldr	r3, [r7, #12]
 80014fe:	6a1b      	ldr	r3, [r3, #32]
 8001500:	494b      	ldr	r1, [pc, #300]	; (8001630 <config_pin+0x584>)
 8001502:	68ba      	ldr	r2, [r7, #8]
 8001504:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001508:	3201      	adds	r2, #1
 800150a:	2101      	movs	r1, #1
 800150c:	fa01 f202 	lsl.w	r2, r1, r2
 8001510:	43d2      	mvns	r2, r2
 8001512:	401a      	ands	r2, r3
 8001514:	68fb      	ldr	r3, [r7, #12]
 8001516:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	6a1b      	ldr	r3, [r3, #32]
 800151c:	4944      	ldr	r1, [pc, #272]	; (8001630 <config_pin+0x584>)
 800151e:	68ba      	ldr	r2, [r7, #8]
 8001520:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001524:	3202      	adds	r2, #2
 8001526:	2101      	movs	r1, #1
 8001528:	fa01 f202 	lsl.w	r2, r1, r2
 800152c:	431a      	orrs	r2, r3
 800152e:	68fb      	ldr	r3, [r7, #12]
 8001530:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001532:	68fb      	ldr	r3, [r7, #12]
 8001534:	6a1b      	ldr	r3, [r3, #32]
 8001536:	493e      	ldr	r1, [pc, #248]	; (8001630 <config_pin+0x584>)
 8001538:	68ba      	ldr	r2, [r7, #8]
 800153a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800153e:	3203      	adds	r2, #3
 8001540:	2101      	movs	r1, #1
 8001542:	fa01 f202 	lsl.w	r2, r1, r2
 8001546:	43d2      	mvns	r2, r2
 8001548:	401a      	ands	r2, r3
 800154a:	68fb      	ldr	r3, [r7, #12]
 800154c:	621a      	str	r2, [r3, #32]
                    break;
 800154e:	f000 bdec 	b.w	800212a <config_pin+0x107e>

                case (AF5):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001552:	68fb      	ldr	r3, [r7, #12]
 8001554:	6a1b      	ldr	r3, [r3, #32]
 8001556:	4936      	ldr	r1, [pc, #216]	; (8001630 <config_pin+0x584>)
 8001558:	68ba      	ldr	r2, [r7, #8]
 800155a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800155e:	2101      	movs	r1, #1
 8001560:	fa01 f202 	lsl.w	r2, r1, r2
 8001564:	431a      	orrs	r2, r3
 8001566:	68fb      	ldr	r3, [r7, #12]
 8001568:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 800156a:	68fb      	ldr	r3, [r7, #12]
 800156c:	6a1b      	ldr	r3, [r3, #32]
 800156e:	4930      	ldr	r1, [pc, #192]	; (8001630 <config_pin+0x584>)
 8001570:	68ba      	ldr	r2, [r7, #8]
 8001572:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001576:	3201      	adds	r2, #1
 8001578:	2101      	movs	r1, #1
 800157a:	fa01 f202 	lsl.w	r2, r1, r2
 800157e:	43d2      	mvns	r2, r2
 8001580:	401a      	ands	r2, r3
 8001582:	68fb      	ldr	r3, [r7, #12]
 8001584:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001586:	68fb      	ldr	r3, [r7, #12]
 8001588:	6a1b      	ldr	r3, [r3, #32]
 800158a:	4929      	ldr	r1, [pc, #164]	; (8001630 <config_pin+0x584>)
 800158c:	68ba      	ldr	r2, [r7, #8]
 800158e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001592:	3202      	adds	r2, #2
 8001594:	2101      	movs	r1, #1
 8001596:	fa01 f202 	lsl.w	r2, r1, r2
 800159a:	431a      	orrs	r2, r3
 800159c:	68fb      	ldr	r3, [r7, #12]
 800159e:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 80015a0:	68fb      	ldr	r3, [r7, #12]
 80015a2:	6a1b      	ldr	r3, [r3, #32]
 80015a4:	4922      	ldr	r1, [pc, #136]	; (8001630 <config_pin+0x584>)
 80015a6:	68ba      	ldr	r2, [r7, #8]
 80015a8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80015ac:	3203      	adds	r2, #3
 80015ae:	2101      	movs	r1, #1
 80015b0:	fa01 f202 	lsl.w	r2, r1, r2
 80015b4:	43d2      	mvns	r2, r2
 80015b6:	401a      	ands	r2, r3
 80015b8:	68fb      	ldr	r3, [r7, #12]
 80015ba:	621a      	str	r2, [r3, #32]
                    break;
 80015bc:	f000 bdb5 	b.w	800212a <config_pin+0x107e>

                case (AF6):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 80015c0:	68fb      	ldr	r3, [r7, #12]
 80015c2:	6a1b      	ldr	r3, [r3, #32]
 80015c4:	491a      	ldr	r1, [pc, #104]	; (8001630 <config_pin+0x584>)
 80015c6:	68ba      	ldr	r2, [r7, #8]
 80015c8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80015cc:	2101      	movs	r1, #1
 80015ce:	fa01 f202 	lsl.w	r2, r1, r2
 80015d2:	43d2      	mvns	r2, r2
 80015d4:	401a      	ands	r2, r3
 80015d6:	68fb      	ldr	r3, [r7, #12]
 80015d8:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	6a1b      	ldr	r3, [r3, #32]
 80015de:	4914      	ldr	r1, [pc, #80]	; (8001630 <config_pin+0x584>)
 80015e0:	68ba      	ldr	r2, [r7, #8]
 80015e2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80015e6:	3201      	adds	r2, #1
 80015e8:	2101      	movs	r1, #1
 80015ea:	fa01 f202 	lsl.w	r2, r1, r2
 80015ee:	431a      	orrs	r2, r3
 80015f0:	68fb      	ldr	r3, [r7, #12]
 80015f2:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 80015f4:	68fb      	ldr	r3, [r7, #12]
 80015f6:	6a1b      	ldr	r3, [r3, #32]
 80015f8:	490d      	ldr	r1, [pc, #52]	; (8001630 <config_pin+0x584>)
 80015fa:	68ba      	ldr	r2, [r7, #8]
 80015fc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001600:	3202      	adds	r2, #2
 8001602:	2101      	movs	r1, #1
 8001604:	fa01 f202 	lsl.w	r2, r1, r2
 8001608:	431a      	orrs	r2, r3
 800160a:	68fb      	ldr	r3, [r7, #12]
 800160c:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 800160e:	68fb      	ldr	r3, [r7, #12]
 8001610:	6a1b      	ldr	r3, [r3, #32]
 8001612:	4907      	ldr	r1, [pc, #28]	; (8001630 <config_pin+0x584>)
 8001614:	68ba      	ldr	r2, [r7, #8]
 8001616:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800161a:	3203      	adds	r2, #3
 800161c:	2101      	movs	r1, #1
 800161e:	fa01 f202 	lsl.w	r2, r1, r2
 8001622:	43d2      	mvns	r2, r2
 8001624:	401a      	ands	r2, r3
 8001626:	68fb      	ldr	r3, [r7, #12]
 8001628:	621a      	str	r2, [r3, #32]
                    break;
 800162a:	f000 bd7e 	b.w	800212a <config_pin+0x107e>
 800162e:	bf00      	nop
 8001630:	20000040 	.word	0x20000040

                case (AF7):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001634:	68fb      	ldr	r3, [r7, #12]
 8001636:	6a1b      	ldr	r3, [r3, #32]
 8001638:	49a3      	ldr	r1, [pc, #652]	; (80018c8 <config_pin+0x81c>)
 800163a:	68ba      	ldr	r2, [r7, #8]
 800163c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001640:	2101      	movs	r1, #1
 8001642:	fa01 f202 	lsl.w	r2, r1, r2
 8001646:	431a      	orrs	r2, r3
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 800164c:	68fb      	ldr	r3, [r7, #12]
 800164e:	6a1b      	ldr	r3, [r3, #32]
 8001650:	499d      	ldr	r1, [pc, #628]	; (80018c8 <config_pin+0x81c>)
 8001652:	68ba      	ldr	r2, [r7, #8]
 8001654:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001658:	3201      	adds	r2, #1
 800165a:	2101      	movs	r1, #1
 800165c:	fa01 f202 	lsl.w	r2, r1, r2
 8001660:	431a      	orrs	r2, r3
 8001662:	68fb      	ldr	r3, [r7, #12]
 8001664:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001666:	68fb      	ldr	r3, [r7, #12]
 8001668:	6a1b      	ldr	r3, [r3, #32]
 800166a:	4997      	ldr	r1, [pc, #604]	; (80018c8 <config_pin+0x81c>)
 800166c:	68ba      	ldr	r2, [r7, #8]
 800166e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001672:	3202      	adds	r2, #2
 8001674:	2101      	movs	r1, #1
 8001676:	fa01 f202 	lsl.w	r2, r1, r2
 800167a:	431a      	orrs	r2, r3
 800167c:	68fb      	ldr	r3, [r7, #12]
 800167e:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001680:	68fb      	ldr	r3, [r7, #12]
 8001682:	6a1b      	ldr	r3, [r3, #32]
 8001684:	4990      	ldr	r1, [pc, #576]	; (80018c8 <config_pin+0x81c>)
 8001686:	68ba      	ldr	r2, [r7, #8]
 8001688:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800168c:	3203      	adds	r2, #3
 800168e:	2101      	movs	r1, #1
 8001690:	fa01 f202 	lsl.w	r2, r1, r2
 8001694:	43d2      	mvns	r2, r2
 8001696:	401a      	ands	r2, r3
 8001698:	68fb      	ldr	r3, [r7, #12]
 800169a:	621a      	str	r2, [r3, #32]
                    break;
 800169c:	f000 bd45 	b.w	800212a <config_pin+0x107e>

                case (AF8):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 80016a0:	68fb      	ldr	r3, [r7, #12]
 80016a2:	6a1b      	ldr	r3, [r3, #32]
 80016a4:	4988      	ldr	r1, [pc, #544]	; (80018c8 <config_pin+0x81c>)
 80016a6:	68ba      	ldr	r2, [r7, #8]
 80016a8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80016ac:	2101      	movs	r1, #1
 80016ae:	fa01 f202 	lsl.w	r2, r1, r2
 80016b2:	43d2      	mvns	r2, r2
 80016b4:	401a      	ands	r2, r3
 80016b6:	68fb      	ldr	r3, [r7, #12]
 80016b8:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 80016ba:	68fb      	ldr	r3, [r7, #12]
 80016bc:	6a1b      	ldr	r3, [r3, #32]
 80016be:	4982      	ldr	r1, [pc, #520]	; (80018c8 <config_pin+0x81c>)
 80016c0:	68ba      	ldr	r2, [r7, #8]
 80016c2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80016c6:	3201      	adds	r2, #1
 80016c8:	2101      	movs	r1, #1
 80016ca:	fa01 f202 	lsl.w	r2, r1, r2
 80016ce:	43d2      	mvns	r2, r2
 80016d0:	401a      	ands	r2, r3
 80016d2:	68fb      	ldr	r3, [r7, #12]
 80016d4:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 80016d6:	68fb      	ldr	r3, [r7, #12]
 80016d8:	6a1b      	ldr	r3, [r3, #32]
 80016da:	497b      	ldr	r1, [pc, #492]	; (80018c8 <config_pin+0x81c>)
 80016dc:	68ba      	ldr	r2, [r7, #8]
 80016de:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80016e2:	3202      	adds	r2, #2
 80016e4:	2101      	movs	r1, #1
 80016e6:	fa01 f202 	lsl.w	r2, r1, r2
 80016ea:	43d2      	mvns	r2, r2
 80016ec:	401a      	ands	r2, r3
 80016ee:	68fb      	ldr	r3, [r7, #12]
 80016f0:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	6a1b      	ldr	r3, [r3, #32]
 80016f6:	4974      	ldr	r1, [pc, #464]	; (80018c8 <config_pin+0x81c>)
 80016f8:	68ba      	ldr	r2, [r7, #8]
 80016fa:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80016fe:	3203      	adds	r2, #3
 8001700:	2101      	movs	r1, #1
 8001702:	fa01 f202 	lsl.w	r2, r1, r2
 8001706:	431a      	orrs	r2, r3
 8001708:	68fb      	ldr	r3, [r7, #12]
 800170a:	621a      	str	r2, [r3, #32]
                    break;
 800170c:	f000 bd0d 	b.w	800212a <config_pin+0x107e>

                case (AF9):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001710:	68fb      	ldr	r3, [r7, #12]
 8001712:	6a1b      	ldr	r3, [r3, #32]
 8001714:	496c      	ldr	r1, [pc, #432]	; (80018c8 <config_pin+0x81c>)
 8001716:	68ba      	ldr	r2, [r7, #8]
 8001718:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800171c:	2101      	movs	r1, #1
 800171e:	fa01 f202 	lsl.w	r2, r1, r2
 8001722:	431a      	orrs	r2, r3
 8001724:	68fb      	ldr	r3, [r7, #12]
 8001726:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001728:	68fb      	ldr	r3, [r7, #12]
 800172a:	6a1b      	ldr	r3, [r3, #32]
 800172c:	4966      	ldr	r1, [pc, #408]	; (80018c8 <config_pin+0x81c>)
 800172e:	68ba      	ldr	r2, [r7, #8]
 8001730:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001734:	3201      	adds	r2, #1
 8001736:	2101      	movs	r1, #1
 8001738:	fa01 f202 	lsl.w	r2, r1, r2
 800173c:	43d2      	mvns	r2, r2
 800173e:	401a      	ands	r2, r3
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	6a1b      	ldr	r3, [r3, #32]
 8001748:	495f      	ldr	r1, [pc, #380]	; (80018c8 <config_pin+0x81c>)
 800174a:	68ba      	ldr	r2, [r7, #8]
 800174c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001750:	3202      	adds	r2, #2
 8001752:	2101      	movs	r1, #1
 8001754:	fa01 f202 	lsl.w	r2, r1, r2
 8001758:	43d2      	mvns	r2, r2
 800175a:	401a      	ands	r2, r3
 800175c:	68fb      	ldr	r3, [r7, #12]
 800175e:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001760:	68fb      	ldr	r3, [r7, #12]
 8001762:	6a1b      	ldr	r3, [r3, #32]
 8001764:	4958      	ldr	r1, [pc, #352]	; (80018c8 <config_pin+0x81c>)
 8001766:	68ba      	ldr	r2, [r7, #8]
 8001768:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800176c:	3203      	adds	r2, #3
 800176e:	2101      	movs	r1, #1
 8001770:	fa01 f202 	lsl.w	r2, r1, r2
 8001774:	431a      	orrs	r2, r3
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	621a      	str	r2, [r3, #32]
                    break;
 800177a:	f000 bcd6 	b.w	800212a <config_pin+0x107e>

                case (AF10):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	6a1b      	ldr	r3, [r3, #32]
 8001782:	4951      	ldr	r1, [pc, #324]	; (80018c8 <config_pin+0x81c>)
 8001784:	68ba      	ldr	r2, [r7, #8]
 8001786:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800178a:	2101      	movs	r1, #1
 800178c:	fa01 f202 	lsl.w	r2, r1, r2
 8001790:	43d2      	mvns	r2, r2
 8001792:	401a      	ands	r2, r3
 8001794:	68fb      	ldr	r3, [r7, #12]
 8001796:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001798:	68fb      	ldr	r3, [r7, #12]
 800179a:	6a1b      	ldr	r3, [r3, #32]
 800179c:	494a      	ldr	r1, [pc, #296]	; (80018c8 <config_pin+0x81c>)
 800179e:	68ba      	ldr	r2, [r7, #8]
 80017a0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80017a4:	3201      	adds	r2, #1
 80017a6:	2101      	movs	r1, #1
 80017a8:	fa01 f202 	lsl.w	r2, r1, r2
 80017ac:	431a      	orrs	r2, r3
 80017ae:	68fb      	ldr	r3, [r7, #12]
 80017b0:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 80017b2:	68fb      	ldr	r3, [r7, #12]
 80017b4:	6a1b      	ldr	r3, [r3, #32]
 80017b6:	4944      	ldr	r1, [pc, #272]	; (80018c8 <config_pin+0x81c>)
 80017b8:	68ba      	ldr	r2, [r7, #8]
 80017ba:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80017be:	3202      	adds	r2, #2
 80017c0:	2101      	movs	r1, #1
 80017c2:	fa01 f202 	lsl.w	r2, r1, r2
 80017c6:	43d2      	mvns	r2, r2
 80017c8:	401a      	ands	r2, r3
 80017ca:	68fb      	ldr	r3, [r7, #12]
 80017cc:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 80017ce:	68fb      	ldr	r3, [r7, #12]
 80017d0:	6a1b      	ldr	r3, [r3, #32]
 80017d2:	493d      	ldr	r1, [pc, #244]	; (80018c8 <config_pin+0x81c>)
 80017d4:	68ba      	ldr	r2, [r7, #8]
 80017d6:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80017da:	3203      	adds	r2, #3
 80017dc:	2101      	movs	r1, #1
 80017de:	fa01 f202 	lsl.w	r2, r1, r2
 80017e2:	431a      	orrs	r2, r3
 80017e4:	68fb      	ldr	r3, [r7, #12]
 80017e6:	621a      	str	r2, [r3, #32]
                    break;
 80017e8:	f000 bc9f 	b.w	800212a <config_pin+0x107e>

                case (AF11):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	6a1b      	ldr	r3, [r3, #32]
 80017f0:	4935      	ldr	r1, [pc, #212]	; (80018c8 <config_pin+0x81c>)
 80017f2:	68ba      	ldr	r2, [r7, #8]
 80017f4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80017f8:	2101      	movs	r1, #1
 80017fa:	fa01 f202 	lsl.w	r2, r1, r2
 80017fe:	431a      	orrs	r2, r3
 8001800:	68fb      	ldr	r3, [r7, #12]
 8001802:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001804:	68fb      	ldr	r3, [r7, #12]
 8001806:	6a1b      	ldr	r3, [r3, #32]
 8001808:	492f      	ldr	r1, [pc, #188]	; (80018c8 <config_pin+0x81c>)
 800180a:	68ba      	ldr	r2, [r7, #8]
 800180c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001810:	3201      	adds	r2, #1
 8001812:	2101      	movs	r1, #1
 8001814:	fa01 f202 	lsl.w	r2, r1, r2
 8001818:	431a      	orrs	r2, r3
 800181a:	68fb      	ldr	r3, [r7, #12]
 800181c:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 800181e:	68fb      	ldr	r3, [r7, #12]
 8001820:	6a1b      	ldr	r3, [r3, #32]
 8001822:	4929      	ldr	r1, [pc, #164]	; (80018c8 <config_pin+0x81c>)
 8001824:	68ba      	ldr	r2, [r7, #8]
 8001826:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800182a:	3202      	adds	r2, #2
 800182c:	2101      	movs	r1, #1
 800182e:	fa01 f202 	lsl.w	r2, r1, r2
 8001832:	43d2      	mvns	r2, r2
 8001834:	401a      	ands	r2, r3
 8001836:	68fb      	ldr	r3, [r7, #12]
 8001838:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 800183a:	68fb      	ldr	r3, [r7, #12]
 800183c:	6a1b      	ldr	r3, [r3, #32]
 800183e:	4922      	ldr	r1, [pc, #136]	; (80018c8 <config_pin+0x81c>)
 8001840:	68ba      	ldr	r2, [r7, #8]
 8001842:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001846:	3203      	adds	r2, #3
 8001848:	2101      	movs	r1, #1
 800184a:	fa01 f202 	lsl.w	r2, r1, r2
 800184e:	431a      	orrs	r2, r3
 8001850:	68fb      	ldr	r3, [r7, #12]
 8001852:	621a      	str	r2, [r3, #32]
                    break;
 8001854:	f000 bc69 	b.w	800212a <config_pin+0x107e>

                case (AF12):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001858:	68fb      	ldr	r3, [r7, #12]
 800185a:	6a1b      	ldr	r3, [r3, #32]
 800185c:	491a      	ldr	r1, [pc, #104]	; (80018c8 <config_pin+0x81c>)
 800185e:	68ba      	ldr	r2, [r7, #8]
 8001860:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001864:	2101      	movs	r1, #1
 8001866:	fa01 f202 	lsl.w	r2, r1, r2
 800186a:	43d2      	mvns	r2, r2
 800186c:	401a      	ands	r2, r3
 800186e:	68fb      	ldr	r3, [r7, #12]
 8001870:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001872:	68fb      	ldr	r3, [r7, #12]
 8001874:	6a1b      	ldr	r3, [r3, #32]
 8001876:	4914      	ldr	r1, [pc, #80]	; (80018c8 <config_pin+0x81c>)
 8001878:	68ba      	ldr	r2, [r7, #8]
 800187a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800187e:	3201      	adds	r2, #1
 8001880:	2101      	movs	r1, #1
 8001882:	fa01 f202 	lsl.w	r2, r1, r2
 8001886:	43d2      	mvns	r2, r2
 8001888:	401a      	ands	r2, r3
 800188a:	68fb      	ldr	r3, [r7, #12]
 800188c:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 800188e:	68fb      	ldr	r3, [r7, #12]
 8001890:	6a1b      	ldr	r3, [r3, #32]
 8001892:	490d      	ldr	r1, [pc, #52]	; (80018c8 <config_pin+0x81c>)
 8001894:	68ba      	ldr	r2, [r7, #8]
 8001896:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800189a:	3202      	adds	r2, #2
 800189c:	2101      	movs	r1, #1
 800189e:	fa01 f202 	lsl.w	r2, r1, r2
 80018a2:	431a      	orrs	r2, r3
 80018a4:	68fb      	ldr	r3, [r7, #12]
 80018a6:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	6a1b      	ldr	r3, [r3, #32]
 80018ac:	4906      	ldr	r1, [pc, #24]	; (80018c8 <config_pin+0x81c>)
 80018ae:	68ba      	ldr	r2, [r7, #8]
 80018b0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80018b4:	3203      	adds	r2, #3
 80018b6:	2101      	movs	r1, #1
 80018b8:	fa01 f202 	lsl.w	r2, r1, r2
 80018bc:	431a      	orrs	r2, r3
 80018be:	68fb      	ldr	r3, [r7, #12]
 80018c0:	621a      	str	r2, [r3, #32]
                    break;
 80018c2:	f000 bc32 	b.w	800212a <config_pin+0x107e>
 80018c6:	bf00      	nop
 80018c8:	20000040 	.word	0x20000040

                case (AF13):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 80018cc:	68fb      	ldr	r3, [r7, #12]
 80018ce:	6a1b      	ldr	r3, [r3, #32]
 80018d0:	4999      	ldr	r1, [pc, #612]	; (8001b38 <config_pin+0xa8c>)
 80018d2:	68ba      	ldr	r2, [r7, #8]
 80018d4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80018d8:	2101      	movs	r1, #1
 80018da:	fa01 f202 	lsl.w	r2, r1, r2
 80018de:	431a      	orrs	r2, r3
 80018e0:	68fb      	ldr	r3, [r7, #12]
 80018e2:	621a      	str	r2, [r3, #32]
                    port->AFR[0] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 80018e4:	68fb      	ldr	r3, [r7, #12]
 80018e6:	6a1b      	ldr	r3, [r3, #32]
 80018e8:	4993      	ldr	r1, [pc, #588]	; (8001b38 <config_pin+0xa8c>)
 80018ea:	68ba      	ldr	r2, [r7, #8]
 80018ec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80018f0:	3201      	adds	r2, #1
 80018f2:	2101      	movs	r1, #1
 80018f4:	fa01 f202 	lsl.w	r2, r1, r2
 80018f8:	43d2      	mvns	r2, r2
 80018fa:	401a      	ands	r2, r3
 80018fc:	68fb      	ldr	r3, [r7, #12]
 80018fe:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001900:	68fb      	ldr	r3, [r7, #12]
 8001902:	6a1b      	ldr	r3, [r3, #32]
 8001904:	498c      	ldr	r1, [pc, #560]	; (8001b38 <config_pin+0xa8c>)
 8001906:	68ba      	ldr	r2, [r7, #8]
 8001908:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800190c:	3202      	adds	r2, #2
 800190e:	2101      	movs	r1, #1
 8001910:	fa01 f202 	lsl.w	r2, r1, r2
 8001914:	431a      	orrs	r2, r3
 8001916:	68fb      	ldr	r3, [r7, #12]
 8001918:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 800191a:	68fb      	ldr	r3, [r7, #12]
 800191c:	6a1b      	ldr	r3, [r3, #32]
 800191e:	4986      	ldr	r1, [pc, #536]	; (8001b38 <config_pin+0xa8c>)
 8001920:	68ba      	ldr	r2, [r7, #8]
 8001922:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001926:	3203      	adds	r2, #3
 8001928:	2101      	movs	r1, #1
 800192a:	fa01 f202 	lsl.w	r2, r1, r2
 800192e:	431a      	orrs	r2, r3
 8001930:	68fb      	ldr	r3, [r7, #12]
 8001932:	621a      	str	r2, [r3, #32]
                    break;
 8001934:	e3f9      	b.n	800212a <config_pin+0x107e>

                case (AF14):
                    port->AFR[0] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001936:	68fb      	ldr	r3, [r7, #12]
 8001938:	6a1b      	ldr	r3, [r3, #32]
 800193a:	497f      	ldr	r1, [pc, #508]	; (8001b38 <config_pin+0xa8c>)
 800193c:	68ba      	ldr	r2, [r7, #8]
 800193e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001942:	2101      	movs	r1, #1
 8001944:	fa01 f202 	lsl.w	r2, r1, r2
 8001948:	43d2      	mvns	r2, r2
 800194a:	401a      	ands	r2, r3
 800194c:	68fb      	ldr	r3, [r7, #12]
 800194e:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001950:	68fb      	ldr	r3, [r7, #12]
 8001952:	6a1b      	ldr	r3, [r3, #32]
 8001954:	4978      	ldr	r1, [pc, #480]	; (8001b38 <config_pin+0xa8c>)
 8001956:	68ba      	ldr	r2, [r7, #8]
 8001958:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800195c:	3201      	adds	r2, #1
 800195e:	2101      	movs	r1, #1
 8001960:	fa01 f202 	lsl.w	r2, r1, r2
 8001964:	431a      	orrs	r2, r3
 8001966:	68fb      	ldr	r3, [r7, #12]
 8001968:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 800196a:	68fb      	ldr	r3, [r7, #12]
 800196c:	6a1b      	ldr	r3, [r3, #32]
 800196e:	4972      	ldr	r1, [pc, #456]	; (8001b38 <config_pin+0xa8c>)
 8001970:	68ba      	ldr	r2, [r7, #8]
 8001972:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001976:	3202      	adds	r2, #2
 8001978:	2101      	movs	r1, #1
 800197a:	fa01 f202 	lsl.w	r2, r1, r2
 800197e:	431a      	orrs	r2, r3
 8001980:	68fb      	ldr	r3, [r7, #12]
 8001982:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001984:	68fb      	ldr	r3, [r7, #12]
 8001986:	6a1b      	ldr	r3, [r3, #32]
 8001988:	496b      	ldr	r1, [pc, #428]	; (8001b38 <config_pin+0xa8c>)
 800198a:	68ba      	ldr	r2, [r7, #8]
 800198c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001990:	3203      	adds	r2, #3
 8001992:	2101      	movs	r1, #1
 8001994:	fa01 f202 	lsl.w	r2, r1, r2
 8001998:	431a      	orrs	r2, r3
 800199a:	68fb      	ldr	r3, [r7, #12]
 800199c:	621a      	str	r2, [r3, #32]
                    break;
 800199e:	e3c4      	b.n	800212a <config_pin+0x107e>

                case (AF15):
                    port->AFR[0] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 80019a0:	68fb      	ldr	r3, [r7, #12]
 80019a2:	6a1b      	ldr	r3, [r3, #32]
 80019a4:	4964      	ldr	r1, [pc, #400]	; (8001b38 <config_pin+0xa8c>)
 80019a6:	68ba      	ldr	r2, [r7, #8]
 80019a8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80019ac:	2101      	movs	r1, #1
 80019ae:	fa01 f202 	lsl.w	r2, r1, r2
 80019b2:	431a      	orrs	r2, r3
 80019b4:	68fb      	ldr	r3, [r7, #12]
 80019b6:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 80019b8:	68fb      	ldr	r3, [r7, #12]
 80019ba:	6a1b      	ldr	r3, [r3, #32]
 80019bc:	495e      	ldr	r1, [pc, #376]	; (8001b38 <config_pin+0xa8c>)
 80019be:	68ba      	ldr	r2, [r7, #8]
 80019c0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80019c4:	3201      	adds	r2, #1
 80019c6:	2101      	movs	r1, #1
 80019c8:	fa01 f202 	lsl.w	r2, r1, r2
 80019cc:	431a      	orrs	r2, r3
 80019ce:	68fb      	ldr	r3, [r7, #12]
 80019d0:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 80019d2:	68fb      	ldr	r3, [r7, #12]
 80019d4:	6a1b      	ldr	r3, [r3, #32]
 80019d6:	4958      	ldr	r1, [pc, #352]	; (8001b38 <config_pin+0xa8c>)
 80019d8:	68ba      	ldr	r2, [r7, #8]
 80019da:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80019de:	3202      	adds	r2, #2
 80019e0:	2101      	movs	r1, #1
 80019e2:	fa01 f202 	lsl.w	r2, r1, r2
 80019e6:	431a      	orrs	r2, r3
 80019e8:	68fb      	ldr	r3, [r7, #12]
 80019ea:	621a      	str	r2, [r3, #32]
                    port->AFR[0] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 80019ec:	68fb      	ldr	r3, [r7, #12]
 80019ee:	6a1b      	ldr	r3, [r3, #32]
 80019f0:	4951      	ldr	r1, [pc, #324]	; (8001b38 <config_pin+0xa8c>)
 80019f2:	68ba      	ldr	r2, [r7, #8]
 80019f4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80019f8:	3203      	adds	r2, #3
 80019fa:	2101      	movs	r1, #1
 80019fc:	fa01 f202 	lsl.w	r2, r1, r2
 8001a00:	431a      	orrs	r2, r3
 8001a02:	68fb      	ldr	r3, [r7, #12]
 8001a04:	621a      	str	r2, [r3, #32]
                    break;
 8001a06:	bf00      	nop
 8001a08:	e38f      	b.n	800212a <config_pin+0x107e>
            }
        }

        else { // High Register, AFRH
            switch(alt_func) {
 8001a0a:	69fb      	ldr	r3, [r7, #28]
 8001a0c:	2b0f      	cmp	r3, #15
 8001a0e:	f200 838c 	bhi.w	800212a <config_pin+0x107e>
 8001a12:	a201      	add	r2, pc, #4	; (adr r2, 8001a18 <config_pin+0x96c>)
 8001a14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a18:	08001a59 	.word	0x08001a59
 8001a1c:	08001ac9 	.word	0x08001ac9
 8001a20:	08001b3d 	.word	0x08001b3d
 8001a24:	08001bab 	.word	0x08001bab
 8001a28:	08001c17 	.word	0x08001c17
 8001a2c:	08001c85 	.word	0x08001c85
 8001a30:	08001cf1 	.word	0x08001cf1
 8001a34:	08001d5d 	.word	0x08001d5d
 8001a38:	08001dcd 	.word	0x08001dcd
 8001a3c:	08001e3b 	.word	0x08001e3b
 8001a40:	08001ea7 	.word	0x08001ea7
 8001a44:	08001f13 	.word	0x08001f13
 8001a48:	08001f7d 	.word	0x08001f7d
 8001a4c:	08001fe9 	.word	0x08001fe9
 8001a50:	08002059 	.word	0x08002059
 8001a54:	080020c3 	.word	0x080020c3

                case (AF0):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001a58:	68fb      	ldr	r3, [r7, #12]
 8001a5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a5c:	4936      	ldr	r1, [pc, #216]	; (8001b38 <config_pin+0xa8c>)
 8001a5e:	68ba      	ldr	r2, [r7, #8]
 8001a60:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001a64:	2101      	movs	r1, #1
 8001a66:	fa01 f202 	lsl.w	r2, r1, r2
 8001a6a:	43d2      	mvns	r2, r2
 8001a6c:	401a      	ands	r2, r3
 8001a6e:	68fb      	ldr	r3, [r7, #12]
 8001a70:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001a72:	68fb      	ldr	r3, [r7, #12]
 8001a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a76:	4930      	ldr	r1, [pc, #192]	; (8001b38 <config_pin+0xa8c>)
 8001a78:	68ba      	ldr	r2, [r7, #8]
 8001a7a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001a7e:	3201      	adds	r2, #1
 8001a80:	2101      	movs	r1, #1
 8001a82:	fa01 f202 	lsl.w	r2, r1, r2
 8001a86:	43d2      	mvns	r2, r2
 8001a88:	401a      	ands	r2, r3
 8001a8a:	68fb      	ldr	r3, [r7, #12]
 8001a8c:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001a8e:	68fb      	ldr	r3, [r7, #12]
 8001a90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a92:	4929      	ldr	r1, [pc, #164]	; (8001b38 <config_pin+0xa8c>)
 8001a94:	68ba      	ldr	r2, [r7, #8]
 8001a96:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001a9a:	3202      	adds	r2, #2
 8001a9c:	2101      	movs	r1, #1
 8001a9e:	fa01 f202 	lsl.w	r2, r1, r2
 8001aa2:	43d2      	mvns	r2, r2
 8001aa4:	401a      	ands	r2, r3
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001aaa:	68fb      	ldr	r3, [r7, #12]
 8001aac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001aae:	4922      	ldr	r1, [pc, #136]	; (8001b38 <config_pin+0xa8c>)
 8001ab0:	68ba      	ldr	r2, [r7, #8]
 8001ab2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001ab6:	3203      	adds	r2, #3
 8001ab8:	2101      	movs	r1, #1
 8001aba:	fa01 f202 	lsl.w	r2, r1, r2
 8001abe:	43d2      	mvns	r2, r2
 8001ac0:	401a      	ands	r2, r3
 8001ac2:	68fb      	ldr	r3, [r7, #12]
 8001ac4:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001ac6:	e330      	b.n	800212a <config_pin+0x107e>

                case (AF1):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001ac8:	68fb      	ldr	r3, [r7, #12]
 8001aca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001acc:	491a      	ldr	r1, [pc, #104]	; (8001b38 <config_pin+0xa8c>)
 8001ace:	68ba      	ldr	r2, [r7, #8]
 8001ad0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001ad4:	2101      	movs	r1, #1
 8001ad6:	fa01 f202 	lsl.w	r2, r1, r2
 8001ada:	431a      	orrs	r2, r3
 8001adc:	68fb      	ldr	r3, [r7, #12]
 8001ade:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001ae0:	68fb      	ldr	r3, [r7, #12]
 8001ae2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ae4:	4914      	ldr	r1, [pc, #80]	; (8001b38 <config_pin+0xa8c>)
 8001ae6:	68ba      	ldr	r2, [r7, #8]
 8001ae8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001aec:	3201      	adds	r2, #1
 8001aee:	2101      	movs	r1, #1
 8001af0:	fa01 f202 	lsl.w	r2, r1, r2
 8001af4:	43d2      	mvns	r2, r2
 8001af6:	401a      	ands	r2, r3
 8001af8:	68fb      	ldr	r3, [r7, #12]
 8001afa:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001afc:	68fb      	ldr	r3, [r7, #12]
 8001afe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b00:	490d      	ldr	r1, [pc, #52]	; (8001b38 <config_pin+0xa8c>)
 8001b02:	68ba      	ldr	r2, [r7, #8]
 8001b04:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001b08:	3202      	adds	r2, #2
 8001b0a:	2101      	movs	r1, #1
 8001b0c:	fa01 f202 	lsl.w	r2, r1, r2
 8001b10:	43d2      	mvns	r2, r2
 8001b12:	401a      	ands	r2, r3
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001b18:	68fb      	ldr	r3, [r7, #12]
 8001b1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b1c:	4906      	ldr	r1, [pc, #24]	; (8001b38 <config_pin+0xa8c>)
 8001b1e:	68ba      	ldr	r2, [r7, #8]
 8001b20:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001b24:	3203      	adds	r2, #3
 8001b26:	2101      	movs	r1, #1
 8001b28:	fa01 f202 	lsl.w	r2, r1, r2
 8001b2c:	43d2      	mvns	r2, r2
 8001b2e:	401a      	ands	r2, r3
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001b34:	e2f9      	b.n	800212a <config_pin+0x107e>
 8001b36:	bf00      	nop
 8001b38:	20000040 	.word	0x20000040

                case (AF2):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001b3c:	68fb      	ldr	r3, [r7, #12]
 8001b3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b40:	49a1      	ldr	r1, [pc, #644]	; (8001dc8 <config_pin+0xd1c>)
 8001b42:	68ba      	ldr	r2, [r7, #8]
 8001b44:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001b48:	2101      	movs	r1, #1
 8001b4a:	fa01 f202 	lsl.w	r2, r1, r2
 8001b4e:	43d2      	mvns	r2, r2
 8001b50:	401a      	ands	r2, r3
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001b56:	68fb      	ldr	r3, [r7, #12]
 8001b58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b5a:	499b      	ldr	r1, [pc, #620]	; (8001dc8 <config_pin+0xd1c>)
 8001b5c:	68ba      	ldr	r2, [r7, #8]
 8001b5e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001b62:	3201      	adds	r2, #1
 8001b64:	2101      	movs	r1, #1
 8001b66:	fa01 f202 	lsl.w	r2, r1, r2
 8001b6a:	431a      	orrs	r2, r3
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001b70:	68fb      	ldr	r3, [r7, #12]
 8001b72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b74:	4994      	ldr	r1, [pc, #592]	; (8001dc8 <config_pin+0xd1c>)
 8001b76:	68ba      	ldr	r2, [r7, #8]
 8001b78:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001b7c:	3202      	adds	r2, #2
 8001b7e:	2101      	movs	r1, #1
 8001b80:	fa01 f202 	lsl.w	r2, r1, r2
 8001b84:	43d2      	mvns	r2, r2
 8001b86:	401a      	ands	r2, r3
 8001b88:	68fb      	ldr	r3, [r7, #12]
 8001b8a:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b90:	498d      	ldr	r1, [pc, #564]	; (8001dc8 <config_pin+0xd1c>)
 8001b92:	68ba      	ldr	r2, [r7, #8]
 8001b94:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001b98:	3203      	adds	r2, #3
 8001b9a:	2101      	movs	r1, #1
 8001b9c:	fa01 f202 	lsl.w	r2, r1, r2
 8001ba0:	43d2      	mvns	r2, r2
 8001ba2:	401a      	ands	r2, r3
 8001ba4:	68fb      	ldr	r3, [r7, #12]
 8001ba6:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001ba8:	e2bf      	b.n	800212a <config_pin+0x107e>

                case (AF3):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001baa:	68fb      	ldr	r3, [r7, #12]
 8001bac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bae:	4986      	ldr	r1, [pc, #536]	; (8001dc8 <config_pin+0xd1c>)
 8001bb0:	68ba      	ldr	r2, [r7, #8]
 8001bb2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001bb6:	2101      	movs	r1, #1
 8001bb8:	fa01 f202 	lsl.w	r2, r1, r2
 8001bbc:	431a      	orrs	r2, r3
 8001bbe:	68fb      	ldr	r3, [r7, #12]
 8001bc0:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); 	//1 in 2nd position
 8001bc2:	68fb      	ldr	r3, [r7, #12]
 8001bc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bc6:	4980      	ldr	r1, [pc, #512]	; (8001dc8 <config_pin+0xd1c>)
 8001bc8:	68ba      	ldr	r2, [r7, #8]
 8001bca:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001bce:	3201      	adds	r2, #1
 8001bd0:	2101      	movs	r1, #1
 8001bd2:	fa01 f202 	lsl.w	r2, r1, r2
 8001bd6:	431a      	orrs	r2, r3
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001bdc:	68fb      	ldr	r3, [r7, #12]
 8001bde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001be0:	4979      	ldr	r1, [pc, #484]	; (8001dc8 <config_pin+0xd1c>)
 8001be2:	68ba      	ldr	r2, [r7, #8]
 8001be4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001be8:	3202      	adds	r2, #2
 8001bea:	2101      	movs	r1, #1
 8001bec:	fa01 f202 	lsl.w	r2, r1, r2
 8001bf0:	43d2      	mvns	r2, r2
 8001bf2:	401a      	ands	r2, r3
 8001bf4:	68fb      	ldr	r3, [r7, #12]
 8001bf6:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001bf8:	68fb      	ldr	r3, [r7, #12]
 8001bfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bfc:	4972      	ldr	r1, [pc, #456]	; (8001dc8 <config_pin+0xd1c>)
 8001bfe:	68ba      	ldr	r2, [r7, #8]
 8001c00:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001c04:	3203      	adds	r2, #3
 8001c06:	2101      	movs	r1, #1
 8001c08:	fa01 f202 	lsl.w	r2, r1, r2
 8001c0c:	43d2      	mvns	r2, r2
 8001c0e:	401a      	ands	r2, r3
 8001c10:	68fb      	ldr	r3, [r7, #12]
 8001c12:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001c14:	e289      	b.n	800212a <config_pin+0x107e>

                case (AF4):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001c16:	68fb      	ldr	r3, [r7, #12]
 8001c18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c1a:	496b      	ldr	r1, [pc, #428]	; (8001dc8 <config_pin+0xd1c>)
 8001c1c:	68ba      	ldr	r2, [r7, #8]
 8001c1e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001c22:	2101      	movs	r1, #1
 8001c24:	fa01 f202 	lsl.w	r2, r1, r2
 8001c28:	43d2      	mvns	r2, r2
 8001c2a:	401a      	ands	r2, r3
 8001c2c:	68fb      	ldr	r3, [r7, #12]
 8001c2e:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c34:	4964      	ldr	r1, [pc, #400]	; (8001dc8 <config_pin+0xd1c>)
 8001c36:	68ba      	ldr	r2, [r7, #8]
 8001c38:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001c3c:	3201      	adds	r2, #1
 8001c3e:	2101      	movs	r1, #1
 8001c40:	fa01 f202 	lsl.w	r2, r1, r2
 8001c44:	43d2      	mvns	r2, r2
 8001c46:	401a      	ands	r2, r3
 8001c48:	68fb      	ldr	r3, [r7, #12]
 8001c4a:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001c4c:	68fb      	ldr	r3, [r7, #12]
 8001c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c50:	495d      	ldr	r1, [pc, #372]	; (8001dc8 <config_pin+0xd1c>)
 8001c52:	68ba      	ldr	r2, [r7, #8]
 8001c54:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001c58:	3202      	adds	r2, #2
 8001c5a:	2101      	movs	r1, #1
 8001c5c:	fa01 f202 	lsl.w	r2, r1, r2
 8001c60:	431a      	orrs	r2, r3
 8001c62:	68fb      	ldr	r3, [r7, #12]
 8001c64:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001c66:	68fb      	ldr	r3, [r7, #12]
 8001c68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c6a:	4957      	ldr	r1, [pc, #348]	; (8001dc8 <config_pin+0xd1c>)
 8001c6c:	68ba      	ldr	r2, [r7, #8]
 8001c6e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001c72:	3203      	adds	r2, #3
 8001c74:	2101      	movs	r1, #1
 8001c76:	fa01 f202 	lsl.w	r2, r1, r2
 8001c7a:	43d2      	mvns	r2, r2
 8001c7c:	401a      	ands	r2, r3
 8001c7e:	68fb      	ldr	r3, [r7, #12]
 8001c80:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001c82:	e252      	b.n	800212a <config_pin+0x107e>

                case (AF5):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001c84:	68fb      	ldr	r3, [r7, #12]
 8001c86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c88:	494f      	ldr	r1, [pc, #316]	; (8001dc8 <config_pin+0xd1c>)
 8001c8a:	68ba      	ldr	r2, [r7, #8]
 8001c8c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001c90:	2101      	movs	r1, #1
 8001c92:	fa01 f202 	lsl.w	r2, r1, r2
 8001c96:	431a      	orrs	r2, r3
 8001c98:	68fb      	ldr	r3, [r7, #12]
 8001c9a:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001c9c:	68fb      	ldr	r3, [r7, #12]
 8001c9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ca0:	4949      	ldr	r1, [pc, #292]	; (8001dc8 <config_pin+0xd1c>)
 8001ca2:	68ba      	ldr	r2, [r7, #8]
 8001ca4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001ca8:	3201      	adds	r2, #1
 8001caa:	2101      	movs	r1, #1
 8001cac:	fa01 f202 	lsl.w	r2, r1, r2
 8001cb0:	43d2      	mvns	r2, r2
 8001cb2:	401a      	ands	r2, r3
 8001cb4:	68fb      	ldr	r3, [r7, #12]
 8001cb6:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001cb8:	68fb      	ldr	r3, [r7, #12]
 8001cba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cbc:	4942      	ldr	r1, [pc, #264]	; (8001dc8 <config_pin+0xd1c>)
 8001cbe:	68ba      	ldr	r2, [r7, #8]
 8001cc0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001cc4:	3202      	adds	r2, #2
 8001cc6:	2101      	movs	r1, #1
 8001cc8:	fa01 f202 	lsl.w	r2, r1, r2
 8001ccc:	431a      	orrs	r2, r3
 8001cce:	68fb      	ldr	r3, [r7, #12]
 8001cd0:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001cd2:	68fb      	ldr	r3, [r7, #12]
 8001cd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cd6:	493c      	ldr	r1, [pc, #240]	; (8001dc8 <config_pin+0xd1c>)
 8001cd8:	68ba      	ldr	r2, [r7, #8]
 8001cda:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001cde:	3203      	adds	r2, #3
 8001ce0:	2101      	movs	r1, #1
 8001ce2:	fa01 f202 	lsl.w	r2, r1, r2
 8001ce6:	43d2      	mvns	r2, r2
 8001ce8:	401a      	ands	r2, r3
 8001cea:	68fb      	ldr	r3, [r7, #12]
 8001cec:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001cee:	e21c      	b.n	800212a <config_pin+0x107e>

                case (AF6):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001cf0:	68fb      	ldr	r3, [r7, #12]
 8001cf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cf4:	4934      	ldr	r1, [pc, #208]	; (8001dc8 <config_pin+0xd1c>)
 8001cf6:	68ba      	ldr	r2, [r7, #8]
 8001cf8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001cfc:	2101      	movs	r1, #1
 8001cfe:	fa01 f202 	lsl.w	r2, r1, r2
 8001d02:	43d2      	mvns	r2, r2
 8001d04:	401a      	ands	r2, r3
 8001d06:	68fb      	ldr	r3, [r7, #12]
 8001d08:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001d0a:	68fb      	ldr	r3, [r7, #12]
 8001d0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d0e:	492e      	ldr	r1, [pc, #184]	; (8001dc8 <config_pin+0xd1c>)
 8001d10:	68ba      	ldr	r2, [r7, #8]
 8001d12:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001d16:	3201      	adds	r2, #1
 8001d18:	2101      	movs	r1, #1
 8001d1a:	fa01 f202 	lsl.w	r2, r1, r2
 8001d1e:	431a      	orrs	r2, r3
 8001d20:	68fb      	ldr	r3, [r7, #12]
 8001d22:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001d24:	68fb      	ldr	r3, [r7, #12]
 8001d26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d28:	4927      	ldr	r1, [pc, #156]	; (8001dc8 <config_pin+0xd1c>)
 8001d2a:	68ba      	ldr	r2, [r7, #8]
 8001d2c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001d30:	3202      	adds	r2, #2
 8001d32:	2101      	movs	r1, #1
 8001d34:	fa01 f202 	lsl.w	r2, r1, r2
 8001d38:	431a      	orrs	r2, r3
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001d3e:	68fb      	ldr	r3, [r7, #12]
 8001d40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d42:	4921      	ldr	r1, [pc, #132]	; (8001dc8 <config_pin+0xd1c>)
 8001d44:	68ba      	ldr	r2, [r7, #8]
 8001d46:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001d4a:	3203      	adds	r2, #3
 8001d4c:	2101      	movs	r1, #1
 8001d4e:	fa01 f202 	lsl.w	r2, r1, r2
 8001d52:	43d2      	mvns	r2, r2
 8001d54:	401a      	ands	r2, r3
 8001d56:	68fb      	ldr	r3, [r7, #12]
 8001d58:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001d5a:	e1e6      	b.n	800212a <config_pin+0x107e>

                case (AF7):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d60:	4919      	ldr	r1, [pc, #100]	; (8001dc8 <config_pin+0xd1c>)
 8001d62:	68ba      	ldr	r2, [r7, #8]
 8001d64:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001d68:	2101      	movs	r1, #1
 8001d6a:	fa01 f202 	lsl.w	r2, r1, r2
 8001d6e:	431a      	orrs	r2, r3
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d78:	4913      	ldr	r1, [pc, #76]	; (8001dc8 <config_pin+0xd1c>)
 8001d7a:	68ba      	ldr	r2, [r7, #8]
 8001d7c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001d80:	3201      	adds	r2, #1
 8001d82:	2101      	movs	r1, #1
 8001d84:	fa01 f202 	lsl.w	r2, r1, r2
 8001d88:	431a      	orrs	r2, r3
 8001d8a:	68fb      	ldr	r3, [r7, #12]
 8001d8c:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001d8e:	68fb      	ldr	r3, [r7, #12]
 8001d90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d92:	490d      	ldr	r1, [pc, #52]	; (8001dc8 <config_pin+0xd1c>)
 8001d94:	68ba      	ldr	r2, [r7, #8]
 8001d96:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001d9a:	3202      	adds	r2, #2
 8001d9c:	2101      	movs	r1, #1
 8001d9e:	fa01 f202 	lsl.w	r2, r1, r2
 8001da2:	431a      	orrs	r2, r3
 8001da4:	68fb      	ldr	r3, [r7, #12]
 8001da6:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+3)); //0 in 4th position
 8001da8:	68fb      	ldr	r3, [r7, #12]
 8001daa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dac:	4906      	ldr	r1, [pc, #24]	; (8001dc8 <config_pin+0xd1c>)
 8001dae:	68ba      	ldr	r2, [r7, #8]
 8001db0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001db4:	3203      	adds	r2, #3
 8001db6:	2101      	movs	r1, #1
 8001db8:	fa01 f202 	lsl.w	r2, r1, r2
 8001dbc:	43d2      	mvns	r2, r2
 8001dbe:	401a      	ands	r2, r3
 8001dc0:	68fb      	ldr	r3, [r7, #12]
 8001dc2:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001dc4:	e1b1      	b.n	800212a <config_pin+0x107e>
 8001dc6:	bf00      	nop
 8001dc8:	20000040 	.word	0x20000040

                case (AF8):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001dcc:	68fb      	ldr	r3, [r7, #12]
 8001dce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dd0:	49a0      	ldr	r1, [pc, #640]	; (8002054 <config_pin+0xfa8>)
 8001dd2:	68ba      	ldr	r2, [r7, #8]
 8001dd4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001dd8:	2101      	movs	r1, #1
 8001dda:	fa01 f202 	lsl.w	r2, r1, r2
 8001dde:	43d2      	mvns	r2, r2
 8001de0:	401a      	ands	r2, r3
 8001de2:	68fb      	ldr	r3, [r7, #12]
 8001de4:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dea:	499a      	ldr	r1, [pc, #616]	; (8002054 <config_pin+0xfa8>)
 8001dec:	68ba      	ldr	r2, [r7, #8]
 8001dee:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001df2:	3201      	adds	r2, #1
 8001df4:	2101      	movs	r1, #1
 8001df6:	fa01 f202 	lsl.w	r2, r1, r2
 8001dfa:	43d2      	mvns	r2, r2
 8001dfc:	401a      	ands	r2, r3
 8001dfe:	68fb      	ldr	r3, [r7, #12]
 8001e00:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001e02:	68fb      	ldr	r3, [r7, #12]
 8001e04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e06:	4993      	ldr	r1, [pc, #588]	; (8002054 <config_pin+0xfa8>)
 8001e08:	68ba      	ldr	r2, [r7, #8]
 8001e0a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e0e:	3202      	adds	r2, #2
 8001e10:	2101      	movs	r1, #1
 8001e12:	fa01 f202 	lsl.w	r2, r1, r2
 8001e16:	43d2      	mvns	r2, r2
 8001e18:	401a      	ands	r2, r3
 8001e1a:	68fb      	ldr	r3, [r7, #12]
 8001e1c:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001e1e:	68fb      	ldr	r3, [r7, #12]
 8001e20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e22:	498c      	ldr	r1, [pc, #560]	; (8002054 <config_pin+0xfa8>)
 8001e24:	68ba      	ldr	r2, [r7, #8]
 8001e26:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e2a:	3203      	adds	r2, #3
 8001e2c:	2101      	movs	r1, #1
 8001e2e:	fa01 f202 	lsl.w	r2, r1, r2
 8001e32:	431a      	orrs	r2, r3
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001e38:	e177      	b.n	800212a <config_pin+0x107e>

                case (AF9):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001e3a:	68fb      	ldr	r3, [r7, #12]
 8001e3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e3e:	4985      	ldr	r1, [pc, #532]	; (8002054 <config_pin+0xfa8>)
 8001e40:	68ba      	ldr	r2, [r7, #8]
 8001e42:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e46:	2101      	movs	r1, #1
 8001e48:	fa01 f202 	lsl.w	r2, r1, r2
 8001e4c:	431a      	orrs	r2, r3
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001e52:	68fb      	ldr	r3, [r7, #12]
 8001e54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e56:	497f      	ldr	r1, [pc, #508]	; (8002054 <config_pin+0xfa8>)
 8001e58:	68ba      	ldr	r2, [r7, #8]
 8001e5a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e5e:	3201      	adds	r2, #1
 8001e60:	2101      	movs	r1, #1
 8001e62:	fa01 f202 	lsl.w	r2, r1, r2
 8001e66:	43d2      	mvns	r2, r2
 8001e68:	401a      	ands	r2, r3
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001e6e:	68fb      	ldr	r3, [r7, #12]
 8001e70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e72:	4978      	ldr	r1, [pc, #480]	; (8002054 <config_pin+0xfa8>)
 8001e74:	68ba      	ldr	r2, [r7, #8]
 8001e76:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e7a:	3202      	adds	r2, #2
 8001e7c:	2101      	movs	r1, #1
 8001e7e:	fa01 f202 	lsl.w	r2, r1, r2
 8001e82:	43d2      	mvns	r2, r2
 8001e84:	401a      	ands	r2, r3
 8001e86:	68fb      	ldr	r3, [r7, #12]
 8001e88:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001e8a:	68fb      	ldr	r3, [r7, #12]
 8001e8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e8e:	4971      	ldr	r1, [pc, #452]	; (8002054 <config_pin+0xfa8>)
 8001e90:	68ba      	ldr	r2, [r7, #8]
 8001e92:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001e96:	3203      	adds	r2, #3
 8001e98:	2101      	movs	r1, #1
 8001e9a:	fa01 f202 	lsl.w	r2, r1, r2
 8001e9e:	431a      	orrs	r2, r3
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001ea4:	e141      	b.n	800212a <config_pin+0x107e>

                case (AF10):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001ea6:	68fb      	ldr	r3, [r7, #12]
 8001ea8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001eaa:	496a      	ldr	r1, [pc, #424]	; (8002054 <config_pin+0xfa8>)
 8001eac:	68ba      	ldr	r2, [r7, #8]
 8001eae:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001eb2:	2101      	movs	r1, #1
 8001eb4:	fa01 f202 	lsl.w	r2, r1, r2
 8001eb8:	43d2      	mvns	r2, r2
 8001eba:	401a      	ands	r2, r3
 8001ebc:	68fb      	ldr	r3, [r7, #12]
 8001ebe:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001ec0:	68fb      	ldr	r3, [r7, #12]
 8001ec2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ec4:	4963      	ldr	r1, [pc, #396]	; (8002054 <config_pin+0xfa8>)
 8001ec6:	68ba      	ldr	r2, [r7, #8]
 8001ec8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001ecc:	3201      	adds	r2, #1
 8001ece:	2101      	movs	r1, #1
 8001ed0:	fa01 f202 	lsl.w	r2, r1, r2
 8001ed4:	431a      	orrs	r2, r3
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001eda:	68fb      	ldr	r3, [r7, #12]
 8001edc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ede:	495d      	ldr	r1, [pc, #372]	; (8002054 <config_pin+0xfa8>)
 8001ee0:	68ba      	ldr	r2, [r7, #8]
 8001ee2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001ee6:	3202      	adds	r2, #2
 8001ee8:	2101      	movs	r1, #1
 8001eea:	fa01 f202 	lsl.w	r2, r1, r2
 8001eee:	43d2      	mvns	r2, r2
 8001ef0:	401a      	ands	r2, r3
 8001ef2:	68fb      	ldr	r3, [r7, #12]
 8001ef4:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001ef6:	68fb      	ldr	r3, [r7, #12]
 8001ef8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001efa:	4956      	ldr	r1, [pc, #344]	; (8002054 <config_pin+0xfa8>)
 8001efc:	68ba      	ldr	r2, [r7, #8]
 8001efe:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001f02:	3203      	adds	r2, #3
 8001f04:	2101      	movs	r1, #1
 8001f06:	fa01 f202 	lsl.w	r2, r1, r2
 8001f0a:	431a      	orrs	r2, r3
 8001f0c:	68fb      	ldr	r3, [r7, #12]
 8001f0e:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001f10:	e10b      	b.n	800212a <config_pin+0x107e>

                case (AF11):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001f12:	68fb      	ldr	r3, [r7, #12]
 8001f14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f16:	494f      	ldr	r1, [pc, #316]	; (8002054 <config_pin+0xfa8>)
 8001f18:	68ba      	ldr	r2, [r7, #8]
 8001f1a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001f1e:	2101      	movs	r1, #1
 8001f20:	fa01 f202 	lsl.w	r2, r1, r2
 8001f24:	431a      	orrs	r2, r3
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8001f2a:	68fb      	ldr	r3, [r7, #12]
 8001f2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f2e:	4949      	ldr	r1, [pc, #292]	; (8002054 <config_pin+0xfa8>)
 8001f30:	68ba      	ldr	r2, [r7, #8]
 8001f32:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001f36:	3201      	adds	r2, #1
 8001f38:	2101      	movs	r1, #1
 8001f3a:	fa01 f202 	lsl.w	r2, r1, r2
 8001f3e:	431a      	orrs	r2, r3
 8001f40:	68fb      	ldr	r3, [r7, #12]
 8001f42:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+2)); // 0 in 3rd position
 8001f44:	68fb      	ldr	r3, [r7, #12]
 8001f46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f48:	4942      	ldr	r1, [pc, #264]	; (8002054 <config_pin+0xfa8>)
 8001f4a:	68ba      	ldr	r2, [r7, #8]
 8001f4c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001f50:	3202      	adds	r2, #2
 8001f52:	2101      	movs	r1, #1
 8001f54:	fa01 f202 	lsl.w	r2, r1, r2
 8001f58:	43d2      	mvns	r2, r2
 8001f5a:	401a      	ands	r2, r3
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001f60:	68fb      	ldr	r3, [r7, #12]
 8001f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f64:	493b      	ldr	r1, [pc, #236]	; (8002054 <config_pin+0xfa8>)
 8001f66:	68ba      	ldr	r2, [r7, #8]
 8001f68:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001f6c:	3203      	adds	r2, #3
 8001f6e:	2101      	movs	r1, #1
 8001f70:	fa01 f202 	lsl.w	r2, r1, r2
 8001f74:	431a      	orrs	r2, r3
 8001f76:	68fb      	ldr	r3, [r7, #12]
 8001f78:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001f7a:	e0d6      	b.n	800212a <config_pin+0x107e>

                case (AF12):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f80:	4934      	ldr	r1, [pc, #208]	; (8002054 <config_pin+0xfa8>)
 8001f82:	68ba      	ldr	r2, [r7, #8]
 8001f84:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001f88:	2101      	movs	r1, #1
 8001f8a:	fa01 f202 	lsl.w	r2, r1, r2
 8001f8e:	43d2      	mvns	r2, r2
 8001f90:	401a      	ands	r2, r3
 8001f92:	68fb      	ldr	r3, [r7, #12]
 8001f94:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f9a:	492e      	ldr	r1, [pc, #184]	; (8002054 <config_pin+0xfa8>)
 8001f9c:	68ba      	ldr	r2, [r7, #8]
 8001f9e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001fa2:	3201      	adds	r2, #1
 8001fa4:	2101      	movs	r1, #1
 8001fa6:	fa01 f202 	lsl.w	r2, r1, r2
 8001faa:	43d2      	mvns	r2, r2
 8001fac:	401a      	ands	r2, r3
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 8001fb2:	68fb      	ldr	r3, [r7, #12]
 8001fb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001fb6:	4927      	ldr	r1, [pc, #156]	; (8002054 <config_pin+0xfa8>)
 8001fb8:	68ba      	ldr	r2, [r7, #8]
 8001fba:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001fbe:	3202      	adds	r2, #2
 8001fc0:	2101      	movs	r1, #1
 8001fc2:	fa01 f202 	lsl.w	r2, r1, r2
 8001fc6:	431a      	orrs	r2, r3
 8001fc8:	68fb      	ldr	r3, [r7, #12]
 8001fca:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001fd0:	4920      	ldr	r1, [pc, #128]	; (8002054 <config_pin+0xfa8>)
 8001fd2:	68ba      	ldr	r2, [r7, #8]
 8001fd4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001fd8:	3203      	adds	r2, #3
 8001fda:	2101      	movs	r1, #1
 8001fdc:	fa01 f202 	lsl.w	r2, r1, r2
 8001fe0:	431a      	orrs	r2, r3
 8001fe2:	68fb      	ldr	r3, [r7, #12]
 8001fe4:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8001fe6:	e0a0      	b.n	800212a <config_pin+0x107e>

                case (AF13):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001fec:	4919      	ldr	r1, [pc, #100]	; (8002054 <config_pin+0xfa8>)
 8001fee:	68ba      	ldr	r2, [r7, #8]
 8001ff0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8001ff4:	2101      	movs	r1, #1
 8001ff6:	fa01 f202 	lsl.w	r2, r1, r2
 8001ffa:	431a      	orrs	r2, r3
 8001ffc:	68fb      	ldr	r3, [r7, #12]
 8001ffe:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] &= ~(1<<(alt_PINPOS[pinNumber]+1)); // 0 in 2nd position
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002004:	4913      	ldr	r1, [pc, #76]	; (8002054 <config_pin+0xfa8>)
 8002006:	68ba      	ldr	r2, [r7, #8]
 8002008:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800200c:	3201      	adds	r2, #1
 800200e:	2101      	movs	r1, #1
 8002010:	fa01 f202 	lsl.w	r2, r1, r2
 8002014:	43d2      	mvns	r2, r2
 8002016:	401a      	ands	r2, r3
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 800201c:	68fb      	ldr	r3, [r7, #12]
 800201e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002020:	490c      	ldr	r1, [pc, #48]	; (8002054 <config_pin+0xfa8>)
 8002022:	68ba      	ldr	r2, [r7, #8]
 8002024:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8002028:	3202      	adds	r2, #2
 800202a:	2101      	movs	r1, #1
 800202c:	fa01 f202 	lsl.w	r2, r1, r2
 8002030:	431a      	orrs	r2, r3
 8002032:	68fb      	ldr	r3, [r7, #12]
 8002034:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 8002036:	68fb      	ldr	r3, [r7, #12]
 8002038:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800203a:	4906      	ldr	r1, [pc, #24]	; (8002054 <config_pin+0xfa8>)
 800203c:	68ba      	ldr	r2, [r7, #8]
 800203e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8002042:	3203      	adds	r2, #3
 8002044:	2101      	movs	r1, #1
 8002046:	fa01 f202 	lsl.w	r2, r1, r2
 800204a:	431a      	orrs	r2, r3
 800204c:	68fb      	ldr	r3, [r7, #12]
 800204e:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8002050:	e06b      	b.n	800212a <config_pin+0x107e>
 8002052:	bf00      	nop
 8002054:	20000040 	.word	0x20000040

                case (AF14):
                    port->AFR[1] &= ~(1<<alt_PINPOS[pinNumber]); // 0 in 1st position
 8002058:	68fb      	ldr	r3, [r7, #12]
 800205a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800205c:	4936      	ldr	r1, [pc, #216]	; (8002138 <config_pin+0x108c>)
 800205e:	68ba      	ldr	r2, [r7, #8]
 8002060:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8002064:	2101      	movs	r1, #1
 8002066:	fa01 f202 	lsl.w	r2, r1, r2
 800206a:	43d2      	mvns	r2, r2
 800206c:	401a      	ands	r2, r3
 800206e:	68fb      	ldr	r3, [r7, #12]
 8002070:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002076:	4930      	ldr	r1, [pc, #192]	; (8002138 <config_pin+0x108c>)
 8002078:	68ba      	ldr	r2, [r7, #8]
 800207a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800207e:	3201      	adds	r2, #1
 8002080:	2101      	movs	r1, #1
 8002082:	fa01 f202 	lsl.w	r2, r1, r2
 8002086:	431a      	orrs	r2, r3
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 800208c:	68fb      	ldr	r3, [r7, #12]
 800208e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002090:	4929      	ldr	r1, [pc, #164]	; (8002138 <config_pin+0x108c>)
 8002092:	68ba      	ldr	r2, [r7, #8]
 8002094:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8002098:	3202      	adds	r2, #2
 800209a:	2101      	movs	r1, #1
 800209c:	fa01 f202 	lsl.w	r2, r1, r2
 80020a0:	431a      	orrs	r2, r3
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 80020a6:	68fb      	ldr	r3, [r7, #12]
 80020a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020aa:	4923      	ldr	r1, [pc, #140]	; (8002138 <config_pin+0x108c>)
 80020ac:	68ba      	ldr	r2, [r7, #8]
 80020ae:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80020b2:	3203      	adds	r2, #3
 80020b4:	2101      	movs	r1, #1
 80020b6:	fa01 f202 	lsl.w	r2, r1, r2
 80020ba:	431a      	orrs	r2, r3
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 80020c0:	e033      	b.n	800212a <config_pin+0x107e>

                case (AF15):
                    port->AFR[1] |= (1<<alt_PINPOS[pinNumber]); 	//1 in 1st position
 80020c2:	68fb      	ldr	r3, [r7, #12]
 80020c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020c6:	491c      	ldr	r1, [pc, #112]	; (8002138 <config_pin+0x108c>)
 80020c8:	68ba      	ldr	r2, [r7, #8]
 80020ca:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80020ce:	2101      	movs	r1, #1
 80020d0:	fa01 f202 	lsl.w	r2, r1, r2
 80020d4:	431a      	orrs	r2, r3
 80020d6:	68fb      	ldr	r3, [r7, #12]
 80020d8:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+1)); //1 in 2nd position
 80020da:	68fb      	ldr	r3, [r7, #12]
 80020dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020de:	4916      	ldr	r1, [pc, #88]	; (8002138 <config_pin+0x108c>)
 80020e0:	68ba      	ldr	r2, [r7, #8]
 80020e2:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80020e6:	3201      	adds	r2, #1
 80020e8:	2101      	movs	r1, #1
 80020ea:	fa01 f202 	lsl.w	r2, r1, r2
 80020ee:	431a      	orrs	r2, r3
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+2)); //1 in 3rd position
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020f8:	490f      	ldr	r1, [pc, #60]	; (8002138 <config_pin+0x108c>)
 80020fa:	68ba      	ldr	r2, [r7, #8]
 80020fc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8002100:	3202      	adds	r2, #2
 8002102:	2101      	movs	r1, #1
 8002104:	fa01 f202 	lsl.w	r2, r1, r2
 8002108:	431a      	orrs	r2, r3
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	625a      	str	r2, [r3, #36]	; 0x24
                    port->AFR[1] |= (1<<(alt_PINPOS[pinNumber]+3)); //1 in 4th position
 800210e:	68fb      	ldr	r3, [r7, #12]
 8002110:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002112:	4909      	ldr	r1, [pc, #36]	; (8002138 <config_pin+0x108c>)
 8002114:	68ba      	ldr	r2, [r7, #8]
 8002116:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800211a:	3203      	adds	r2, #3
 800211c:	2101      	movs	r1, #1
 800211e:	fa01 f202 	lsl.w	r2, r1, r2
 8002122:	431a      	orrs	r2, r3
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	625a      	str	r2, [r3, #36]	; 0x24
                    break;
 8002128:	bf00      	nop
            }
        }
    }
}
 800212a:	bf00      	nop
 800212c:	3714      	adds	r7, #20
 800212e:	46bd      	mov	sp, r7
 8002130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop
 8002138:	20000040 	.word	0x20000040

0800213c <gpio_port_config>:
 * @param myPins : GPIO pin numbers. Enter as an array.
 * @param numPins : The number of GPIO pins you want to configure.
 * @retval None
 * @example : gpio_port_config(myGPIO,(int []) {1, 2, 3, 5},4);
 */
void gpio_port_config(GPIO_TYPE gpio_type, int myPins[], int numPins) {
 800213c:	b084      	sub	sp, #16
 800213e:	b5b0      	push	{r4, r5, r7, lr}
 8002140:	b084      	sub	sp, #16
 8002142:	af02      	add	r7, sp, #8
 8002144:	f107 0418 	add.w	r4, r7, #24
 8002148:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

    if (gpio_type.port==PORTA) {
 800214c:	69bb      	ldr	r3, [r7, #24]
 800214e:	4a25      	ldr	r2, [pc, #148]	; (80021e4 <gpio_port_config+0xa8>)
 8002150:	4293      	cmp	r3, r2
 8002152:	d105      	bne.n	8002160 <gpio_port_config+0x24>
        GPIO_CLOCK_ENABLE_PORTA;
 8002154:	4a24      	ldr	r2, [pc, #144]	; (80021e8 <gpio_port_config+0xac>)
 8002156:	4b24      	ldr	r3, [pc, #144]	; (80021e8 <gpio_port_config+0xac>)
 8002158:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800215a:	f043 0301 	orr.w	r3, r3, #1
 800215e:	6313      	str	r3, [r2, #48]	; 0x30
	}

    if (gpio_type.port==PORTB) {
 8002160:	69bb      	ldr	r3, [r7, #24]
 8002162:	4a22      	ldr	r2, [pc, #136]	; (80021ec <gpio_port_config+0xb0>)
 8002164:	4293      	cmp	r3, r2
 8002166:	d105      	bne.n	8002174 <gpio_port_config+0x38>
        GPIO_CLOCK_ENABLE_PORTB;
 8002168:	4a1f      	ldr	r2, [pc, #124]	; (80021e8 <gpio_port_config+0xac>)
 800216a:	4b1f      	ldr	r3, [pc, #124]	; (80021e8 <gpio_port_config+0xac>)
 800216c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800216e:	f043 0302 	orr.w	r3, r3, #2
 8002172:	6313      	str	r3, [r2, #48]	; 0x30
    }

    if (gpio_type.port==PORTC) {
 8002174:	69bb      	ldr	r3, [r7, #24]
 8002176:	4a1e      	ldr	r2, [pc, #120]	; (80021f0 <gpio_port_config+0xb4>)
 8002178:	4293      	cmp	r3, r2
 800217a:	d105      	bne.n	8002188 <gpio_port_config+0x4c>
        GPIO_CLOCK_ENABLE_PORTC;
 800217c:	4a1a      	ldr	r2, [pc, #104]	; (80021e8 <gpio_port_config+0xac>)
 800217e:	4b1a      	ldr	r3, [pc, #104]	; (80021e8 <gpio_port_config+0xac>)
 8002180:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002182:	f043 0304 	orr.w	r3, r3, #4
 8002186:	6313      	str	r3, [r2, #48]	; 0x30
    }

    if (gpio_type.port==PORTD) {
 8002188:	69bb      	ldr	r3, [r7, #24]
 800218a:	4a1a      	ldr	r2, [pc, #104]	; (80021f4 <gpio_port_config+0xb8>)
 800218c:	4293      	cmp	r3, r2
 800218e:	d105      	bne.n	800219c <gpio_port_config+0x60>
        GPIO_CLOCK_ENABLE_PORTD;
 8002190:	4a15      	ldr	r2, [pc, #84]	; (80021e8 <gpio_port_config+0xac>)
 8002192:	4b15      	ldr	r3, [pc, #84]	; (80021e8 <gpio_port_config+0xac>)
 8002194:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002196:	f043 0308 	orr.w	r3, r3, #8
 800219a:	6313      	str	r3, [r2, #48]	; 0x30
    }

    for (int i = 0; i<numPins; i++) {
 800219c:	2300      	movs	r3, #0
 800219e:	607b      	str	r3, [r7, #4]
 80021a0:	e015      	b.n	80021ce <gpio_port_config+0x92>
        gpio_type.pin= myPins[i];
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	009b      	lsls	r3, r3, #2
 80021a6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80021a8:	4413      	add	r3, r2
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	61fb      	str	r3, [r7, #28]
        config_pin(gpio_type.port,gpio_type.pin,gpio_type.speed,gpio_type.mode, gpio_type.mode_type,gpio_type.alt_func);
 80021ae:	69b8      	ldr	r0, [r7, #24]
 80021b0:	69f9      	ldr	r1, [r7, #28]
 80021b2:	6afc      	ldr	r4, [r7, #44]	; 0x2c
 80021b4:	6a3d      	ldr	r5, [r7, #32]
 80021b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021b8:	b29b      	uxth	r3, r3
 80021ba:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80021bc:	9201      	str	r2, [sp, #4]
 80021be:	9300      	str	r3, [sp, #0]
 80021c0:	462b      	mov	r3, r5
 80021c2:	4622      	mov	r2, r4
 80021c4:	f7fe ff72 	bl	80010ac <config_pin>
    for (int i = 0; i<numPins; i++) {
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	3301      	adds	r3, #1
 80021cc:	607b      	str	r3, [r7, #4]
 80021ce:	687a      	ldr	r2, [r7, #4]
 80021d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80021d2:	429a      	cmp	r2, r3
 80021d4:	dbe5      	blt.n	80021a2 <gpio_port_config+0x66>
    }
}
 80021d6:	bf00      	nop
 80021d8:	3708      	adds	r7, #8
 80021da:	46bd      	mov	sp, r7
 80021dc:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 80021e0:	b004      	add	sp, #16
 80021e2:	4770      	bx	lr
 80021e4:	40020000 	.word	0x40020000
 80021e8:	40023800 	.word	0x40023800
 80021ec:	40020400 	.word	0x40020400
 80021f0:	40020800 	.word	0x40020800
 80021f4:	40020c00 	.word	0x40020c00

080021f8 <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80021f8:	b480      	push	{r7}
 80021fa:	b083      	sub	sp, #12
 80021fc:	af00      	add	r7, sp, #0
 80021fe:	4603      	mov	r3, r0
 8002200:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8002202:	4909      	ldr	r1, [pc, #36]	; (8002228 <NVIC_EnableIRQ+0x30>)
 8002204:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002208:	095b      	lsrs	r3, r3, #5
 800220a:	79fa      	ldrb	r2, [r7, #7]
 800220c:	f002 021f 	and.w	r2, r2, #31
 8002210:	2001      	movs	r0, #1
 8002212:	fa00 f202 	lsl.w	r2, r0, r2
 8002216:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800221a:	bf00      	nop
 800221c:	370c      	adds	r7, #12
 800221e:	46bd      	mov	sp, r7
 8002220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002224:	4770      	bx	lr
 8002226:	bf00      	nop
 8002228:	e000e100 	.word	0xe000e100

0800222c <I2C_enable>:
 */

#include "I2C_Library.h"


void I2C_enable() {
 800222c:	b590      	push	{r4, r7, lr}
 800222e:	b093      	sub	sp, #76	; 0x4c
 8002230:	af06      	add	r7, sp, #24
	// I2C will not work unless the config_clock_50MHz(); is used before enabling I2C.
    int SCL = 6;
 8002232:	2306      	movs	r3, #6
 8002234:	62fb      	str	r3, [r7, #44]	; 0x2c
    int SDA = 7;
 8002236:	2307      	movs	r3, #7
 8002238:	62bb      	str	r3, [r7, #40]	; 0x28

	// PORTB alternate mode setup pin 6 and 7
    GPIO_TYPE myI2C;
    myI2C.port = PORTB;
 800223a:	4b25      	ldr	r3, [pc, #148]	; (80022d0 <I2C_enable+0xa4>)
 800223c:	607b      	str	r3, [r7, #4]
    myI2C.mode = ALT_MODE;
 800223e:	2302      	movs	r3, #2
 8002240:	60fb      	str	r3, [r7, #12]

    myI2C.speed = SPEED_LOW;
 8002242:	2300      	movs	r3, #0
 8002244:	61bb      	str	r3, [r7, #24]
    myI2C.alt_func = AF4;
 8002246:	2304      	movs	r3, #4
 8002248:	61fb      	str	r3, [r7, #28]
    gpio_port_config(myI2C,(int []) {SCL,SDA},2);
 800224a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800224c:	623b      	str	r3, [r7, #32]
 800224e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002250:	627b      	str	r3, [r7, #36]	; 0x24
 8002252:	2302      	movs	r3, #2
 8002254:	9304      	str	r3, [sp, #16]
 8002256:	f107 0320 	add.w	r3, r7, #32
 800225a:	9303      	str	r3, [sp, #12]
 800225c:	466c      	mov	r4, sp
 800225e:	f107 0314 	add.w	r3, r7, #20
 8002262:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002266:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800226a:	1d3b      	adds	r3, r7, #4
 800226c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800226e:	f7ff ff65 	bl	800213c <gpio_port_config>

	// Enabling clock for I2C
    RCC->APB1ENR |=RCC_APB1ENR_I2C1EN;
 8002272:	4a18      	ldr	r2, [pc, #96]	; (80022d4 <I2C_enable+0xa8>)
 8002274:	4b17      	ldr	r3, [pc, #92]	; (80022d4 <I2C_enable+0xa8>)
 8002276:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002278:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800227c:	6413      	str	r3, [r2, #64]	; 0x40


	// The APB clock frequency is 50 MHz.
    I2C1->CR2 |= 0b110010;
 800227e:	4a16      	ldr	r2, [pc, #88]	; (80022d8 <I2C_enable+0xac>)
 8002280:	4b15      	ldr	r3, [pc, #84]	; (80022d8 <I2C_enable+0xac>)
 8002282:	685b      	ldr	r3, [r3, #4]
 8002284:	f043 0332 	orr.w	r3, r3, #50	; 0x32
 8002288:	6053      	str	r3, [r2, #4]
	// Standard I2C master mode
    I2C1->CCR &= ~I2C_CCR_FS;
 800228a:	4a13      	ldr	r2, [pc, #76]	; (80022d8 <I2C_enable+0xac>)
 800228c:	4b12      	ldr	r3, [pc, #72]	; (80022d8 <I2C_enable+0xac>)
 800228e:	69db      	ldr	r3, [r3, #28]
 8002290:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002294:	61d3      	str	r3, [r2, #28]
	// Clock control register as 100 kHZ for an APB frequency of 50 MHz.
	// (2*100khz)^-1 = RCC*(1/50Mhz)
    I2C1->CCR |= 250;
 8002296:	4a10      	ldr	r2, [pc, #64]	; (80022d8 <I2C_enable+0xac>)
 8002298:	4b0f      	ldr	r3, [pc, #60]	; (80022d8 <I2C_enable+0xac>)
 800229a:	69db      	ldr	r3, [r3, #28]
 800229c:	f043 03fa 	orr.w	r3, r3, #250	; 0xfa
 80022a0:	61d3      	str	r3, [r2, #28]
	// Maximum rise time. In standard mode, the maximum SCL rise time is 1000ns. We have 50MHz apb freq
	// which is 20ns. 1000/20 +1 = 51
    I2C1->TRISE |= 51;
 80022a2:	4a0d      	ldr	r2, [pc, #52]	; (80022d8 <I2C_enable+0xac>)
 80022a4:	4b0c      	ldr	r3, [pc, #48]	; (80022d8 <I2C_enable+0xac>)
 80022a6:	6a1b      	ldr	r3, [r3, #32]
 80022a8:	f043 0333 	orr.w	r3, r3, #51	; 0x33
 80022ac:	6213      	str	r3, [r2, #32]

	// Peripheral Enable
    I2C1->CR1 |= I2C_CR1_PE;
 80022ae:	4a0a      	ldr	r2, [pc, #40]	; (80022d8 <I2C_enable+0xac>)
 80022b0:	4b09      	ldr	r3, [pc, #36]	; (80022d8 <I2C_enable+0xac>)
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	f043 0301 	orr.w	r3, r3, #1
 80022b8:	6013      	str	r3, [r2, #0]

	/* Interrupt Enabled for the I2C1 Error event */
    I2C1->CR2 = I2C_CR2_ITERREN;
 80022ba:	4b07      	ldr	r3, [pc, #28]	; (80022d8 <I2C_enable+0xac>)
 80022bc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80022c0:	605a      	str	r2, [r3, #4]
    NVIC_EnableIRQ(I2C1_ER_IRQn);
 80022c2:	2020      	movs	r0, #32
 80022c4:	f7ff ff98 	bl	80021f8 <NVIC_EnableIRQ>
}
 80022c8:	bf00      	nop
 80022ca:	3734      	adds	r7, #52	; 0x34
 80022cc:	46bd      	mov	sp, r7
 80022ce:	bd90      	pop	{r4, r7, pc}
 80022d0:	40020400 	.word	0x40020400
 80022d4:	40023800 	.word	0x40023800
 80022d8:	40005400 	.word	0x40005400

080022dc <I2C1_ER_IRQHandler>:
/* Interrupt Service Routine for I2C1 Error event*/
void I2C1_ER_IRQHandler() {
 80022dc:	b480      	push	{r7}
 80022de:	af00      	add	r7, sp, #0
    I2C1->SR1 &= ~I2C_SR1_AF;
 80022e0:	4a08      	ldr	r2, [pc, #32]	; (8002304 <I2C1_ER_IRQHandler+0x28>)
 80022e2:	4b08      	ldr	r3, [pc, #32]	; (8002304 <I2C1_ER_IRQHandler+0x28>)
 80022e4:	695b      	ldr	r3, [r3, #20]
 80022e6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80022ea:	6153      	str	r3, [r2, #20]
    I2C1->CR1 |= I2C_CR1_STOP;
 80022ec:	4a05      	ldr	r2, [pc, #20]	; (8002304 <I2C1_ER_IRQHandler+0x28>)
 80022ee:	4b05      	ldr	r3, [pc, #20]	; (8002304 <I2C1_ER_IRQHandler+0x28>)
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80022f6:	6013      	str	r3, [r2, #0]
}
 80022f8:	bf00      	nop
 80022fa:	46bd      	mov	sp, r7
 80022fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002300:	4770      	bx	lr
 8002302:	bf00      	nop
 8002304:	40005400 	.word	0x40005400

08002308 <I2C_addressWrite>:


void I2C_addressWrite(uint8_t i2c_address) {
 8002308:	b480      	push	{r7}
 800230a:	b083      	sub	sp, #12
 800230c:	af00      	add	r7, sp, #0
 800230e:	4603      	mov	r3, r0
 8002310:	71fb      	strb	r3, [r7, #7]

    I2C1->DR = (i2c_address<<1) & 0b11111110; //lsb is 0 (Reset), therefore master is in transmitter mode
 8002312:	4a0c      	ldr	r2, [pc, #48]	; (8002344 <I2C_addressWrite+0x3c>)
 8002314:	79fb      	ldrb	r3, [r7, #7]
 8002316:	005b      	lsls	r3, r3, #1
 8002318:	b2db      	uxtb	r3, r3
 800231a:	6113      	str	r3, [r2, #16]

	// EV6
    while(!(I2C1->SR1 & I2C_SR1_ADDR)); // Wait for Received Address matched
 800231c:	bf00      	nop
 800231e:	4b09      	ldr	r3, [pc, #36]	; (8002344 <I2C_addressWrite+0x3c>)
 8002320:	695b      	ldr	r3, [r3, #20]
 8002322:	f003 0302 	and.w	r3, r3, #2
 8002326:	2b00      	cmp	r3, #0
 8002328:	d0f9      	beq.n	800231e <I2C_addressWrite+0x16>
    while(!(I2C1->SR2 & I2C_SR2_BUSY));
 800232a:	bf00      	nop
 800232c:	4b05      	ldr	r3, [pc, #20]	; (8002344 <I2C_addressWrite+0x3c>)
 800232e:	699b      	ldr	r3, [r3, #24]
 8002330:	f003 0302 	and.w	r3, r3, #2
 8002334:	2b00      	cmp	r3, #0
 8002336:	d0f9      	beq.n	800232c <I2C_addressWrite+0x24>
}
 8002338:	bf00      	nop
 800233a:	370c      	adds	r7, #12
 800233c:	46bd      	mov	sp, r7
 800233e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002342:	4770      	bx	lr
 8002344:	40005400 	.word	0x40005400

08002348 <I2C_data>:
    while(!(I2C1->SR1 & I2C_SR1_ADDR)); // Wait for Received Address matched
    while(!(I2C1->SR2 & I2C_SR2_BUSY));
	// Reading SR1 then SR2 clears ADDR register
}

void I2C_data(uint8_t i2c_data) {
 8002348:	b480      	push	{r7}
 800234a:	b083      	sub	sp, #12
 800234c:	af00      	add	r7, sp, #0
 800234e:	4603      	mov	r3, r0
 8002350:	71fb      	strb	r3, [r7, #7]
    I2C1->DR = i2c_data;
 8002352:	4a08      	ldr	r2, [pc, #32]	; (8002374 <I2C_data+0x2c>)
 8002354:	79fb      	ldrb	r3, [r7, #7]
 8002356:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_TXE));
 8002358:	bf00      	nop
 800235a:	4b06      	ldr	r3, [pc, #24]	; (8002374 <I2C_data+0x2c>)
 800235c:	695b      	ldr	r3, [r3, #20]
 800235e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002362:	2b00      	cmp	r3, #0
 8002364:	d0f9      	beq.n	800235a <I2C_data+0x12>
}
 8002366:	bf00      	nop
 8002368:	370c      	adds	r7, #12
 800236a:	46bd      	mov	sp, r7
 800236c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002370:	4770      	bx	lr
 8002372:	bf00      	nop
 8002374:	40005400 	.word	0x40005400

08002378 <I2C_stop>:
		//uint16_t i2c_data = I2C1->DR;
    while(!(I2C1->SR1 & I2C_SR1_TXE));
    return (uint8_t) I2C1->DR;
}

void I2C_stop() {
 8002378:	b480      	push	{r7}
 800237a:	af00      	add	r7, sp, #0
    while (!(I2C1->SR1 & I2C_SR1_BTF)); // Byte transfer finished succeeded
 800237c:	bf00      	nop
 800237e:	4b08      	ldr	r3, [pc, #32]	; (80023a0 <I2C_stop+0x28>)
 8002380:	695b      	ldr	r3, [r3, #20]
 8002382:	f003 0304 	and.w	r3, r3, #4
 8002386:	2b00      	cmp	r3, #0
 8002388:	d0f9      	beq.n	800237e <I2C_stop+0x6>
    I2C1->CR1 |= I2C_CR1_STOP;
 800238a:	4a05      	ldr	r2, [pc, #20]	; (80023a0 <I2C_stop+0x28>)
 800238c:	4b04      	ldr	r3, [pc, #16]	; (80023a0 <I2C_stop+0x28>)
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002394:	6013      	str	r3, [r2, #0]
}
 8002396:	bf00      	nop
 8002398:	46bd      	mov	sp, r7
 800239a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239e:	4770      	bx	lr
 80023a0:	40005400 	.word	0x40005400

080023a4 <I2C_start>:


void I2C_start() {
 80023a4:	b480      	push	{r7}
 80023a6:	af00      	add	r7, sp, #0
	//while(I2C1->SR2 & I2C_SR2_BUSY);// Unnecessary
	I2C1->CR1 |= I2C_CR1_START;
 80023a8:	4a08      	ldr	r2, [pc, #32]	; (80023cc <I2C_start+0x28>)
 80023aa:	4b08      	ldr	r3, [pc, #32]	; (80023cc <I2C_start+0x28>)
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80023b2:	6013      	str	r3, [r2, #0]
	while(!(I2C1->SR1 & I2C_SR1_SB)); // keep waiting until the SB bit has been set
 80023b4:	bf00      	nop
 80023b6:	4b05      	ldr	r3, [pc, #20]	; (80023cc <I2C_start+0x28>)
 80023b8:	695b      	ldr	r3, [r3, #20]
 80023ba:	f003 0301 	and.w	r3, r3, #1
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d0f9      	beq.n	80023b6 <I2C_start+0x12>
}
 80023c2:	bf00      	nop
 80023c4:	46bd      	mov	sp, r7
 80023c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ca:	4770      	bx	lr
 80023cc:	40005400 	.word	0x40005400

080023d0 <NVIC_EnableIRQ>:
{
 80023d0:	b480      	push	{r7}
 80023d2:	b083      	sub	sp, #12
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	4603      	mov	r3, r0
 80023d8:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 80023da:	4909      	ldr	r1, [pc, #36]	; (8002400 <NVIC_EnableIRQ+0x30>)
 80023dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023e0:	095b      	lsrs	r3, r3, #5
 80023e2:	79fa      	ldrb	r2, [r7, #7]
 80023e4:	f002 021f 	and.w	r2, r2, #31
 80023e8:	2001      	movs	r0, #1
 80023ea:	fa00 f202 	lsl.w	r2, r0, r2
 80023ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80023f2:	bf00      	nop
 80023f4:	370c      	adds	r7, #12
 80023f6:	46bd      	mov	sp, r7
 80023f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023fc:	4770      	bx	lr
 80023fe:	bf00      	nop
 8002400:	e000e100 	.word	0xe000e100

08002404 <config_clock_50MHz>:
// Declaring as volatile
// Volatile means that Ticks can change at any time
// Declaring volatile is needed for global variables changed by interrupted service routines
// https://www.embedded.com/electronics-blogs/beginner-s-corner/4023801/Introduction-to-the-Volatile-Keyword

void config_clock_50MHz(void) {
 8002404:	b580      	push	{r7, lr}
 8002406:	af00      	add	r7, sp, #0
	/* Enable HSI */
    RCC->CR |= ((uint32_t)RCC_CR_HSION);
 8002408:	4a4d      	ldr	r2, [pc, #308]	; (8002540 <config_clock_50MHz+0x13c>)
 800240a:	4b4d      	ldr	r3, [pc, #308]	; (8002540 <config_clock_50MHz+0x13c>)
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f043 0301 	orr.w	r3, r3, #1
 8002412:	6013      	str	r3, [r2, #0]

	/* Wait for HSI to be ready */
    while ((RCC->CR & RCC_CR_HSIRDY) == 0) {
 8002414:	bf00      	nop
 8002416:	4b4a      	ldr	r3, [pc, #296]	; (8002540 <config_clock_50MHz+0x13c>)
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	f003 0302 	and.w	r3, r3, #2
 800241e:	2b00      	cmp	r3, #0
 8002420:	d0f9      	beq.n	8002416 <config_clock_50MHz+0x12>
	  // Nop
    }

	/* Set HSI as the System Clock */
    RCC->CFGR = RCC_CFGR_SW_HSI;
 8002422:	4b47      	ldr	r3, [pc, #284]	; (8002540 <config_clock_50MHz+0x13c>)
 8002424:	2200      	movs	r2, #0
 8002426:	609a      	str	r2, [r3, #8]

	/* Wait for HSI to be used for the system clock */
    while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI) {
 8002428:	bf00      	nop
 800242a:	4b45      	ldr	r3, [pc, #276]	; (8002540 <config_clock_50MHz+0x13c>)
 800242c:	689b      	ldr	r3, [r3, #8]
 800242e:	f003 030c 	and.w	r3, r3, #12
 8002432:	2b00      	cmp	r3, #0
 8002434:	d1f9      	bne.n	800242a <config_clock_50MHz+0x26>
	 // Nop
    }

    FLASH->ACR |= FLASH_ACR_PRFTEN;                          // Enable Prefetch Buffer
 8002436:	4a43      	ldr	r2, [pc, #268]	; (8002544 <config_clock_50MHz+0x140>)
 8002438:	4b42      	ldr	r3, [pc, #264]	; (8002544 <config_clock_50MHz+0x140>)
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002440:	6013      	str	r3, [r2, #0]
    FLASH->ACR |= FLASH_ACR_LATENCY;                         // Flash 1 wait state
 8002442:	4a40      	ldr	r2, [pc, #256]	; (8002544 <config_clock_50MHz+0x140>)
 8002444:	4b3f      	ldr	r3, [pc, #252]	; (8002544 <config_clock_50MHz+0x140>)
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	f043 030f 	orr.w	r3, r3, #15
 800244c:	6013      	str	r3, [r2, #0]
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;                       // Enable the PWR APB1 Clock
 800244e:	4a3c      	ldr	r2, [pc, #240]	; (8002540 <config_clock_50MHz+0x13c>)
 8002450:	4b3b      	ldr	r3, [pc, #236]	; (8002540 <config_clock_50MHz+0x13c>)
 8002452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002454:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002458:	6413      	str	r3, [r2, #64]	; 0x40
    PWR->CR = PWR_CR_VOS_0;                                  // Select the Voltage Range 1 (1.8V)
 800245a:	4b3b      	ldr	r3, [pc, #236]	; (8002548 <config_clock_50MHz+0x144>)
 800245c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002460:	601a      	str	r2, [r3, #0]
	// when VOS '0' the maximum value of hclk = 144 MHz
    while((PWR->CSR & PWR_CSR_VOSRDY ) != 0);
 8002462:	bf00      	nop
 8002464:	4b38      	ldr	r3, [pc, #224]	; (8002548 <config_clock_50MHz+0x144>)
 8002466:	685b      	ldr	r3, [r3, #4]
 8002468:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800246c:	2b00      	cmp	r3, #0
 800246e:	d1f9      	bne.n	8002464 <config_clock_50MHz+0x60>

	/* PLLCLK = (HSI * 4)/2 = 32 MHz */ //NAH
    RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC| RCC_PLLCFGR_PLLM |  RCC_PLLCFGR_PLLN);
 8002470:	4933      	ldr	r1, [pc, #204]	; (8002540 <config_clock_50MHz+0x13c>)
 8002472:	4b33      	ldr	r3, [pc, #204]	; (8002540 <config_clock_50MHz+0x13c>)
 8002474:	685a      	ldr	r2, [r3, #4]
 8002476:	4b35      	ldr	r3, [pc, #212]	; (800254c <config_clock_50MHz+0x148>)
 8002478:	4013      	ands	r3, r2
 800247a:	604b      	str	r3, [r1, #4]
    RCC->PLLCFGR |= (RCC_PLLCFGR_PLLSRC_HSI|RCC_PLLCFGR_PLLM_4 | (200<<6));
 800247c:	4a30      	ldr	r2, [pc, #192]	; (8002540 <config_clock_50MHz+0x13c>)
 800247e:	4b30      	ldr	r3, [pc, #192]	; (8002540 <config_clock_50MHz+0x13c>)
 8002480:	685b      	ldr	r3, [r3, #4]
 8002482:	f443 5348 	orr.w	r3, r3, #12800	; 0x3200
 8002486:	f043 0310 	orr.w	r3, r3, #16
 800248a:	6053      	str	r3, [r2, #4]

	/* Peripheral Clock divisors */
    RCC->CFGR &= ~(0xF<<4); // Cleared 4 bits. HPRE[3:0] which are bits 4,5,6,7. This means  that the system clock is not divided
 800248c:	4a2c      	ldr	r2, [pc, #176]	; (8002540 <config_clock_50MHz+0x13c>)
 800248e:	4b2c      	ldr	r3, [pc, #176]	; (8002540 <config_clock_50MHz+0x13c>)
 8002490:	689b      	ldr	r3, [r3, #8]
 8002492:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002496:	6093      	str	r3, [r2, #8]
    RCC->CFGR |= (0b1000<<4); // AHB system clock now divided by 2.
 8002498:	4a29      	ldr	r2, [pc, #164]	; (8002540 <config_clock_50MHz+0x13c>)
 800249a:	4b29      	ldr	r3, [pc, #164]	; (8002540 <config_clock_50MHz+0x13c>)
 800249c:	689b      	ldr	r3, [r3, #8]
 800249e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80024a2:	6093      	str	r3, [r2, #8]
	// HCLK is now 50 MHz



	// HCLK = SYSCLK
    RCC->CFGR &= ~(0x7<<10); // cleared 3 bits. PPRE1[2:0] which are bits 10,11,12
 80024a4:	4a26      	ldr	r2, [pc, #152]	; (8002540 <config_clock_50MHz+0x13c>)
 80024a6:	4b26      	ldr	r3, [pc, #152]	; (8002540 <config_clock_50MHz+0x13c>)
 80024a8:	689b      	ldr	r3, [r3, #8]
 80024aa:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80024ae:	6093      	str	r3, [r2, #8]
	//RCC->CFGR |= (0b100<<10); // Set as 101, which means the AHB clock is divided by 2. APB1. 50mhz


    RCC->CFGR &= ~(0x7<<13); // Cleared 3 bits. PPRE2[2:0] which are bits 13,14,15
 80024b0:	4a23      	ldr	r2, [pc, #140]	; (8002540 <config_clock_50MHz+0x13c>)
 80024b2:	4b23      	ldr	r3, [pc, #140]	; (8002540 <config_clock_50MHz+0x13c>)
 80024b4:	689b      	ldr	r3, [r3, #8]
 80024b6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80024ba:	6093      	str	r3, [r2, #8]


	// the commented out apb1 apb2 means not divided.

	/* Enable PLL */
    RCC->CR &= ~RCC_CR_PLLON;       /* Disable PLL */
 80024bc:	4a20      	ldr	r2, [pc, #128]	; (8002540 <config_clock_50MHz+0x13c>)
 80024be:	4b20      	ldr	r3, [pc, #128]	; (8002540 <config_clock_50MHz+0x13c>)
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80024c6:	6013      	str	r3, [r2, #0]
    RCC->CR |= RCC_CR_PLLON;        /* Enable PLL     */
 80024c8:	4a1d      	ldr	r2, [pc, #116]	; (8002540 <config_clock_50MHz+0x13c>)
 80024ca:	4b1d      	ldr	r3, [pc, #116]	; (8002540 <config_clock_50MHz+0x13c>)
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80024d2:	6013      	str	r3, [r2, #0]

	   /* Wait until the PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0) {
 80024d4:	bf00      	nop
 80024d6:	4b1a      	ldr	r3, [pc, #104]	; (8002540 <config_clock_50MHz+0x13c>)
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024de:	2b00      	cmp	r3, #0
 80024e0:	d0f9      	beq.n	80024d6 <config_clock_50MHz+0xd2>
	       //Nop
    }

	   /* Select PLL as system Clock */
    RCC->CFGR &= ~RCC_CFGR_SW;            /* Clear */
 80024e2:	4a17      	ldr	r2, [pc, #92]	; (8002540 <config_clock_50MHz+0x13c>)
 80024e4:	4b16      	ldr	r3, [pc, #88]	; (8002540 <config_clock_50MHz+0x13c>)
 80024e6:	689b      	ldr	r3, [r3, #8]
 80024e8:	f023 0303 	bic.w	r3, r3, #3
 80024ec:	6093      	str	r3, [r2, #8]
    RCC->CFGR |=  RCC_CFGR_SW_PLL;    /* Set   */
 80024ee:	4a14      	ldr	r2, [pc, #80]	; (8002540 <config_clock_50MHz+0x13c>)
 80024f0:	4b13      	ldr	r3, [pc, #76]	; (8002540 <config_clock_50MHz+0x13c>)
 80024f2:	689b      	ldr	r3, [r3, #8]
 80024f4:	f043 0302 	orr.w	r3, r3, #2
 80024f8:	6093      	str	r3, [r2, #8]

	   /* Wait for PLL to become system core clock */
    while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL) {
 80024fa:	bf00      	nop
 80024fc:	4b10      	ldr	r3, [pc, #64]	; (8002540 <config_clock_50MHz+0x13c>)
 80024fe:	689b      	ldr	r3, [r3, #8]
 8002500:	f003 030c 	and.w	r3, r3, #12
 8002504:	2b08      	cmp	r3, #8
 8002506:	d1f9      	bne.n	80024fc <config_clock_50MHz+0xf8>




	//************************* configuring for milisecond delay
    RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8002508:	4a0d      	ldr	r2, [pc, #52]	; (8002540 <config_clock_50MHz+0x13c>)
 800250a:	4b0d      	ldr	r3, [pc, #52]	; (8002540 <config_clock_50MHz+0x13c>)
 800250c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800250e:	f043 0304 	orr.w	r3, r3, #4
 8002512:	6413      	str	r3, [r2, #64]	; 0x40
    TIM4->PSC = 50;
 8002514:	4b0e      	ldr	r3, [pc, #56]	; (8002550 <config_clock_50MHz+0x14c>)
 8002516:	2232      	movs	r2, #50	; 0x32
 8002518:	629a      	str	r2, [r3, #40]	; 0x28
    TIM4->ARR = 1000;
 800251a:	4b0d      	ldr	r3, [pc, #52]	; (8002550 <config_clock_50MHz+0x14c>)
 800251c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002520:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM4->CR1 &= ~TIM_CR1_DIR; //Up counter. By default, but still good practice
 8002522:	4a0b      	ldr	r2, [pc, #44]	; (8002550 <config_clock_50MHz+0x14c>)
 8002524:	4b0a      	ldr	r3, [pc, #40]	; (8002550 <config_clock_50MHz+0x14c>)
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	f023 0310 	bic.w	r3, r3, #16
 800252c:	6013      	str	r3, [r2, #0]
	 //TIM4->CR1 |= TIM_CR1_URS; // Only up/down counter generates an update interrupt // good practice
    TIM4->DIER = TIM_DIER_UIE; // Update interrupt enabled
 800252e:	4b08      	ldr	r3, [pc, #32]	; (8002550 <config_clock_50MHz+0x14c>)
 8002530:	2201      	movs	r2, #1
 8002532:	60da      	str	r2, [r3, #12]
    NVIC_EnableIRQ(TIM4_IRQn);
 8002534:	201e      	movs	r0, #30
 8002536:	f7ff ff4b 	bl	80023d0 <NVIC_EnableIRQ>
}
 800253a:	bf00      	nop
 800253c:	bd80      	pop	{r7, pc}
 800253e:	bf00      	nop
 8002540:	40023800 	.word	0x40023800
 8002544:	40023c00 	.word	0x40023c00
 8002548:	40007000 	.word	0x40007000
 800254c:	ffbf8000 	.word	0xffbf8000
 8002550:	40000800 	.word	0x40000800

08002554 <TIM4_IRQHandler>:


void TIM4_IRQHandler() {
 8002554:	b480      	push	{r7}
 8002556:	af00      	add	r7, sp, #0
    Ticks++;
 8002558:	4b07      	ldr	r3, [pc, #28]	; (8002578 <TIM4_IRQHandler+0x24>)
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	3301      	adds	r3, #1
 800255e:	4a06      	ldr	r2, [pc, #24]	; (8002578 <TIM4_IRQHandler+0x24>)
 8002560:	6013      	str	r3, [r2, #0]
    TIM4->SR &= ~TIM_SR_UIF; // cleared update interrupt
 8002562:	4a06      	ldr	r2, [pc, #24]	; (800257c <TIM4_IRQHandler+0x28>)
 8002564:	4b05      	ldr	r3, [pc, #20]	; (800257c <TIM4_IRQHandler+0x28>)
 8002566:	691b      	ldr	r3, [r3, #16]
 8002568:	f023 0301 	bic.w	r3, r3, #1
 800256c:	6113      	str	r3, [r2, #16]
}
 800256e:	bf00      	nop
 8002570:	46bd      	mov	sp, r7
 8002572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002576:	4770      	bx	lr
 8002578:	2000070c 	.word	0x2000070c
 800257c:	40000800 	.word	0x40000800

08002580 <delay_mS>:


void delay_mS(uint32_t ms) {
 8002580:	b480      	push	{r7}
 8002582:	b083      	sub	sp, #12
 8002584:	af00      	add	r7, sp, #0
 8002586:	6078      	str	r0, [r7, #4]
    TIM4->CR1 |= TIM_CR1_CEN;
 8002588:	4a0d      	ldr	r2, [pc, #52]	; (80025c0 <delay_mS+0x40>)
 800258a:	4b0d      	ldr	r3, [pc, #52]	; (80025c0 <delay_mS+0x40>)
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	f043 0301 	orr.w	r3, r3, #1
 8002592:	6013      	str	r3, [r2, #0]
    Ticks = 0;
 8002594:	4b0b      	ldr	r3, [pc, #44]	; (80025c4 <delay_mS+0x44>)
 8002596:	2200      	movs	r2, #0
 8002598:	601a      	str	r2, [r3, #0]

    while(Ticks<ms);
 800259a:	bf00      	nop
 800259c:	4b09      	ldr	r3, [pc, #36]	; (80025c4 <delay_mS+0x44>)
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	461a      	mov	r2, r3
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	429a      	cmp	r2, r3
 80025a6:	d3f9      	bcc.n	800259c <delay_mS+0x1c>

    TIM4->CR1 &= ~TIM_CR1_CEN;
 80025a8:	4a05      	ldr	r2, [pc, #20]	; (80025c0 <delay_mS+0x40>)
 80025aa:	4b05      	ldr	r3, [pc, #20]	; (80025c0 <delay_mS+0x40>)
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	f023 0301 	bic.w	r3, r3, #1
 80025b2:	6013      	str	r3, [r2, #0]
}
 80025b4:	bf00      	nop
 80025b6:	370c      	adds	r7, #12
 80025b8:	46bd      	mov	sp, r7
 80025ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025be:	4770      	bx	lr
 80025c0:	40000800 	.word	0x40000800
 80025c4:	2000070c 	.word	0x2000070c

080025c8 <lcd_i2c_sendCmd>:
 *      Author: Falcon
 */

#include "lcd_i2c.h"

void lcd_i2c_sendCmd(uint8_t cmd) {
 80025c8:	b580      	push	{r7, lr}
 80025ca:	b082      	sub	sp, #8
 80025cc:	af00      	add	r7, sp, #0
 80025ce:	4603      	mov	r3, r0
 80025d0:	71fb      	strb	r3, [r7, #7]

    I2C_start();
 80025d2:	f7ff fee7 	bl	80023a4 <I2C_start>
    I2C_addressWrite(0x27); //hard coded address for testing purposes
 80025d6:	2027      	movs	r0, #39	; 0x27
 80025d8:	f7ff fe96 	bl	8002308 <I2C_addressWrite>
    // upper nibble
    I2C_data((cmd&0xF0)|0b1100); //0x0C  is 1 1 0 0. i.e. enable 1
 80025dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025e0:	f023 030f 	bic.w	r3, r3, #15
 80025e4:	b25b      	sxtb	r3, r3
 80025e6:	f043 030c 	orr.w	r3, r3, #12
 80025ea:	b25b      	sxtb	r3, r3
 80025ec:	b2db      	uxtb	r3, r3
 80025ee:	4618      	mov	r0, r3
 80025f0:	f7ff feaa 	bl	8002348 <I2C_data>
    I2C_data((cmd&0xF0)|0b1000); //0x08  is 1 0 0 0 i.e. enable 0
 80025f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025f8:	f023 030f 	bic.w	r3, r3, #15
 80025fc:	b25b      	sxtb	r3, r3
 80025fe:	f043 0308 	orr.w	r3, r3, #8
 8002602:	b25b      	sxtb	r3, r3
 8002604:	b2db      	uxtb	r3, r3
 8002606:	4618      	mov	r0, r3
 8002608:	f7ff fe9e 	bl	8002348 <I2C_data>
    // lower nibble
    I2C_data(((cmd<<4)&0xF0)|0b1100);
 800260c:	79fb      	ldrb	r3, [r7, #7]
 800260e:	011b      	lsls	r3, r3, #4
 8002610:	b25b      	sxtb	r3, r3
 8002612:	f043 030c 	orr.w	r3, r3, #12
 8002616:	b25b      	sxtb	r3, r3
 8002618:	b2db      	uxtb	r3, r3
 800261a:	4618      	mov	r0, r3
 800261c:	f7ff fe94 	bl	8002348 <I2C_data>
    I2C_data(((cmd<<4)&0xF0)|0b1000);
 8002620:	79fb      	ldrb	r3, [r7, #7]
 8002622:	011b      	lsls	r3, r3, #4
 8002624:	b25b      	sxtb	r3, r3
 8002626:	f043 0308 	orr.w	r3, r3, #8
 800262a:	b25b      	sxtb	r3, r3
 800262c:	b2db      	uxtb	r3, r3
 800262e:	4618      	mov	r0, r3
 8002630:	f7ff fe8a 	bl	8002348 <I2C_data>
    I2C_stop();
 8002634:	f7ff fea0 	bl	8002378 <I2C_stop>
}
 8002638:	bf00      	nop
 800263a:	3708      	adds	r7, #8
 800263c:	46bd      	mov	sp, r7
 800263e:	bd80      	pop	{r7, pc}

08002640 <lcd_i2c_sendData>:


void lcd_i2c_sendData(char data) {
 8002640:	b580      	push	{r7, lr}
 8002642:	b082      	sub	sp, #8
 8002644:	af00      	add	r7, sp, #0
 8002646:	4603      	mov	r3, r0
 8002648:	71fb      	strb	r3, [r7, #7]

    I2C_start();
 800264a:	f7ff feab 	bl	80023a4 <I2C_start>
    I2C_addressWrite(0x27); //hard coded for testing purposes
 800264e:	2027      	movs	r0, #39	; 0x27
 8002650:	f7ff fe5a 	bl	8002308 <I2C_addressWrite>
    //									       EN RW RS    P3 is the backlight. P3 =1, backlight is on
    // upper nibble				  //		P3 P2 P1 P0
    I2C_data((data&0xF0)|0b1101); //0x0C is  1  1  0  0. i.e. enable 1 RS=1
 8002654:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002658:	f023 030f 	bic.w	r3, r3, #15
 800265c:	b25b      	sxtb	r3, r3
 800265e:	f043 030d 	orr.w	r3, r3, #13
 8002662:	b25b      	sxtb	r3, r3
 8002664:	b2db      	uxtb	r3, r3
 8002666:	4618      	mov	r0, r3
 8002668:	f7ff fe6e 	bl	8002348 <I2C_data>
    I2C_data((data&0xF0)|0b1001); //0x08  is 1 0 0 0 i.e. enable 0 RS=1
 800266c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002670:	f023 030f 	bic.w	r3, r3, #15
 8002674:	b25b      	sxtb	r3, r3
 8002676:	f043 0309 	orr.w	r3, r3, #9
 800267a:	b25b      	sxtb	r3, r3
 800267c:	b2db      	uxtb	r3, r3
 800267e:	4618      	mov	r0, r3
 8002680:	f7ff fe62 	bl	8002348 <I2C_data>
    // lower nibble
    I2C_data(((data<<4)&0xF0)|0b1101);
 8002684:	79fb      	ldrb	r3, [r7, #7]
 8002686:	011b      	lsls	r3, r3, #4
 8002688:	b25b      	sxtb	r3, r3
 800268a:	f043 030d 	orr.w	r3, r3, #13
 800268e:	b25b      	sxtb	r3, r3
 8002690:	b2db      	uxtb	r3, r3
 8002692:	4618      	mov	r0, r3
 8002694:	f7ff fe58 	bl	8002348 <I2C_data>
    I2C_data(((data<<4)&0xF0)|0b1001);
 8002698:	79fb      	ldrb	r3, [r7, #7]
 800269a:	011b      	lsls	r3, r3, #4
 800269c:	b25b      	sxtb	r3, r3
 800269e:	f043 0309 	orr.w	r3, r3, #9
 80026a2:	b25b      	sxtb	r3, r3
 80026a4:	b2db      	uxtb	r3, r3
 80026a6:	4618      	mov	r0, r3
 80026a8:	f7ff fe4e 	bl	8002348 <I2C_data>
    I2C_stop();
 80026ac:	f7ff fe64 	bl	8002378 <I2C_stop>
}
 80026b0:	bf00      	nop
 80026b2:	3708      	adds	r7, #8
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bd80      	pop	{r7, pc}

080026b8 <lcd_i2c_print>:


void lcd_i2c_print(char string[]) { //  doing char myArray = "hello" creates an array of characters
 80026b8:	b580      	push	{r7, lr}
 80026ba:	b084      	sub	sp, #16
 80026bc:	af00      	add	r7, sp, #0
 80026be:	6078      	str	r0, [r7, #4]
// char *string is equivalent to string[]

    int length = strlen(string); // We are passing the array to find the length of the string. Remember string[0] will return first  element and so on ...
 80026c0:	6878      	ldr	r0, [r7, #4]
 80026c2:	f7fd fd8d 	bl	80001e0 <strlen>
 80026c6:	4603      	mov	r3, r0
 80026c8:	60bb      	str	r3, [r7, #8]

    for (int i =0; i<length; i++) {
 80026ca:	2300      	movs	r3, #0
 80026cc:	60fb      	str	r3, [r7, #12]
 80026ce:	e009      	b.n	80026e4 <lcd_i2c_print+0x2c>
        lcd_i2c_sendData(string[i]); //
 80026d0:	68fb      	ldr	r3, [r7, #12]
 80026d2:	687a      	ldr	r2, [r7, #4]
 80026d4:	4413      	add	r3, r2
 80026d6:	781b      	ldrb	r3, [r3, #0]
 80026d8:	4618      	mov	r0, r3
 80026da:	f7ff ffb1 	bl	8002640 <lcd_i2c_sendData>
    for (int i =0; i<length; i++) {
 80026de:	68fb      	ldr	r3, [r7, #12]
 80026e0:	3301      	adds	r3, #1
 80026e2:	60fb      	str	r3, [r7, #12]
 80026e4:	68fa      	ldr	r2, [r7, #12]
 80026e6:	68bb      	ldr	r3, [r7, #8]
 80026e8:	429a      	cmp	r2, r3
 80026ea:	dbf1      	blt.n	80026d0 <lcd_i2c_print+0x18>
    }
}
 80026ec:	bf00      	nop
 80026ee:	3710      	adds	r7, #16
 80026f0:	46bd      	mov	sp, r7
 80026f2:	bd80      	pop	{r7, pc}

080026f4 <lcd_i2c_clear>:
    lcd_i2c_sendCmd(0x01);
    delay_mS(5);
    lcd_i2c_sendCmd(0x80);
}

void lcd_i2c_clear() {
 80026f4:	b580      	push	{r7, lr}
 80026f6:	af00      	add	r7, sp, #0
    lcd_i2c_sendCmd(0x01);
 80026f8:	2001      	movs	r0, #1
 80026fa:	f7ff ff65 	bl	80025c8 <lcd_i2c_sendCmd>
    delay_mS(10); // Added delay because some LCD commands would not work
 80026fe:	200a      	movs	r0, #10
 8002700:	f7ff ff3e 	bl	8002580 <delay_mS>
}
 8002704:	bf00      	nop
 8002706:	bd80      	pop	{r7, pc}

08002708 <__libc_init_array>:
 8002708:	b570      	push	{r4, r5, r6, lr}
 800270a:	4e0d      	ldr	r6, [pc, #52]	; (8002740 <__libc_init_array+0x38>)
 800270c:	4c0d      	ldr	r4, [pc, #52]	; (8002744 <__libc_init_array+0x3c>)
 800270e:	1ba4      	subs	r4, r4, r6
 8002710:	10a4      	asrs	r4, r4, #2
 8002712:	2500      	movs	r5, #0
 8002714:	42a5      	cmp	r5, r4
 8002716:	d109      	bne.n	800272c <__libc_init_array+0x24>
 8002718:	4e0b      	ldr	r6, [pc, #44]	; (8002748 <__libc_init_array+0x40>)
 800271a:	4c0c      	ldr	r4, [pc, #48]	; (800274c <__libc_init_array+0x44>)
 800271c:	f002 ff22 	bl	8005564 <_init>
 8002720:	1ba4      	subs	r4, r4, r6
 8002722:	10a4      	asrs	r4, r4, #2
 8002724:	2500      	movs	r5, #0
 8002726:	42a5      	cmp	r5, r4
 8002728:	d105      	bne.n	8002736 <__libc_init_array+0x2e>
 800272a:	bd70      	pop	{r4, r5, r6, pc}
 800272c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002730:	4798      	blx	r3
 8002732:	3501      	adds	r5, #1
 8002734:	e7ee      	b.n	8002714 <__libc_init_array+0xc>
 8002736:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800273a:	4798      	blx	r3
 800273c:	3501      	adds	r5, #1
 800273e:	e7f2      	b.n	8002726 <__libc_init_array+0x1e>
 8002740:	08005808 	.word	0x08005808
 8002744:	08005808 	.word	0x08005808
 8002748:	08005808 	.word	0x08005808
 800274c:	0800580c 	.word	0x0800580c

08002750 <snprintf>:
 8002750:	b40c      	push	{r2, r3}
 8002752:	b530      	push	{r4, r5, lr}
 8002754:	4b17      	ldr	r3, [pc, #92]	; (80027b4 <snprintf+0x64>)
 8002756:	1e0c      	subs	r4, r1, #0
 8002758:	b09d      	sub	sp, #116	; 0x74
 800275a:	681d      	ldr	r5, [r3, #0]
 800275c:	da08      	bge.n	8002770 <snprintf+0x20>
 800275e:	238b      	movs	r3, #139	; 0x8b
 8002760:	602b      	str	r3, [r5, #0]
 8002762:	f04f 30ff 	mov.w	r0, #4294967295
 8002766:	b01d      	add	sp, #116	; 0x74
 8002768:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800276c:	b002      	add	sp, #8
 800276e:	4770      	bx	lr
 8002770:	f44f 7302 	mov.w	r3, #520	; 0x208
 8002774:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002778:	bf14      	ite	ne
 800277a:	f104 33ff 	addne.w	r3, r4, #4294967295
 800277e:	4623      	moveq	r3, r4
 8002780:	9304      	str	r3, [sp, #16]
 8002782:	9307      	str	r3, [sp, #28]
 8002784:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002788:	9002      	str	r0, [sp, #8]
 800278a:	9006      	str	r0, [sp, #24]
 800278c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8002790:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002792:	ab21      	add	r3, sp, #132	; 0x84
 8002794:	a902      	add	r1, sp, #8
 8002796:	4628      	mov	r0, r5
 8002798:	9301      	str	r3, [sp, #4]
 800279a:	f000 f80d 	bl	80027b8 <_svfprintf_r>
 800279e:	1c43      	adds	r3, r0, #1
 80027a0:	bfbc      	itt	lt
 80027a2:	238b      	movlt	r3, #139	; 0x8b
 80027a4:	602b      	strlt	r3, [r5, #0]
 80027a6:	2c00      	cmp	r4, #0
 80027a8:	d0dd      	beq.n	8002766 <snprintf+0x16>
 80027aa:	9b02      	ldr	r3, [sp, #8]
 80027ac:	2200      	movs	r2, #0
 80027ae:	701a      	strb	r2, [r3, #0]
 80027b0:	e7d9      	b.n	8002766 <snprintf+0x16>
 80027b2:	bf00      	nop
 80027b4:	20000080 	.word	0x20000080

080027b8 <_svfprintf_r>:
 80027b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027bc:	b0bd      	sub	sp, #244	; 0xf4
 80027be:	468a      	mov	sl, r1
 80027c0:	4615      	mov	r5, r2
 80027c2:	461f      	mov	r7, r3
 80027c4:	4683      	mov	fp, r0
 80027c6:	f001 fe25 	bl	8004414 <_localeconv_r>
 80027ca:	6803      	ldr	r3, [r0, #0]
 80027cc:	930d      	str	r3, [sp, #52]	; 0x34
 80027ce:	4618      	mov	r0, r3
 80027d0:	f7fd fd06 	bl	80001e0 <strlen>
 80027d4:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80027d8:	9008      	str	r0, [sp, #32]
 80027da:	061b      	lsls	r3, r3, #24
 80027dc:	d518      	bpl.n	8002810 <_svfprintf_r+0x58>
 80027de:	f8da 3010 	ldr.w	r3, [sl, #16]
 80027e2:	b9ab      	cbnz	r3, 8002810 <_svfprintf_r+0x58>
 80027e4:	2140      	movs	r1, #64	; 0x40
 80027e6:	4658      	mov	r0, fp
 80027e8:	f001 fe2a 	bl	8004440 <_malloc_r>
 80027ec:	f8ca 0000 	str.w	r0, [sl]
 80027f0:	f8ca 0010 	str.w	r0, [sl, #16]
 80027f4:	b948      	cbnz	r0, 800280a <_svfprintf_r+0x52>
 80027f6:	230c      	movs	r3, #12
 80027f8:	f8cb 3000 	str.w	r3, [fp]
 80027fc:	f04f 33ff 	mov.w	r3, #4294967295
 8002800:	9309      	str	r3, [sp, #36]	; 0x24
 8002802:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002804:	b03d      	add	sp, #244	; 0xf4
 8002806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800280a:	2340      	movs	r3, #64	; 0x40
 800280c:	f8ca 3014 	str.w	r3, [sl, #20]
 8002810:	ed9f 7b99 	vldr	d7, [pc, #612]	; 8002a78 <_svfprintf_r+0x2c0>
 8002814:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002818:	2300      	movs	r3, #0
 800281a:	ac2c      	add	r4, sp, #176	; 0xb0
 800281c:	941f      	str	r4, [sp, #124]	; 0x7c
 800281e:	9321      	str	r3, [sp, #132]	; 0x84
 8002820:	9320      	str	r3, [sp, #128]	; 0x80
 8002822:	9505      	str	r5, [sp, #20]
 8002824:	9303      	str	r3, [sp, #12]
 8002826:	9311      	str	r3, [sp, #68]	; 0x44
 8002828:	9310      	str	r3, [sp, #64]	; 0x40
 800282a:	9309      	str	r3, [sp, #36]	; 0x24
 800282c:	9d05      	ldr	r5, [sp, #20]
 800282e:	462b      	mov	r3, r5
 8002830:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002834:	b112      	cbz	r2, 800283c <_svfprintf_r+0x84>
 8002836:	2a25      	cmp	r2, #37	; 0x25
 8002838:	f040 8083 	bne.w	8002942 <_svfprintf_r+0x18a>
 800283c:	9b05      	ldr	r3, [sp, #20]
 800283e:	1aee      	subs	r6, r5, r3
 8002840:	d00d      	beq.n	800285e <_svfprintf_r+0xa6>
 8002842:	e884 0048 	stmia.w	r4, {r3, r6}
 8002846:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002848:	4433      	add	r3, r6
 800284a:	9321      	str	r3, [sp, #132]	; 0x84
 800284c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800284e:	3301      	adds	r3, #1
 8002850:	2b07      	cmp	r3, #7
 8002852:	9320      	str	r3, [sp, #128]	; 0x80
 8002854:	dc77      	bgt.n	8002946 <_svfprintf_r+0x18e>
 8002856:	3408      	adds	r4, #8
 8002858:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800285a:	4433      	add	r3, r6
 800285c:	9309      	str	r3, [sp, #36]	; 0x24
 800285e:	782b      	ldrb	r3, [r5, #0]
 8002860:	2b00      	cmp	r3, #0
 8002862:	f000 8729 	beq.w	80036b8 <_svfprintf_r+0xf00>
 8002866:	2300      	movs	r3, #0
 8002868:	1c69      	adds	r1, r5, #1
 800286a:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800286e:	461a      	mov	r2, r3
 8002870:	f04f 39ff 	mov.w	r9, #4294967295
 8002874:	930a      	str	r3, [sp, #40]	; 0x28
 8002876:	461d      	mov	r5, r3
 8002878:	200a      	movs	r0, #10
 800287a:	1c4e      	adds	r6, r1, #1
 800287c:	7809      	ldrb	r1, [r1, #0]
 800287e:	9605      	str	r6, [sp, #20]
 8002880:	9102      	str	r1, [sp, #8]
 8002882:	9902      	ldr	r1, [sp, #8]
 8002884:	3920      	subs	r1, #32
 8002886:	2958      	cmp	r1, #88	; 0x58
 8002888:	f200 8418 	bhi.w	80030bc <_svfprintf_r+0x904>
 800288c:	e8df f011 	tbh	[pc, r1, lsl #1]
 8002890:	041600a6 	.word	0x041600a6
 8002894:	00ab0416 	.word	0x00ab0416
 8002898:	04160416 	.word	0x04160416
 800289c:	04160416 	.word	0x04160416
 80028a0:	04160416 	.word	0x04160416
 80028a4:	006500ae 	.word	0x006500ae
 80028a8:	00b70416 	.word	0x00b70416
 80028ac:	041600ba 	.word	0x041600ba
 80028b0:	00da00d7 	.word	0x00da00d7
 80028b4:	00da00da 	.word	0x00da00da
 80028b8:	00da00da 	.word	0x00da00da
 80028bc:	00da00da 	.word	0x00da00da
 80028c0:	00da00da 	.word	0x00da00da
 80028c4:	04160416 	.word	0x04160416
 80028c8:	04160416 	.word	0x04160416
 80028cc:	04160416 	.word	0x04160416
 80028d0:	04160416 	.word	0x04160416
 80028d4:	04160416 	.word	0x04160416
 80028d8:	012b0115 	.word	0x012b0115
 80028dc:	012b0416 	.word	0x012b0416
 80028e0:	04160416 	.word	0x04160416
 80028e4:	04160416 	.word	0x04160416
 80028e8:	041600ed 	.word	0x041600ed
 80028ec:	03400416 	.word	0x03400416
 80028f0:	04160416 	.word	0x04160416
 80028f4:	04160416 	.word	0x04160416
 80028f8:	03a80416 	.word	0x03a80416
 80028fc:	04160416 	.word	0x04160416
 8002900:	04160086 	.word	0x04160086
 8002904:	04160416 	.word	0x04160416
 8002908:	04160416 	.word	0x04160416
 800290c:	04160416 	.word	0x04160416
 8002910:	04160416 	.word	0x04160416
 8002914:	01070416 	.word	0x01070416
 8002918:	012b006b 	.word	0x012b006b
 800291c:	012b012b 	.word	0x012b012b
 8002920:	006b00f0 	.word	0x006b00f0
 8002924:	04160416 	.word	0x04160416
 8002928:	041600fa 	.word	0x041600fa
 800292c:	03420322 	.word	0x03420322
 8002930:	01010376 	.word	0x01010376
 8002934:	03870416 	.word	0x03870416
 8002938:	03aa0416 	.word	0x03aa0416
 800293c:	04160416 	.word	0x04160416
 8002940:	03c2      	.short	0x03c2
 8002942:	461d      	mov	r5, r3
 8002944:	e773      	b.n	800282e <_svfprintf_r+0x76>
 8002946:	aa1f      	add	r2, sp, #124	; 0x7c
 8002948:	4651      	mov	r1, sl
 800294a:	4658      	mov	r0, fp
 800294c:	f002 fa7e 	bl	8004e4c <__ssprint_r>
 8002950:	2800      	cmp	r0, #0
 8002952:	f040 8692 	bne.w	800367a <_svfprintf_r+0xec2>
 8002956:	ac2c      	add	r4, sp, #176	; 0xb0
 8002958:	e77e      	b.n	8002858 <_svfprintf_r+0xa0>
 800295a:	2301      	movs	r3, #1
 800295c:	222b      	movs	r2, #43	; 0x2b
 800295e:	9905      	ldr	r1, [sp, #20]
 8002960:	e78b      	b.n	800287a <_svfprintf_r+0xc2>
 8002962:	460f      	mov	r7, r1
 8002964:	e7fb      	b.n	800295e <_svfprintf_r+0x1a6>
 8002966:	b10b      	cbz	r3, 800296c <_svfprintf_r+0x1b4>
 8002968:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800296c:	06ae      	lsls	r6, r5, #26
 800296e:	f140 80aa 	bpl.w	8002ac6 <_svfprintf_r+0x30e>
 8002972:	3707      	adds	r7, #7
 8002974:	f027 0707 	bic.w	r7, r7, #7
 8002978:	f107 0308 	add.w	r3, r7, #8
 800297c:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002980:	9304      	str	r3, [sp, #16]
 8002982:	2e00      	cmp	r6, #0
 8002984:	f177 0300 	sbcs.w	r3, r7, #0
 8002988:	da06      	bge.n	8002998 <_svfprintf_r+0x1e0>
 800298a:	4276      	negs	r6, r6
 800298c:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8002990:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8002994:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002998:	2301      	movs	r3, #1
 800299a:	e2ca      	b.n	8002f32 <_svfprintf_r+0x77a>
 800299c:	b10b      	cbz	r3, 80029a2 <_svfprintf_r+0x1ea>
 800299e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80029a2:	4b37      	ldr	r3, [pc, #220]	; (8002a80 <_svfprintf_r+0x2c8>)
 80029a4:	9311      	str	r3, [sp, #68]	; 0x44
 80029a6:	06ab      	lsls	r3, r5, #26
 80029a8:	f140 8339 	bpl.w	800301e <_svfprintf_r+0x866>
 80029ac:	3707      	adds	r7, #7
 80029ae:	f027 0707 	bic.w	r7, r7, #7
 80029b2:	f107 0308 	add.w	r3, r7, #8
 80029b6:	e9d7 6700 	ldrd	r6, r7, [r7]
 80029ba:	9304      	str	r3, [sp, #16]
 80029bc:	07e8      	lsls	r0, r5, #31
 80029be:	d50b      	bpl.n	80029d8 <_svfprintf_r+0x220>
 80029c0:	ea56 0307 	orrs.w	r3, r6, r7
 80029c4:	d008      	beq.n	80029d8 <_svfprintf_r+0x220>
 80029c6:	2330      	movs	r3, #48	; 0x30
 80029c8:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 80029cc:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80029d0:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
 80029d4:	f045 0502 	orr.w	r5, r5, #2
 80029d8:	2302      	movs	r3, #2
 80029da:	e2a7      	b.n	8002f2c <_svfprintf_r+0x774>
 80029dc:	2a00      	cmp	r2, #0
 80029de:	d1be      	bne.n	800295e <_svfprintf_r+0x1a6>
 80029e0:	2301      	movs	r3, #1
 80029e2:	2220      	movs	r2, #32
 80029e4:	e7bb      	b.n	800295e <_svfprintf_r+0x1a6>
 80029e6:	f045 0501 	orr.w	r5, r5, #1
 80029ea:	e7b8      	b.n	800295e <_svfprintf_r+0x1a6>
 80029ec:	683e      	ldr	r6, [r7, #0]
 80029ee:	960a      	str	r6, [sp, #40]	; 0x28
 80029f0:	2e00      	cmp	r6, #0
 80029f2:	f107 0104 	add.w	r1, r7, #4
 80029f6:	dab4      	bge.n	8002962 <_svfprintf_r+0x1aa>
 80029f8:	4276      	negs	r6, r6
 80029fa:	960a      	str	r6, [sp, #40]	; 0x28
 80029fc:	460f      	mov	r7, r1
 80029fe:	f045 0504 	orr.w	r5, r5, #4
 8002a02:	e7ac      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a04:	9905      	ldr	r1, [sp, #20]
 8002a06:	1c4e      	adds	r6, r1, #1
 8002a08:	7809      	ldrb	r1, [r1, #0]
 8002a0a:	9102      	str	r1, [sp, #8]
 8002a0c:	292a      	cmp	r1, #42	; 0x2a
 8002a0e:	d010      	beq.n	8002a32 <_svfprintf_r+0x27a>
 8002a10:	f04f 0900 	mov.w	r9, #0
 8002a14:	9605      	str	r6, [sp, #20]
 8002a16:	9902      	ldr	r1, [sp, #8]
 8002a18:	3930      	subs	r1, #48	; 0x30
 8002a1a:	2909      	cmp	r1, #9
 8002a1c:	f63f af31 	bhi.w	8002882 <_svfprintf_r+0xca>
 8002a20:	fb00 1909 	mla	r9, r0, r9, r1
 8002a24:	9905      	ldr	r1, [sp, #20]
 8002a26:	460e      	mov	r6, r1
 8002a28:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002a2c:	9102      	str	r1, [sp, #8]
 8002a2e:	9605      	str	r6, [sp, #20]
 8002a30:	e7f1      	b.n	8002a16 <_svfprintf_r+0x25e>
 8002a32:	6839      	ldr	r1, [r7, #0]
 8002a34:	9605      	str	r6, [sp, #20]
 8002a36:	ea41 79e1 	orr.w	r9, r1, r1, asr #31
 8002a3a:	3704      	adds	r7, #4
 8002a3c:	e78f      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a3e:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8002a42:	e78c      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a44:	2100      	movs	r1, #0
 8002a46:	910a      	str	r1, [sp, #40]	; 0x28
 8002a48:	9902      	ldr	r1, [sp, #8]
 8002a4a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8002a4c:	3930      	subs	r1, #48	; 0x30
 8002a4e:	fb00 1106 	mla	r1, r0, r6, r1
 8002a52:	910a      	str	r1, [sp, #40]	; 0x28
 8002a54:	9905      	ldr	r1, [sp, #20]
 8002a56:	460e      	mov	r6, r1
 8002a58:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002a5c:	9102      	str	r1, [sp, #8]
 8002a5e:	9902      	ldr	r1, [sp, #8]
 8002a60:	9605      	str	r6, [sp, #20]
 8002a62:	3930      	subs	r1, #48	; 0x30
 8002a64:	2909      	cmp	r1, #9
 8002a66:	d9ef      	bls.n	8002a48 <_svfprintf_r+0x290>
 8002a68:	e70b      	b.n	8002882 <_svfprintf_r+0xca>
 8002a6a:	f045 0508 	orr.w	r5, r5, #8
 8002a6e:	e776      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a70:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8002a74:	e773      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a76:	bf00      	nop
	...
 8002a80:	080055a2 	.word	0x080055a2
 8002a84:	9905      	ldr	r1, [sp, #20]
 8002a86:	7809      	ldrb	r1, [r1, #0]
 8002a88:	296c      	cmp	r1, #108	; 0x6c
 8002a8a:	d105      	bne.n	8002a98 <_svfprintf_r+0x2e0>
 8002a8c:	9905      	ldr	r1, [sp, #20]
 8002a8e:	3101      	adds	r1, #1
 8002a90:	9105      	str	r1, [sp, #20]
 8002a92:	f045 0520 	orr.w	r5, r5, #32
 8002a96:	e762      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a98:	f045 0510 	orr.w	r5, r5, #16
 8002a9c:	e75f      	b.n	800295e <_svfprintf_r+0x1a6>
 8002a9e:	1d3b      	adds	r3, r7, #4
 8002aa0:	9304      	str	r3, [sp, #16]
 8002aa2:	2600      	movs	r6, #0
 8002aa4:	683b      	ldr	r3, [r7, #0]
 8002aa6:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 8002aaa:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8002aae:	f04f 0901 	mov.w	r9, #1
 8002ab2:	4637      	mov	r7, r6
 8002ab4:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8002ab8:	e11b      	b.n	8002cf2 <_svfprintf_r+0x53a>
 8002aba:	b10b      	cbz	r3, 8002ac0 <_svfprintf_r+0x308>
 8002abc:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002ac0:	f045 0510 	orr.w	r5, r5, #16
 8002ac4:	e752      	b.n	800296c <_svfprintf_r+0x1b4>
 8002ac6:	f015 0f10 	tst.w	r5, #16
 8002aca:	f107 0304 	add.w	r3, r7, #4
 8002ace:	d003      	beq.n	8002ad8 <_svfprintf_r+0x320>
 8002ad0:	683e      	ldr	r6, [r7, #0]
 8002ad2:	9304      	str	r3, [sp, #16]
 8002ad4:	17f7      	asrs	r7, r6, #31
 8002ad6:	e754      	b.n	8002982 <_svfprintf_r+0x1ca>
 8002ad8:	683e      	ldr	r6, [r7, #0]
 8002ada:	9304      	str	r3, [sp, #16]
 8002adc:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002ae0:	bf18      	it	ne
 8002ae2:	b236      	sxthne	r6, r6
 8002ae4:	e7f6      	b.n	8002ad4 <_svfprintf_r+0x31c>
 8002ae6:	b10b      	cbz	r3, 8002aec <_svfprintf_r+0x334>
 8002ae8:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002aec:	3707      	adds	r7, #7
 8002aee:	f027 0707 	bic.w	r7, r7, #7
 8002af2:	f107 0308 	add.w	r3, r7, #8
 8002af6:	9304      	str	r3, [sp, #16]
 8002af8:	ed97 7b00 	vldr	d7, [r7]
 8002afc:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002b00:	9b06      	ldr	r3, [sp, #24]
 8002b02:	9312      	str	r3, [sp, #72]	; 0x48
 8002b04:	9b07      	ldr	r3, [sp, #28]
 8002b06:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002b0a:	9313      	str	r3, [sp, #76]	; 0x4c
 8002b0c:	f04f 32ff 	mov.w	r2, #4294967295
 8002b10:	4b4a      	ldr	r3, [pc, #296]	; (8002c3c <_svfprintf_r+0x484>)
 8002b12:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8002b16:	f7fe f80d 	bl	8000b34 <__aeabi_dcmpun>
 8002b1a:	2800      	cmp	r0, #0
 8002b1c:	f040 85d5 	bne.w	80036ca <_svfprintf_r+0xf12>
 8002b20:	f04f 32ff 	mov.w	r2, #4294967295
 8002b24:	4b45      	ldr	r3, [pc, #276]	; (8002c3c <_svfprintf_r+0x484>)
 8002b26:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8002b2a:	f7fd ffe5 	bl	8000af8 <__aeabi_dcmple>
 8002b2e:	2800      	cmp	r0, #0
 8002b30:	f040 85cb 	bne.w	80036ca <_svfprintf_r+0xf12>
 8002b34:	2200      	movs	r2, #0
 8002b36:	2300      	movs	r3, #0
 8002b38:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002b3c:	f7fd ffd2 	bl	8000ae4 <__aeabi_dcmplt>
 8002b40:	b110      	cbz	r0, 8002b48 <_svfprintf_r+0x390>
 8002b42:	232d      	movs	r3, #45	; 0x2d
 8002b44:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002b48:	4b3d      	ldr	r3, [pc, #244]	; (8002c40 <_svfprintf_r+0x488>)
 8002b4a:	4a3e      	ldr	r2, [pc, #248]	; (8002c44 <_svfprintf_r+0x48c>)
 8002b4c:	9902      	ldr	r1, [sp, #8]
 8002b4e:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8002b52:	2947      	cmp	r1, #71	; 0x47
 8002b54:	bfcc      	ite	gt
 8002b56:	4690      	movgt	r8, r2
 8002b58:	4698      	movle	r8, r3
 8002b5a:	f04f 0903 	mov.w	r9, #3
 8002b5e:	2600      	movs	r6, #0
 8002b60:	4637      	mov	r7, r6
 8002b62:	e0c6      	b.n	8002cf2 <_svfprintf_r+0x53a>
 8002b64:	f1b9 3fff 	cmp.w	r9, #4294967295
 8002b68:	d022      	beq.n	8002bb0 <_svfprintf_r+0x3f8>
 8002b6a:	9b02      	ldr	r3, [sp, #8]
 8002b6c:	f023 0320 	bic.w	r3, r3, #32
 8002b70:	2b47      	cmp	r3, #71	; 0x47
 8002b72:	d104      	bne.n	8002b7e <_svfprintf_r+0x3c6>
 8002b74:	f1b9 0f00 	cmp.w	r9, #0
 8002b78:	bf08      	it	eq
 8002b7a:	f04f 0901 	moveq.w	r9, #1
 8002b7e:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 8002b82:	930c      	str	r3, [sp, #48]	; 0x30
 8002b84:	9b07      	ldr	r3, [sp, #28]
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	da15      	bge.n	8002bb6 <_svfprintf_r+0x3fe>
 8002b8a:	9b06      	ldr	r3, [sp, #24]
 8002b8c:	930e      	str	r3, [sp, #56]	; 0x38
 8002b8e:	9b07      	ldr	r3, [sp, #28]
 8002b90:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8002b94:	930f      	str	r3, [sp, #60]	; 0x3c
 8002b96:	232d      	movs	r3, #45	; 0x2d
 8002b98:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b9a:	9b02      	ldr	r3, [sp, #8]
 8002b9c:	f023 0720 	bic.w	r7, r3, #32
 8002ba0:	2f46      	cmp	r7, #70	; 0x46
 8002ba2:	d00e      	beq.n	8002bc2 <_svfprintf_r+0x40a>
 8002ba4:	2f45      	cmp	r7, #69	; 0x45
 8002ba6:	d146      	bne.n	8002c36 <_svfprintf_r+0x47e>
 8002ba8:	f109 0601 	add.w	r6, r9, #1
 8002bac:	2102      	movs	r1, #2
 8002bae:	e00a      	b.n	8002bc6 <_svfprintf_r+0x40e>
 8002bb0:	f04f 0906 	mov.w	r9, #6
 8002bb4:	e7e3      	b.n	8002b7e <_svfprintf_r+0x3c6>
 8002bb6:	ed9d 7b06 	vldr	d7, [sp, #24]
 8002bba:	2300      	movs	r3, #0
 8002bbc:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 8002bc0:	e7ea      	b.n	8002b98 <_svfprintf_r+0x3e0>
 8002bc2:	464e      	mov	r6, r9
 8002bc4:	2103      	movs	r1, #3
 8002bc6:	ab1d      	add	r3, sp, #116	; 0x74
 8002bc8:	9301      	str	r3, [sp, #4]
 8002bca:	ab1a      	add	r3, sp, #104	; 0x68
 8002bcc:	9300      	str	r3, [sp, #0]
 8002bce:	4632      	mov	r2, r6
 8002bd0:	ab19      	add	r3, sp, #100	; 0x64
 8002bd2:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
 8002bd6:	4658      	mov	r0, fp
 8002bd8:	f000 fe4e 	bl	8003878 <_dtoa_r>
 8002bdc:	2f47      	cmp	r7, #71	; 0x47
 8002bde:	4680      	mov	r8, r0
 8002be0:	d102      	bne.n	8002be8 <_svfprintf_r+0x430>
 8002be2:	07e8      	lsls	r0, r5, #31
 8002be4:	f140 857e 	bpl.w	80036e4 <_svfprintf_r+0xf2c>
 8002be8:	eb08 0306 	add.w	r3, r8, r6
 8002bec:	2f46      	cmp	r7, #70	; 0x46
 8002bee:	9303      	str	r3, [sp, #12]
 8002bf0:	d111      	bne.n	8002c16 <_svfprintf_r+0x45e>
 8002bf2:	f898 3000 	ldrb.w	r3, [r8]
 8002bf6:	2b30      	cmp	r3, #48	; 0x30
 8002bf8:	d109      	bne.n	8002c0e <_svfprintf_r+0x456>
 8002bfa:	2200      	movs	r2, #0
 8002bfc:	2300      	movs	r3, #0
 8002bfe:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002c02:	f7fd ff65 	bl	8000ad0 <__aeabi_dcmpeq>
 8002c06:	b910      	cbnz	r0, 8002c0e <_svfprintf_r+0x456>
 8002c08:	f1c6 0601 	rsb	r6, r6, #1
 8002c0c:	9619      	str	r6, [sp, #100]	; 0x64
 8002c0e:	9a03      	ldr	r2, [sp, #12]
 8002c10:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002c12:	441a      	add	r2, r3
 8002c14:	9203      	str	r2, [sp, #12]
 8002c16:	2200      	movs	r2, #0
 8002c18:	2300      	movs	r3, #0
 8002c1a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002c1e:	f7fd ff57 	bl	8000ad0 <__aeabi_dcmpeq>
 8002c22:	b988      	cbnz	r0, 8002c48 <_svfprintf_r+0x490>
 8002c24:	2230      	movs	r2, #48	; 0x30
 8002c26:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002c28:	9903      	ldr	r1, [sp, #12]
 8002c2a:	4299      	cmp	r1, r3
 8002c2c:	d90e      	bls.n	8002c4c <_svfprintf_r+0x494>
 8002c2e:	1c59      	adds	r1, r3, #1
 8002c30:	911d      	str	r1, [sp, #116]	; 0x74
 8002c32:	701a      	strb	r2, [r3, #0]
 8002c34:	e7f7      	b.n	8002c26 <_svfprintf_r+0x46e>
 8002c36:	464e      	mov	r6, r9
 8002c38:	e7b8      	b.n	8002bac <_svfprintf_r+0x3f4>
 8002c3a:	bf00      	nop
 8002c3c:	7fefffff 	.word	0x7fefffff
 8002c40:	08005592 	.word	0x08005592
 8002c44:	08005596 	.word	0x08005596
 8002c48:	9b03      	ldr	r3, [sp, #12]
 8002c4a:	931d      	str	r3, [sp, #116]	; 0x74
 8002c4c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002c4e:	2f47      	cmp	r7, #71	; 0x47
 8002c50:	eba3 0308 	sub.w	r3, r3, r8
 8002c54:	9303      	str	r3, [sp, #12]
 8002c56:	f040 80fa 	bne.w	8002e4e <_svfprintf_r+0x696>
 8002c5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002c5c:	1cd9      	adds	r1, r3, #3
 8002c5e:	db02      	blt.n	8002c66 <_svfprintf_r+0x4ae>
 8002c60:	4599      	cmp	r9, r3
 8002c62:	f280 8120 	bge.w	8002ea6 <_svfprintf_r+0x6ee>
 8002c66:	9b02      	ldr	r3, [sp, #8]
 8002c68:	3b02      	subs	r3, #2
 8002c6a:	9302      	str	r3, [sp, #8]
 8002c6c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002c6e:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8002c72:	f88d 106c 	strb.w	r1, [sp, #108]	; 0x6c
 8002c76:	1e53      	subs	r3, r2, #1
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	9319      	str	r3, [sp, #100]	; 0x64
 8002c7c:	bfb6      	itet	lt
 8002c7e:	f1c2 0301 	rsblt	r3, r2, #1
 8002c82:	222b      	movge	r2, #43	; 0x2b
 8002c84:	222d      	movlt	r2, #45	; 0x2d
 8002c86:	2b09      	cmp	r3, #9
 8002c88:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 8002c8c:	f340 80fb 	ble.w	8002e86 <_svfprintf_r+0x6ce>
 8002c90:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 8002c94:	260a      	movs	r6, #10
 8002c96:	fb93 f0f6 	sdiv	r0, r3, r6
 8002c9a:	fb06 3310 	mls	r3, r6, r0, r3
 8002c9e:	3330      	adds	r3, #48	; 0x30
 8002ca0:	2809      	cmp	r0, #9
 8002ca2:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002ca6:	f102 31ff 	add.w	r1, r2, #4294967295
 8002caa:	4603      	mov	r3, r0
 8002cac:	f300 80e4 	bgt.w	8002e78 <_svfprintf_r+0x6c0>
 8002cb0:	3330      	adds	r3, #48	; 0x30
 8002cb2:	f801 3c01 	strb.w	r3, [r1, #-1]
 8002cb6:	3a02      	subs	r2, #2
 8002cb8:	f10d 036e 	add.w	r3, sp, #110	; 0x6e
 8002cbc:	f10d 007b 	add.w	r0, sp, #123	; 0x7b
 8002cc0:	4282      	cmp	r2, r0
 8002cc2:	4619      	mov	r1, r3
 8002cc4:	f0c0 80da 	bcc.w	8002e7c <_svfprintf_r+0x6c4>
 8002cc8:	9a03      	ldr	r2, [sp, #12]
 8002cca:	ab1b      	add	r3, sp, #108	; 0x6c
 8002ccc:	1acb      	subs	r3, r1, r3
 8002cce:	2a01      	cmp	r2, #1
 8002cd0:	9310      	str	r3, [sp, #64]	; 0x40
 8002cd2:	eb03 0902 	add.w	r9, r3, r2
 8002cd6:	dc02      	bgt.n	8002cde <_svfprintf_r+0x526>
 8002cd8:	f015 0701 	ands.w	r7, r5, #1
 8002cdc:	d002      	beq.n	8002ce4 <_svfprintf_r+0x52c>
 8002cde:	9b08      	ldr	r3, [sp, #32]
 8002ce0:	2700      	movs	r7, #0
 8002ce2:	4499      	add	r9, r3
 8002ce4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002ce6:	b113      	cbz	r3, 8002cee <_svfprintf_r+0x536>
 8002ce8:	232d      	movs	r3, #45	; 0x2d
 8002cea:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002cee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002cf0:	2600      	movs	r6, #0
 8002cf2:	454e      	cmp	r6, r9
 8002cf4:	4633      	mov	r3, r6
 8002cf6:	bfb8      	it	lt
 8002cf8:	464b      	movlt	r3, r9
 8002cfa:	930b      	str	r3, [sp, #44]	; 0x2c
 8002cfc:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8002d00:	b113      	cbz	r3, 8002d08 <_svfprintf_r+0x550>
 8002d02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002d04:	3301      	adds	r3, #1
 8002d06:	930b      	str	r3, [sp, #44]	; 0x2c
 8002d08:	f015 0302 	ands.w	r3, r5, #2
 8002d0c:	9314      	str	r3, [sp, #80]	; 0x50
 8002d0e:	bf1e      	ittt	ne
 8002d10:	9b0b      	ldrne	r3, [sp, #44]	; 0x2c
 8002d12:	3302      	addne	r3, #2
 8002d14:	930b      	strne	r3, [sp, #44]	; 0x2c
 8002d16:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 8002d1a:	9315      	str	r3, [sp, #84]	; 0x54
 8002d1c:	d118      	bne.n	8002d50 <_svfprintf_r+0x598>
 8002d1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002d20:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002d22:	1a9b      	subs	r3, r3, r2
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	930c      	str	r3, [sp, #48]	; 0x30
 8002d28:	dd12      	ble.n	8002d50 <_svfprintf_r+0x598>
 8002d2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002d2c:	2b10      	cmp	r3, #16
 8002d2e:	4ba9      	ldr	r3, [pc, #676]	; (8002fd4 <_svfprintf_r+0x81c>)
 8002d30:	6023      	str	r3, [r4, #0]
 8002d32:	f300 81d5 	bgt.w	80030e0 <_svfprintf_r+0x928>
 8002d36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002d38:	6063      	str	r3, [r4, #4]
 8002d3a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002d3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002d3e:	4413      	add	r3, r2
 8002d40:	9321      	str	r3, [sp, #132]	; 0x84
 8002d42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002d44:	3301      	adds	r3, #1
 8002d46:	2b07      	cmp	r3, #7
 8002d48:	9320      	str	r3, [sp, #128]	; 0x80
 8002d4a:	f300 81e2 	bgt.w	8003112 <_svfprintf_r+0x95a>
 8002d4e:	3408      	adds	r4, #8
 8002d50:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8002d54:	b173      	cbz	r3, 8002d74 <_svfprintf_r+0x5bc>
 8002d56:	f10d 035f 	add.w	r3, sp, #95	; 0x5f
 8002d5a:	6023      	str	r3, [r4, #0]
 8002d5c:	2301      	movs	r3, #1
 8002d5e:	6063      	str	r3, [r4, #4]
 8002d60:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002d62:	3301      	adds	r3, #1
 8002d64:	9321      	str	r3, [sp, #132]	; 0x84
 8002d66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002d68:	3301      	adds	r3, #1
 8002d6a:	2b07      	cmp	r3, #7
 8002d6c:	9320      	str	r3, [sp, #128]	; 0x80
 8002d6e:	f300 81da 	bgt.w	8003126 <_svfprintf_r+0x96e>
 8002d72:	3408      	adds	r4, #8
 8002d74:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002d76:	b16b      	cbz	r3, 8002d94 <_svfprintf_r+0x5dc>
 8002d78:	ab18      	add	r3, sp, #96	; 0x60
 8002d7a:	6023      	str	r3, [r4, #0]
 8002d7c:	2302      	movs	r3, #2
 8002d7e:	6063      	str	r3, [r4, #4]
 8002d80:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002d82:	3302      	adds	r3, #2
 8002d84:	9321      	str	r3, [sp, #132]	; 0x84
 8002d86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002d88:	3301      	adds	r3, #1
 8002d8a:	2b07      	cmp	r3, #7
 8002d8c:	9320      	str	r3, [sp, #128]	; 0x80
 8002d8e:	f300 81d4 	bgt.w	800313a <_svfprintf_r+0x982>
 8002d92:	3408      	adds	r4, #8
 8002d94:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002d96:	2b80      	cmp	r3, #128	; 0x80
 8002d98:	d114      	bne.n	8002dc4 <_svfprintf_r+0x60c>
 8002d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002d9c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002d9e:	1a9b      	subs	r3, r3, r2
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	dd0f      	ble.n	8002dc4 <_svfprintf_r+0x60c>
 8002da4:	4a8c      	ldr	r2, [pc, #560]	; (8002fd8 <_svfprintf_r+0x820>)
 8002da6:	6022      	str	r2, [r4, #0]
 8002da8:	2b10      	cmp	r3, #16
 8002daa:	f300 81d0 	bgt.w	800314e <_svfprintf_r+0x996>
 8002dae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002db0:	6063      	str	r3, [r4, #4]
 8002db2:	4413      	add	r3, r2
 8002db4:	9321      	str	r3, [sp, #132]	; 0x84
 8002db6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002db8:	3301      	adds	r3, #1
 8002dba:	2b07      	cmp	r3, #7
 8002dbc:	9320      	str	r3, [sp, #128]	; 0x80
 8002dbe:	f300 81df 	bgt.w	8003180 <_svfprintf_r+0x9c8>
 8002dc2:	3408      	adds	r4, #8
 8002dc4:	eba6 0609 	sub.w	r6, r6, r9
 8002dc8:	2e00      	cmp	r6, #0
 8002dca:	dd0f      	ble.n	8002dec <_svfprintf_r+0x634>
 8002dcc:	4b82      	ldr	r3, [pc, #520]	; (8002fd8 <_svfprintf_r+0x820>)
 8002dce:	6023      	str	r3, [r4, #0]
 8002dd0:	2e10      	cmp	r6, #16
 8002dd2:	f300 81df 	bgt.w	8003194 <_svfprintf_r+0x9dc>
 8002dd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002dd8:	9821      	ldr	r0, [sp, #132]	; 0x84
 8002dda:	6066      	str	r6, [r4, #4]
 8002ddc:	3301      	adds	r3, #1
 8002dde:	4406      	add	r6, r0
 8002de0:	2b07      	cmp	r3, #7
 8002de2:	9621      	str	r6, [sp, #132]	; 0x84
 8002de4:	9320      	str	r3, [sp, #128]	; 0x80
 8002de6:	f300 81ec 	bgt.w	80031c2 <_svfprintf_r+0xa0a>
 8002dea:	3408      	adds	r4, #8
 8002dec:	05eb      	lsls	r3, r5, #23
 8002dee:	f100 81f2 	bmi.w	80031d6 <_svfprintf_r+0xa1e>
 8002df2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002df4:	e884 0300 	stmia.w	r4, {r8, r9}
 8002df8:	444b      	add	r3, r9
 8002dfa:	9321      	str	r3, [sp, #132]	; 0x84
 8002dfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002dfe:	3301      	adds	r3, #1
 8002e00:	2b07      	cmp	r3, #7
 8002e02:	9320      	str	r3, [sp, #128]	; 0x80
 8002e04:	f340 8419 	ble.w	800363a <_svfprintf_r+0xe82>
 8002e08:	aa1f      	add	r2, sp, #124	; 0x7c
 8002e0a:	4651      	mov	r1, sl
 8002e0c:	4658      	mov	r0, fp
 8002e0e:	f002 f81d 	bl	8004e4c <__ssprint_r>
 8002e12:	2800      	cmp	r0, #0
 8002e14:	f040 8431 	bne.w	800367a <_svfprintf_r+0xec2>
 8002e18:	ac2c      	add	r4, sp, #176	; 0xb0
 8002e1a:	076b      	lsls	r3, r5, #29
 8002e1c:	f100 8410 	bmi.w	8003640 <_svfprintf_r+0xe88>
 8002e20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002e24:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002e26:	428a      	cmp	r2, r1
 8002e28:	bfac      	ite	ge
 8002e2a:	189b      	addge	r3, r3, r2
 8002e2c:	185b      	addlt	r3, r3, r1
 8002e2e:	9309      	str	r3, [sp, #36]	; 0x24
 8002e30:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002e32:	b13b      	cbz	r3, 8002e44 <_svfprintf_r+0x68c>
 8002e34:	aa1f      	add	r2, sp, #124	; 0x7c
 8002e36:	4651      	mov	r1, sl
 8002e38:	4658      	mov	r0, fp
 8002e3a:	f002 f807 	bl	8004e4c <__ssprint_r>
 8002e3e:	2800      	cmp	r0, #0
 8002e40:	f040 841b 	bne.w	800367a <_svfprintf_r+0xec2>
 8002e44:	2300      	movs	r3, #0
 8002e46:	9320      	str	r3, [sp, #128]	; 0x80
 8002e48:	9f04      	ldr	r7, [sp, #16]
 8002e4a:	ac2c      	add	r4, sp, #176	; 0xb0
 8002e4c:	e4ee      	b.n	800282c <_svfprintf_r+0x74>
 8002e4e:	9b02      	ldr	r3, [sp, #8]
 8002e50:	2b65      	cmp	r3, #101	; 0x65
 8002e52:	f77f af0b 	ble.w	8002c6c <_svfprintf_r+0x4b4>
 8002e56:	9b02      	ldr	r3, [sp, #8]
 8002e58:	2b66      	cmp	r3, #102	; 0x66
 8002e5a:	d124      	bne.n	8002ea6 <_svfprintf_r+0x6ee>
 8002e5c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	dd19      	ble.n	8002e96 <_svfprintf_r+0x6de>
 8002e62:	f1b9 0f00 	cmp.w	r9, #0
 8002e66:	d101      	bne.n	8002e6c <_svfprintf_r+0x6b4>
 8002e68:	07ea      	lsls	r2, r5, #31
 8002e6a:	d502      	bpl.n	8002e72 <_svfprintf_r+0x6ba>
 8002e6c:	9a08      	ldr	r2, [sp, #32]
 8002e6e:	4413      	add	r3, r2
 8002e70:	444b      	add	r3, r9
 8002e72:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8002e74:	4699      	mov	r9, r3
 8002e76:	e735      	b.n	8002ce4 <_svfprintf_r+0x52c>
 8002e78:	460a      	mov	r2, r1
 8002e7a:	e70c      	b.n	8002c96 <_svfprintf_r+0x4de>
 8002e7c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002e80:	f803 1b01 	strb.w	r1, [r3], #1
 8002e84:	e71c      	b.n	8002cc0 <_svfprintf_r+0x508>
 8002e86:	2230      	movs	r2, #48	; 0x30
 8002e88:	4413      	add	r3, r2
 8002e8a:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
 8002e8e:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8002e92:	a91c      	add	r1, sp, #112	; 0x70
 8002e94:	e718      	b.n	8002cc8 <_svfprintf_r+0x510>
 8002e96:	f1b9 0f00 	cmp.w	r9, #0
 8002e9a:	d101      	bne.n	8002ea0 <_svfprintf_r+0x6e8>
 8002e9c:	07eb      	lsls	r3, r5, #31
 8002e9e:	d515      	bpl.n	8002ecc <_svfprintf_r+0x714>
 8002ea0:	9b08      	ldr	r3, [sp, #32]
 8002ea2:	3301      	adds	r3, #1
 8002ea4:	e7e4      	b.n	8002e70 <_svfprintf_r+0x6b8>
 8002ea6:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002ea8:	9b03      	ldr	r3, [sp, #12]
 8002eaa:	429a      	cmp	r2, r3
 8002eac:	db06      	blt.n	8002ebc <_svfprintf_r+0x704>
 8002eae:	07ef      	lsls	r7, r5, #31
 8002eb0:	d50e      	bpl.n	8002ed0 <_svfprintf_r+0x718>
 8002eb2:	9b08      	ldr	r3, [sp, #32]
 8002eb4:	4413      	add	r3, r2
 8002eb6:	2267      	movs	r2, #103	; 0x67
 8002eb8:	9202      	str	r2, [sp, #8]
 8002eba:	e7da      	b.n	8002e72 <_svfprintf_r+0x6ba>
 8002ebc:	9b03      	ldr	r3, [sp, #12]
 8002ebe:	9908      	ldr	r1, [sp, #32]
 8002ec0:	2a00      	cmp	r2, #0
 8002ec2:	440b      	add	r3, r1
 8002ec4:	dcf7      	bgt.n	8002eb6 <_svfprintf_r+0x6fe>
 8002ec6:	f1c2 0201 	rsb	r2, r2, #1
 8002eca:	e7f3      	b.n	8002eb4 <_svfprintf_r+0x6fc>
 8002ecc:	2301      	movs	r3, #1
 8002ece:	e7d0      	b.n	8002e72 <_svfprintf_r+0x6ba>
 8002ed0:	4613      	mov	r3, r2
 8002ed2:	e7f0      	b.n	8002eb6 <_svfprintf_r+0x6fe>
 8002ed4:	b10b      	cbz	r3, 8002eda <_svfprintf_r+0x722>
 8002ed6:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002eda:	f015 0f20 	tst.w	r5, #32
 8002ede:	f107 0304 	add.w	r3, r7, #4
 8002ee2:	d008      	beq.n	8002ef6 <_svfprintf_r+0x73e>
 8002ee4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002ee6:	683a      	ldr	r2, [r7, #0]
 8002ee8:	17ce      	asrs	r6, r1, #31
 8002eea:	4608      	mov	r0, r1
 8002eec:	4631      	mov	r1, r6
 8002eee:	e9c2 0100 	strd	r0, r1, [r2]
 8002ef2:	461f      	mov	r7, r3
 8002ef4:	e49a      	b.n	800282c <_svfprintf_r+0x74>
 8002ef6:	06ee      	lsls	r6, r5, #27
 8002ef8:	d503      	bpl.n	8002f02 <_svfprintf_r+0x74a>
 8002efa:	683a      	ldr	r2, [r7, #0]
 8002efc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002efe:	6011      	str	r1, [r2, #0]
 8002f00:	e7f7      	b.n	8002ef2 <_svfprintf_r+0x73a>
 8002f02:	0668      	lsls	r0, r5, #25
 8002f04:	d5f9      	bpl.n	8002efa <_svfprintf_r+0x742>
 8002f06:	683a      	ldr	r2, [r7, #0]
 8002f08:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8002f0c:	8011      	strh	r1, [r2, #0]
 8002f0e:	e7f0      	b.n	8002ef2 <_svfprintf_r+0x73a>
 8002f10:	f045 0510 	orr.w	r5, r5, #16
 8002f14:	f015 0320 	ands.w	r3, r5, #32
 8002f18:	d022      	beq.n	8002f60 <_svfprintf_r+0x7a8>
 8002f1a:	3707      	adds	r7, #7
 8002f1c:	f027 0707 	bic.w	r7, r7, #7
 8002f20:	f107 0308 	add.w	r3, r7, #8
 8002f24:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002f28:	9304      	str	r3, [sp, #16]
 8002f2a:	2300      	movs	r3, #0
 8002f2c:	2200      	movs	r2, #0
 8002f2e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002f32:	f1b9 3fff 	cmp.w	r9, #4294967295
 8002f36:	f000 83db 	beq.w	80036f0 <_svfprintf_r+0xf38>
 8002f3a:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 8002f3e:	920b      	str	r2, [sp, #44]	; 0x2c
 8002f40:	ea56 0207 	orrs.w	r2, r6, r7
 8002f44:	f040 83d9 	bne.w	80036fa <_svfprintf_r+0xf42>
 8002f48:	f1b9 0f00 	cmp.w	r9, #0
 8002f4c:	f000 80aa 	beq.w	80030a4 <_svfprintf_r+0x8ec>
 8002f50:	2b01      	cmp	r3, #1
 8002f52:	d076      	beq.n	8003042 <_svfprintf_r+0x88a>
 8002f54:	2b02      	cmp	r3, #2
 8002f56:	f000 8091 	beq.w	800307c <_svfprintf_r+0x8c4>
 8002f5a:	2600      	movs	r6, #0
 8002f5c:	2700      	movs	r7, #0
 8002f5e:	e3d2      	b.n	8003706 <_svfprintf_r+0xf4e>
 8002f60:	1d3a      	adds	r2, r7, #4
 8002f62:	f015 0110 	ands.w	r1, r5, #16
 8002f66:	9204      	str	r2, [sp, #16]
 8002f68:	d002      	beq.n	8002f70 <_svfprintf_r+0x7b8>
 8002f6a:	683e      	ldr	r6, [r7, #0]
 8002f6c:	2700      	movs	r7, #0
 8002f6e:	e7dd      	b.n	8002f2c <_svfprintf_r+0x774>
 8002f70:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 8002f74:	d0f9      	beq.n	8002f6a <_svfprintf_r+0x7b2>
 8002f76:	883e      	ldrh	r6, [r7, #0]
 8002f78:	2700      	movs	r7, #0
 8002f7a:	e7d6      	b.n	8002f2a <_svfprintf_r+0x772>
 8002f7c:	1d3b      	adds	r3, r7, #4
 8002f7e:	9304      	str	r3, [sp, #16]
 8002f80:	2330      	movs	r3, #48	; 0x30
 8002f82:	2278      	movs	r2, #120	; 0x78
 8002f84:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8002f88:	4b14      	ldr	r3, [pc, #80]	; (8002fdc <_svfprintf_r+0x824>)
 8002f8a:	683e      	ldr	r6, [r7, #0]
 8002f8c:	9311      	str	r3, [sp, #68]	; 0x44
 8002f8e:	2700      	movs	r7, #0
 8002f90:	f045 0502 	orr.w	r5, r5, #2
 8002f94:	f88d 2061 	strb.w	r2, [sp, #97]	; 0x61
 8002f98:	2302      	movs	r3, #2
 8002f9a:	9202      	str	r2, [sp, #8]
 8002f9c:	e7c6      	b.n	8002f2c <_svfprintf_r+0x774>
 8002f9e:	1d3b      	adds	r3, r7, #4
 8002fa0:	2600      	movs	r6, #0
 8002fa2:	f1b9 3fff 	cmp.w	r9, #4294967295
 8002fa6:	9304      	str	r3, [sp, #16]
 8002fa8:	f8d7 8000 	ldr.w	r8, [r7]
 8002fac:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8002fb0:	d00a      	beq.n	8002fc8 <_svfprintf_r+0x810>
 8002fb2:	464a      	mov	r2, r9
 8002fb4:	4631      	mov	r1, r6
 8002fb6:	4640      	mov	r0, r8
 8002fb8:	f7fd f91a 	bl	80001f0 <memchr>
 8002fbc:	2800      	cmp	r0, #0
 8002fbe:	f000 808d 	beq.w	80030dc <_svfprintf_r+0x924>
 8002fc2:	eba0 0908 	sub.w	r9, r0, r8
 8002fc6:	e5cb      	b.n	8002b60 <_svfprintf_r+0x3a8>
 8002fc8:	4640      	mov	r0, r8
 8002fca:	f7fd f909 	bl	80001e0 <strlen>
 8002fce:	4681      	mov	r9, r0
 8002fd0:	e5c6      	b.n	8002b60 <_svfprintf_r+0x3a8>
 8002fd2:	bf00      	nop
 8002fd4:	080055c6 	.word	0x080055c6
 8002fd8:	080055d6 	.word	0x080055d6
 8002fdc:	080055b3 	.word	0x080055b3
 8002fe0:	f045 0510 	orr.w	r5, r5, #16
 8002fe4:	06a9      	lsls	r1, r5, #26
 8002fe6:	d509      	bpl.n	8002ffc <_svfprintf_r+0x844>
 8002fe8:	3707      	adds	r7, #7
 8002fea:	f027 0707 	bic.w	r7, r7, #7
 8002fee:	f107 0308 	add.w	r3, r7, #8
 8002ff2:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002ff6:	9304      	str	r3, [sp, #16]
 8002ff8:	2301      	movs	r3, #1
 8002ffa:	e797      	b.n	8002f2c <_svfprintf_r+0x774>
 8002ffc:	1d3b      	adds	r3, r7, #4
 8002ffe:	f015 0f10 	tst.w	r5, #16
 8003002:	9304      	str	r3, [sp, #16]
 8003004:	d001      	beq.n	800300a <_svfprintf_r+0x852>
 8003006:	683e      	ldr	r6, [r7, #0]
 8003008:	e002      	b.n	8003010 <_svfprintf_r+0x858>
 800300a:	066a      	lsls	r2, r5, #25
 800300c:	d5fb      	bpl.n	8003006 <_svfprintf_r+0x84e>
 800300e:	883e      	ldrh	r6, [r7, #0]
 8003010:	2700      	movs	r7, #0
 8003012:	e7f1      	b.n	8002ff8 <_svfprintf_r+0x840>
 8003014:	b10b      	cbz	r3, 800301a <_svfprintf_r+0x862>
 8003016:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800301a:	4ba3      	ldr	r3, [pc, #652]	; (80032a8 <_svfprintf_r+0xaf0>)
 800301c:	e4c2      	b.n	80029a4 <_svfprintf_r+0x1ec>
 800301e:	1d3b      	adds	r3, r7, #4
 8003020:	f015 0f10 	tst.w	r5, #16
 8003024:	9304      	str	r3, [sp, #16]
 8003026:	d001      	beq.n	800302c <_svfprintf_r+0x874>
 8003028:	683e      	ldr	r6, [r7, #0]
 800302a:	e002      	b.n	8003032 <_svfprintf_r+0x87a>
 800302c:	066e      	lsls	r6, r5, #25
 800302e:	d5fb      	bpl.n	8003028 <_svfprintf_r+0x870>
 8003030:	883e      	ldrh	r6, [r7, #0]
 8003032:	2700      	movs	r7, #0
 8003034:	e4c2      	b.n	80029bc <_svfprintf_r+0x204>
 8003036:	4643      	mov	r3, r8
 8003038:	e366      	b.n	8003708 <_svfprintf_r+0xf50>
 800303a:	2f00      	cmp	r7, #0
 800303c:	bf08      	it	eq
 800303e:	2e0a      	cmpeq	r6, #10
 8003040:	d205      	bcs.n	800304e <_svfprintf_r+0x896>
 8003042:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 8003046:	3630      	adds	r6, #48	; 0x30
 8003048:	f808 6d41 	strb.w	r6, [r8, #-65]!
 800304c:	e377      	b.n	800373e <_svfprintf_r+0xf86>
 800304e:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 8003052:	4630      	mov	r0, r6
 8003054:	4639      	mov	r1, r7
 8003056:	220a      	movs	r2, #10
 8003058:	2300      	movs	r3, #0
 800305a:	f7fd fda9 	bl	8000bb0 <__aeabi_uldivmod>
 800305e:	3230      	adds	r2, #48	; 0x30
 8003060:	f808 2d01 	strb.w	r2, [r8, #-1]!
 8003064:	2300      	movs	r3, #0
 8003066:	4630      	mov	r0, r6
 8003068:	4639      	mov	r1, r7
 800306a:	220a      	movs	r2, #10
 800306c:	f7fd fda0 	bl	8000bb0 <__aeabi_uldivmod>
 8003070:	4606      	mov	r6, r0
 8003072:	460f      	mov	r7, r1
 8003074:	ea56 0307 	orrs.w	r3, r6, r7
 8003078:	d1eb      	bne.n	8003052 <_svfprintf_r+0x89a>
 800307a:	e360      	b.n	800373e <_svfprintf_r+0xf86>
 800307c:	2600      	movs	r6, #0
 800307e:	2700      	movs	r7, #0
 8003080:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 8003084:	f006 030f 	and.w	r3, r6, #15
 8003088:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800308a:	5cd3      	ldrb	r3, [r2, r3]
 800308c:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8003090:	0933      	lsrs	r3, r6, #4
 8003092:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8003096:	093a      	lsrs	r2, r7, #4
 8003098:	461e      	mov	r6, r3
 800309a:	4617      	mov	r7, r2
 800309c:	ea56 0307 	orrs.w	r3, r6, r7
 80030a0:	d1f0      	bne.n	8003084 <_svfprintf_r+0x8cc>
 80030a2:	e34c      	b.n	800373e <_svfprintf_r+0xf86>
 80030a4:	b93b      	cbnz	r3, 80030b6 <_svfprintf_r+0x8fe>
 80030a6:	07ea      	lsls	r2, r5, #31
 80030a8:	d505      	bpl.n	80030b6 <_svfprintf_r+0x8fe>
 80030aa:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 80030ae:	2330      	movs	r3, #48	; 0x30
 80030b0:	f808 3d41 	strb.w	r3, [r8, #-65]!
 80030b4:	e343      	b.n	800373e <_svfprintf_r+0xf86>
 80030b6:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 80030ba:	e340      	b.n	800373e <_svfprintf_r+0xf86>
 80030bc:	b10b      	cbz	r3, 80030c2 <_svfprintf_r+0x90a>
 80030be:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80030c2:	9b02      	ldr	r3, [sp, #8]
 80030c4:	2b00      	cmp	r3, #0
 80030c6:	f000 82f7 	beq.w	80036b8 <_svfprintf_r+0xf00>
 80030ca:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80030ce:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 80030d2:	2600      	movs	r6, #0
 80030d4:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 80030d8:	9704      	str	r7, [sp, #16]
 80030da:	e4e8      	b.n	8002aae <_svfprintf_r+0x2f6>
 80030dc:	4606      	mov	r6, r0
 80030de:	e53f      	b.n	8002b60 <_svfprintf_r+0x3a8>
 80030e0:	2310      	movs	r3, #16
 80030e2:	6063      	str	r3, [r4, #4]
 80030e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030e6:	3310      	adds	r3, #16
 80030e8:	9321      	str	r3, [sp, #132]	; 0x84
 80030ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80030ec:	3301      	adds	r3, #1
 80030ee:	2b07      	cmp	r3, #7
 80030f0:	9320      	str	r3, [sp, #128]	; 0x80
 80030f2:	dc04      	bgt.n	80030fe <_svfprintf_r+0x946>
 80030f4:	3408      	adds	r4, #8
 80030f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80030f8:	3b10      	subs	r3, #16
 80030fa:	930c      	str	r3, [sp, #48]	; 0x30
 80030fc:	e615      	b.n	8002d2a <_svfprintf_r+0x572>
 80030fe:	aa1f      	add	r2, sp, #124	; 0x7c
 8003100:	4651      	mov	r1, sl
 8003102:	4658      	mov	r0, fp
 8003104:	f001 fea2 	bl	8004e4c <__ssprint_r>
 8003108:	2800      	cmp	r0, #0
 800310a:	f040 82b6 	bne.w	800367a <_svfprintf_r+0xec2>
 800310e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003110:	e7f1      	b.n	80030f6 <_svfprintf_r+0x93e>
 8003112:	aa1f      	add	r2, sp, #124	; 0x7c
 8003114:	4651      	mov	r1, sl
 8003116:	4658      	mov	r0, fp
 8003118:	f001 fe98 	bl	8004e4c <__ssprint_r>
 800311c:	2800      	cmp	r0, #0
 800311e:	f040 82ac 	bne.w	800367a <_svfprintf_r+0xec2>
 8003122:	ac2c      	add	r4, sp, #176	; 0xb0
 8003124:	e614      	b.n	8002d50 <_svfprintf_r+0x598>
 8003126:	aa1f      	add	r2, sp, #124	; 0x7c
 8003128:	4651      	mov	r1, sl
 800312a:	4658      	mov	r0, fp
 800312c:	f001 fe8e 	bl	8004e4c <__ssprint_r>
 8003130:	2800      	cmp	r0, #0
 8003132:	f040 82a2 	bne.w	800367a <_svfprintf_r+0xec2>
 8003136:	ac2c      	add	r4, sp, #176	; 0xb0
 8003138:	e61c      	b.n	8002d74 <_svfprintf_r+0x5bc>
 800313a:	aa1f      	add	r2, sp, #124	; 0x7c
 800313c:	4651      	mov	r1, sl
 800313e:	4658      	mov	r0, fp
 8003140:	f001 fe84 	bl	8004e4c <__ssprint_r>
 8003144:	2800      	cmp	r0, #0
 8003146:	f040 8298 	bne.w	800367a <_svfprintf_r+0xec2>
 800314a:	ac2c      	add	r4, sp, #176	; 0xb0
 800314c:	e622      	b.n	8002d94 <_svfprintf_r+0x5dc>
 800314e:	2210      	movs	r2, #16
 8003150:	6062      	str	r2, [r4, #4]
 8003152:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003154:	3210      	adds	r2, #16
 8003156:	9221      	str	r2, [sp, #132]	; 0x84
 8003158:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800315a:	3201      	adds	r2, #1
 800315c:	2a07      	cmp	r2, #7
 800315e:	9220      	str	r2, [sp, #128]	; 0x80
 8003160:	dc02      	bgt.n	8003168 <_svfprintf_r+0x9b0>
 8003162:	3408      	adds	r4, #8
 8003164:	3b10      	subs	r3, #16
 8003166:	e61d      	b.n	8002da4 <_svfprintf_r+0x5ec>
 8003168:	aa1f      	add	r2, sp, #124	; 0x7c
 800316a:	4651      	mov	r1, sl
 800316c:	4658      	mov	r0, fp
 800316e:	930c      	str	r3, [sp, #48]	; 0x30
 8003170:	f001 fe6c 	bl	8004e4c <__ssprint_r>
 8003174:	2800      	cmp	r0, #0
 8003176:	f040 8280 	bne.w	800367a <_svfprintf_r+0xec2>
 800317a:	ac2c      	add	r4, sp, #176	; 0xb0
 800317c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800317e:	e7f1      	b.n	8003164 <_svfprintf_r+0x9ac>
 8003180:	aa1f      	add	r2, sp, #124	; 0x7c
 8003182:	4651      	mov	r1, sl
 8003184:	4658      	mov	r0, fp
 8003186:	f001 fe61 	bl	8004e4c <__ssprint_r>
 800318a:	2800      	cmp	r0, #0
 800318c:	f040 8275 	bne.w	800367a <_svfprintf_r+0xec2>
 8003190:	ac2c      	add	r4, sp, #176	; 0xb0
 8003192:	e617      	b.n	8002dc4 <_svfprintf_r+0x60c>
 8003194:	2310      	movs	r3, #16
 8003196:	6063      	str	r3, [r4, #4]
 8003198:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800319a:	3310      	adds	r3, #16
 800319c:	9321      	str	r3, [sp, #132]	; 0x84
 800319e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80031a0:	3301      	adds	r3, #1
 80031a2:	2b07      	cmp	r3, #7
 80031a4:	9320      	str	r3, [sp, #128]	; 0x80
 80031a6:	dc02      	bgt.n	80031ae <_svfprintf_r+0x9f6>
 80031a8:	3408      	adds	r4, #8
 80031aa:	3e10      	subs	r6, #16
 80031ac:	e60e      	b.n	8002dcc <_svfprintf_r+0x614>
 80031ae:	aa1f      	add	r2, sp, #124	; 0x7c
 80031b0:	4651      	mov	r1, sl
 80031b2:	4658      	mov	r0, fp
 80031b4:	f001 fe4a 	bl	8004e4c <__ssprint_r>
 80031b8:	2800      	cmp	r0, #0
 80031ba:	f040 825e 	bne.w	800367a <_svfprintf_r+0xec2>
 80031be:	ac2c      	add	r4, sp, #176	; 0xb0
 80031c0:	e7f3      	b.n	80031aa <_svfprintf_r+0x9f2>
 80031c2:	aa1f      	add	r2, sp, #124	; 0x7c
 80031c4:	4651      	mov	r1, sl
 80031c6:	4658      	mov	r0, fp
 80031c8:	f001 fe40 	bl	8004e4c <__ssprint_r>
 80031cc:	2800      	cmp	r0, #0
 80031ce:	f040 8254 	bne.w	800367a <_svfprintf_r+0xec2>
 80031d2:	ac2c      	add	r4, sp, #176	; 0xb0
 80031d4:	e60a      	b.n	8002dec <_svfprintf_r+0x634>
 80031d6:	9b02      	ldr	r3, [sp, #8]
 80031d8:	2b65      	cmp	r3, #101	; 0x65
 80031da:	f340 81a9 	ble.w	8003530 <_svfprintf_r+0xd78>
 80031de:	2200      	movs	r2, #0
 80031e0:	2300      	movs	r3, #0
 80031e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80031e6:	f7fd fc73 	bl	8000ad0 <__aeabi_dcmpeq>
 80031ea:	2800      	cmp	r0, #0
 80031ec:	d062      	beq.n	80032b4 <_svfprintf_r+0xafc>
 80031ee:	4b2f      	ldr	r3, [pc, #188]	; (80032ac <_svfprintf_r+0xaf4>)
 80031f0:	6023      	str	r3, [r4, #0]
 80031f2:	2301      	movs	r3, #1
 80031f4:	6063      	str	r3, [r4, #4]
 80031f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80031f8:	3301      	adds	r3, #1
 80031fa:	9321      	str	r3, [sp, #132]	; 0x84
 80031fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80031fe:	3301      	adds	r3, #1
 8003200:	2b07      	cmp	r3, #7
 8003202:	9320      	str	r3, [sp, #128]	; 0x80
 8003204:	dc25      	bgt.n	8003252 <_svfprintf_r+0xa9a>
 8003206:	3408      	adds	r4, #8
 8003208:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800320a:	9a03      	ldr	r2, [sp, #12]
 800320c:	4293      	cmp	r3, r2
 800320e:	db02      	blt.n	8003216 <_svfprintf_r+0xa5e>
 8003210:	07ee      	lsls	r6, r5, #31
 8003212:	f57f ae02 	bpl.w	8002e1a <_svfprintf_r+0x662>
 8003216:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003218:	6023      	str	r3, [r4, #0]
 800321a:	9b08      	ldr	r3, [sp, #32]
 800321c:	6063      	str	r3, [r4, #4]
 800321e:	9a08      	ldr	r2, [sp, #32]
 8003220:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003222:	4413      	add	r3, r2
 8003224:	9321      	str	r3, [sp, #132]	; 0x84
 8003226:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003228:	3301      	adds	r3, #1
 800322a:	2b07      	cmp	r3, #7
 800322c:	9320      	str	r3, [sp, #128]	; 0x80
 800322e:	dc1a      	bgt.n	8003266 <_svfprintf_r+0xaae>
 8003230:	3408      	adds	r4, #8
 8003232:	9b03      	ldr	r3, [sp, #12]
 8003234:	1e5e      	subs	r6, r3, #1
 8003236:	2e00      	cmp	r6, #0
 8003238:	f77f adef 	ble.w	8002e1a <_svfprintf_r+0x662>
 800323c:	4f1c      	ldr	r7, [pc, #112]	; (80032b0 <_svfprintf_r+0xaf8>)
 800323e:	f04f 0810 	mov.w	r8, #16
 8003242:	2e10      	cmp	r6, #16
 8003244:	6027      	str	r7, [r4, #0]
 8003246:	dc18      	bgt.n	800327a <_svfprintf_r+0xac2>
 8003248:	6066      	str	r6, [r4, #4]
 800324a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800324c:	441e      	add	r6, r3
 800324e:	9621      	str	r6, [sp, #132]	; 0x84
 8003250:	e5d4      	b.n	8002dfc <_svfprintf_r+0x644>
 8003252:	aa1f      	add	r2, sp, #124	; 0x7c
 8003254:	4651      	mov	r1, sl
 8003256:	4658      	mov	r0, fp
 8003258:	f001 fdf8 	bl	8004e4c <__ssprint_r>
 800325c:	2800      	cmp	r0, #0
 800325e:	f040 820c 	bne.w	800367a <_svfprintf_r+0xec2>
 8003262:	ac2c      	add	r4, sp, #176	; 0xb0
 8003264:	e7d0      	b.n	8003208 <_svfprintf_r+0xa50>
 8003266:	aa1f      	add	r2, sp, #124	; 0x7c
 8003268:	4651      	mov	r1, sl
 800326a:	4658      	mov	r0, fp
 800326c:	f001 fdee 	bl	8004e4c <__ssprint_r>
 8003270:	2800      	cmp	r0, #0
 8003272:	f040 8202 	bne.w	800367a <_svfprintf_r+0xec2>
 8003276:	ac2c      	add	r4, sp, #176	; 0xb0
 8003278:	e7db      	b.n	8003232 <_svfprintf_r+0xa7a>
 800327a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800327c:	f8c4 8004 	str.w	r8, [r4, #4]
 8003280:	3310      	adds	r3, #16
 8003282:	9321      	str	r3, [sp, #132]	; 0x84
 8003284:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003286:	3301      	adds	r3, #1
 8003288:	2b07      	cmp	r3, #7
 800328a:	9320      	str	r3, [sp, #128]	; 0x80
 800328c:	dc02      	bgt.n	8003294 <_svfprintf_r+0xadc>
 800328e:	3408      	adds	r4, #8
 8003290:	3e10      	subs	r6, #16
 8003292:	e7d6      	b.n	8003242 <_svfprintf_r+0xa8a>
 8003294:	aa1f      	add	r2, sp, #124	; 0x7c
 8003296:	4651      	mov	r1, sl
 8003298:	4658      	mov	r0, fp
 800329a:	f001 fdd7 	bl	8004e4c <__ssprint_r>
 800329e:	2800      	cmp	r0, #0
 80032a0:	f040 81eb 	bne.w	800367a <_svfprintf_r+0xec2>
 80032a4:	ac2c      	add	r4, sp, #176	; 0xb0
 80032a6:	e7f3      	b.n	8003290 <_svfprintf_r+0xad8>
 80032a8:	080055b3 	.word	0x080055b3
 80032ac:	080055c4 	.word	0x080055c4
 80032b0:	080055d6 	.word	0x080055d6
 80032b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	dc7a      	bgt.n	80033b0 <_svfprintf_r+0xbf8>
 80032ba:	4b9b      	ldr	r3, [pc, #620]	; (8003528 <_svfprintf_r+0xd70>)
 80032bc:	6023      	str	r3, [r4, #0]
 80032be:	2301      	movs	r3, #1
 80032c0:	6063      	str	r3, [r4, #4]
 80032c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80032c4:	3301      	adds	r3, #1
 80032c6:	9321      	str	r3, [sp, #132]	; 0x84
 80032c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80032ca:	3301      	adds	r3, #1
 80032cc:	2b07      	cmp	r3, #7
 80032ce:	9320      	str	r3, [sp, #128]	; 0x80
 80032d0:	dc44      	bgt.n	800335c <_svfprintf_r+0xba4>
 80032d2:	3408      	adds	r4, #8
 80032d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80032d6:	b923      	cbnz	r3, 80032e2 <_svfprintf_r+0xb2a>
 80032d8:	9b03      	ldr	r3, [sp, #12]
 80032da:	b913      	cbnz	r3, 80032e2 <_svfprintf_r+0xb2a>
 80032dc:	07e8      	lsls	r0, r5, #31
 80032de:	f57f ad9c 	bpl.w	8002e1a <_svfprintf_r+0x662>
 80032e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80032e4:	6023      	str	r3, [r4, #0]
 80032e6:	9b08      	ldr	r3, [sp, #32]
 80032e8:	6063      	str	r3, [r4, #4]
 80032ea:	9a08      	ldr	r2, [sp, #32]
 80032ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80032ee:	4413      	add	r3, r2
 80032f0:	9321      	str	r3, [sp, #132]	; 0x84
 80032f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80032f4:	3301      	adds	r3, #1
 80032f6:	2b07      	cmp	r3, #7
 80032f8:	9320      	str	r3, [sp, #128]	; 0x80
 80032fa:	dc39      	bgt.n	8003370 <_svfprintf_r+0xbb8>
 80032fc:	f104 0308 	add.w	r3, r4, #8
 8003300:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8003302:	2e00      	cmp	r6, #0
 8003304:	da19      	bge.n	800333a <_svfprintf_r+0xb82>
 8003306:	4f89      	ldr	r7, [pc, #548]	; (800352c <_svfprintf_r+0xd74>)
 8003308:	4276      	negs	r6, r6
 800330a:	2410      	movs	r4, #16
 800330c:	2e10      	cmp	r6, #16
 800330e:	601f      	str	r7, [r3, #0]
 8003310:	dc38      	bgt.n	8003384 <_svfprintf_r+0xbcc>
 8003312:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003314:	605e      	str	r6, [r3, #4]
 8003316:	4416      	add	r6, r2
 8003318:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800331a:	9621      	str	r6, [sp, #132]	; 0x84
 800331c:	3201      	adds	r2, #1
 800331e:	2a07      	cmp	r2, #7
 8003320:	f103 0308 	add.w	r3, r3, #8
 8003324:	9220      	str	r2, [sp, #128]	; 0x80
 8003326:	dd08      	ble.n	800333a <_svfprintf_r+0xb82>
 8003328:	aa1f      	add	r2, sp, #124	; 0x7c
 800332a:	4651      	mov	r1, sl
 800332c:	4658      	mov	r0, fp
 800332e:	f001 fd8d 	bl	8004e4c <__ssprint_r>
 8003332:	2800      	cmp	r0, #0
 8003334:	f040 81a1 	bne.w	800367a <_svfprintf_r+0xec2>
 8003338:	ab2c      	add	r3, sp, #176	; 0xb0
 800333a:	9a03      	ldr	r2, [sp, #12]
 800333c:	605a      	str	r2, [r3, #4]
 800333e:	9903      	ldr	r1, [sp, #12]
 8003340:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003342:	f8c3 8000 	str.w	r8, [r3]
 8003346:	440a      	add	r2, r1
 8003348:	9221      	str	r2, [sp, #132]	; 0x84
 800334a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800334c:	3201      	adds	r2, #1
 800334e:	2a07      	cmp	r2, #7
 8003350:	9220      	str	r2, [sp, #128]	; 0x80
 8003352:	f73f ad59 	bgt.w	8002e08 <_svfprintf_r+0x650>
 8003356:	f103 0408 	add.w	r4, r3, #8
 800335a:	e55e      	b.n	8002e1a <_svfprintf_r+0x662>
 800335c:	aa1f      	add	r2, sp, #124	; 0x7c
 800335e:	4651      	mov	r1, sl
 8003360:	4658      	mov	r0, fp
 8003362:	f001 fd73 	bl	8004e4c <__ssprint_r>
 8003366:	2800      	cmp	r0, #0
 8003368:	f040 8187 	bne.w	800367a <_svfprintf_r+0xec2>
 800336c:	ac2c      	add	r4, sp, #176	; 0xb0
 800336e:	e7b1      	b.n	80032d4 <_svfprintf_r+0xb1c>
 8003370:	aa1f      	add	r2, sp, #124	; 0x7c
 8003372:	4651      	mov	r1, sl
 8003374:	4658      	mov	r0, fp
 8003376:	f001 fd69 	bl	8004e4c <__ssprint_r>
 800337a:	2800      	cmp	r0, #0
 800337c:	f040 817d 	bne.w	800367a <_svfprintf_r+0xec2>
 8003380:	ab2c      	add	r3, sp, #176	; 0xb0
 8003382:	e7bd      	b.n	8003300 <_svfprintf_r+0xb48>
 8003384:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003386:	605c      	str	r4, [r3, #4]
 8003388:	3210      	adds	r2, #16
 800338a:	9221      	str	r2, [sp, #132]	; 0x84
 800338c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800338e:	3201      	adds	r2, #1
 8003390:	2a07      	cmp	r2, #7
 8003392:	9220      	str	r2, [sp, #128]	; 0x80
 8003394:	dc02      	bgt.n	800339c <_svfprintf_r+0xbe4>
 8003396:	3308      	adds	r3, #8
 8003398:	3e10      	subs	r6, #16
 800339a:	e7b7      	b.n	800330c <_svfprintf_r+0xb54>
 800339c:	aa1f      	add	r2, sp, #124	; 0x7c
 800339e:	4651      	mov	r1, sl
 80033a0:	4658      	mov	r0, fp
 80033a2:	f001 fd53 	bl	8004e4c <__ssprint_r>
 80033a6:	2800      	cmp	r0, #0
 80033a8:	f040 8167 	bne.w	800367a <_svfprintf_r+0xec2>
 80033ac:	ab2c      	add	r3, sp, #176	; 0xb0
 80033ae:	e7f3      	b.n	8003398 <_svfprintf_r+0xbe0>
 80033b0:	9b03      	ldr	r3, [sp, #12]
 80033b2:	42bb      	cmp	r3, r7
 80033b4:	bfa8      	it	ge
 80033b6:	463b      	movge	r3, r7
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	461e      	mov	r6, r3
 80033bc:	dd0b      	ble.n	80033d6 <_svfprintf_r+0xc1e>
 80033be:	6063      	str	r3, [r4, #4]
 80033c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80033c2:	f8c4 8000 	str.w	r8, [r4]
 80033c6:	4433      	add	r3, r6
 80033c8:	9321      	str	r3, [sp, #132]	; 0x84
 80033ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80033cc:	3301      	adds	r3, #1
 80033ce:	2b07      	cmp	r3, #7
 80033d0:	9320      	str	r3, [sp, #128]	; 0x80
 80033d2:	dc5f      	bgt.n	8003494 <_svfprintf_r+0xcdc>
 80033d4:	3408      	adds	r4, #8
 80033d6:	2e00      	cmp	r6, #0
 80033d8:	bfac      	ite	ge
 80033da:	1bbe      	subge	r6, r7, r6
 80033dc:	463e      	movlt	r6, r7
 80033de:	2e00      	cmp	r6, #0
 80033e0:	dd0f      	ble.n	8003402 <_svfprintf_r+0xc4a>
 80033e2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800352c <_svfprintf_r+0xd74>
 80033e6:	f8c4 9000 	str.w	r9, [r4]
 80033ea:	2e10      	cmp	r6, #16
 80033ec:	dc5c      	bgt.n	80034a8 <_svfprintf_r+0xcf0>
 80033ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80033f0:	6066      	str	r6, [r4, #4]
 80033f2:	441e      	add	r6, r3
 80033f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80033f6:	9621      	str	r6, [sp, #132]	; 0x84
 80033f8:	3301      	adds	r3, #1
 80033fa:	2b07      	cmp	r3, #7
 80033fc:	9320      	str	r3, [sp, #128]	; 0x80
 80033fe:	dc6a      	bgt.n	80034d6 <_svfprintf_r+0xd1e>
 8003400:	3408      	adds	r4, #8
 8003402:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003404:	9a03      	ldr	r2, [sp, #12]
 8003406:	4293      	cmp	r3, r2
 8003408:	db01      	blt.n	800340e <_svfprintf_r+0xc56>
 800340a:	07e9      	lsls	r1, r5, #31
 800340c:	d50d      	bpl.n	800342a <_svfprintf_r+0xc72>
 800340e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003410:	6023      	str	r3, [r4, #0]
 8003412:	9b08      	ldr	r3, [sp, #32]
 8003414:	6063      	str	r3, [r4, #4]
 8003416:	9a08      	ldr	r2, [sp, #32]
 8003418:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800341a:	4413      	add	r3, r2
 800341c:	9321      	str	r3, [sp, #132]	; 0x84
 800341e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003420:	3301      	adds	r3, #1
 8003422:	2b07      	cmp	r3, #7
 8003424:	9320      	str	r3, [sp, #128]	; 0x80
 8003426:	dc60      	bgt.n	80034ea <_svfprintf_r+0xd32>
 8003428:	3408      	adds	r4, #8
 800342a:	9b03      	ldr	r3, [sp, #12]
 800342c:	9a03      	ldr	r2, [sp, #12]
 800342e:	1bde      	subs	r6, r3, r7
 8003430:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003432:	1ad3      	subs	r3, r2, r3
 8003434:	429e      	cmp	r6, r3
 8003436:	bfa8      	it	ge
 8003438:	461e      	movge	r6, r3
 800343a:	2e00      	cmp	r6, #0
 800343c:	dd0b      	ble.n	8003456 <_svfprintf_r+0xc9e>
 800343e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003440:	6066      	str	r6, [r4, #4]
 8003442:	4433      	add	r3, r6
 8003444:	9321      	str	r3, [sp, #132]	; 0x84
 8003446:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003448:	3301      	adds	r3, #1
 800344a:	4447      	add	r7, r8
 800344c:	2b07      	cmp	r3, #7
 800344e:	6027      	str	r7, [r4, #0]
 8003450:	9320      	str	r3, [sp, #128]	; 0x80
 8003452:	dc54      	bgt.n	80034fe <_svfprintf_r+0xd46>
 8003454:	3408      	adds	r4, #8
 8003456:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003458:	9a03      	ldr	r2, [sp, #12]
 800345a:	2e00      	cmp	r6, #0
 800345c:	eba2 0303 	sub.w	r3, r2, r3
 8003460:	bfac      	ite	ge
 8003462:	1b9e      	subge	r6, r3, r6
 8003464:	461e      	movlt	r6, r3
 8003466:	2e00      	cmp	r6, #0
 8003468:	f77f acd7 	ble.w	8002e1a <_svfprintf_r+0x662>
 800346c:	4f2f      	ldr	r7, [pc, #188]	; (800352c <_svfprintf_r+0xd74>)
 800346e:	f04f 0810 	mov.w	r8, #16
 8003472:	2e10      	cmp	r6, #16
 8003474:	6027      	str	r7, [r4, #0]
 8003476:	f77f aee7 	ble.w	8003248 <_svfprintf_r+0xa90>
 800347a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800347c:	f8c4 8004 	str.w	r8, [r4, #4]
 8003480:	3310      	adds	r3, #16
 8003482:	9321      	str	r3, [sp, #132]	; 0x84
 8003484:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003486:	3301      	adds	r3, #1
 8003488:	2b07      	cmp	r3, #7
 800348a:	9320      	str	r3, [sp, #128]	; 0x80
 800348c:	dc41      	bgt.n	8003512 <_svfprintf_r+0xd5a>
 800348e:	3408      	adds	r4, #8
 8003490:	3e10      	subs	r6, #16
 8003492:	e7ee      	b.n	8003472 <_svfprintf_r+0xcba>
 8003494:	aa1f      	add	r2, sp, #124	; 0x7c
 8003496:	4651      	mov	r1, sl
 8003498:	4658      	mov	r0, fp
 800349a:	f001 fcd7 	bl	8004e4c <__ssprint_r>
 800349e:	2800      	cmp	r0, #0
 80034a0:	f040 80eb 	bne.w	800367a <_svfprintf_r+0xec2>
 80034a4:	ac2c      	add	r4, sp, #176	; 0xb0
 80034a6:	e796      	b.n	80033d6 <_svfprintf_r+0xc1e>
 80034a8:	2310      	movs	r3, #16
 80034aa:	6063      	str	r3, [r4, #4]
 80034ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80034ae:	3310      	adds	r3, #16
 80034b0:	9321      	str	r3, [sp, #132]	; 0x84
 80034b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80034b4:	3301      	adds	r3, #1
 80034b6:	2b07      	cmp	r3, #7
 80034b8:	9320      	str	r3, [sp, #128]	; 0x80
 80034ba:	dc02      	bgt.n	80034c2 <_svfprintf_r+0xd0a>
 80034bc:	3408      	adds	r4, #8
 80034be:	3e10      	subs	r6, #16
 80034c0:	e791      	b.n	80033e6 <_svfprintf_r+0xc2e>
 80034c2:	aa1f      	add	r2, sp, #124	; 0x7c
 80034c4:	4651      	mov	r1, sl
 80034c6:	4658      	mov	r0, fp
 80034c8:	f001 fcc0 	bl	8004e4c <__ssprint_r>
 80034cc:	2800      	cmp	r0, #0
 80034ce:	f040 80d4 	bne.w	800367a <_svfprintf_r+0xec2>
 80034d2:	ac2c      	add	r4, sp, #176	; 0xb0
 80034d4:	e7f3      	b.n	80034be <_svfprintf_r+0xd06>
 80034d6:	aa1f      	add	r2, sp, #124	; 0x7c
 80034d8:	4651      	mov	r1, sl
 80034da:	4658      	mov	r0, fp
 80034dc:	f001 fcb6 	bl	8004e4c <__ssprint_r>
 80034e0:	2800      	cmp	r0, #0
 80034e2:	f040 80ca 	bne.w	800367a <_svfprintf_r+0xec2>
 80034e6:	ac2c      	add	r4, sp, #176	; 0xb0
 80034e8:	e78b      	b.n	8003402 <_svfprintf_r+0xc4a>
 80034ea:	aa1f      	add	r2, sp, #124	; 0x7c
 80034ec:	4651      	mov	r1, sl
 80034ee:	4658      	mov	r0, fp
 80034f0:	f001 fcac 	bl	8004e4c <__ssprint_r>
 80034f4:	2800      	cmp	r0, #0
 80034f6:	f040 80c0 	bne.w	800367a <_svfprintf_r+0xec2>
 80034fa:	ac2c      	add	r4, sp, #176	; 0xb0
 80034fc:	e795      	b.n	800342a <_svfprintf_r+0xc72>
 80034fe:	aa1f      	add	r2, sp, #124	; 0x7c
 8003500:	4651      	mov	r1, sl
 8003502:	4658      	mov	r0, fp
 8003504:	f001 fca2 	bl	8004e4c <__ssprint_r>
 8003508:	2800      	cmp	r0, #0
 800350a:	f040 80b6 	bne.w	800367a <_svfprintf_r+0xec2>
 800350e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003510:	e7a1      	b.n	8003456 <_svfprintf_r+0xc9e>
 8003512:	aa1f      	add	r2, sp, #124	; 0x7c
 8003514:	4651      	mov	r1, sl
 8003516:	4658      	mov	r0, fp
 8003518:	f001 fc98 	bl	8004e4c <__ssprint_r>
 800351c:	2800      	cmp	r0, #0
 800351e:	f040 80ac 	bne.w	800367a <_svfprintf_r+0xec2>
 8003522:	ac2c      	add	r4, sp, #176	; 0xb0
 8003524:	e7b4      	b.n	8003490 <_svfprintf_r+0xcd8>
 8003526:	bf00      	nop
 8003528:	080055c4 	.word	0x080055c4
 800352c:	080055d6 	.word	0x080055d6
 8003530:	9b03      	ldr	r3, [sp, #12]
 8003532:	2b01      	cmp	r3, #1
 8003534:	dc01      	bgt.n	800353a <_svfprintf_r+0xd82>
 8003536:	07ea      	lsls	r2, r5, #31
 8003538:	d576      	bpl.n	8003628 <_svfprintf_r+0xe70>
 800353a:	2301      	movs	r3, #1
 800353c:	6063      	str	r3, [r4, #4]
 800353e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003540:	f8c4 8000 	str.w	r8, [r4]
 8003544:	3301      	adds	r3, #1
 8003546:	9321      	str	r3, [sp, #132]	; 0x84
 8003548:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800354a:	3301      	adds	r3, #1
 800354c:	2b07      	cmp	r3, #7
 800354e:	9320      	str	r3, [sp, #128]	; 0x80
 8003550:	dc36      	bgt.n	80035c0 <_svfprintf_r+0xe08>
 8003552:	3408      	adds	r4, #8
 8003554:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003556:	6023      	str	r3, [r4, #0]
 8003558:	9b08      	ldr	r3, [sp, #32]
 800355a:	6063      	str	r3, [r4, #4]
 800355c:	9a08      	ldr	r2, [sp, #32]
 800355e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003560:	4413      	add	r3, r2
 8003562:	9321      	str	r3, [sp, #132]	; 0x84
 8003564:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003566:	3301      	adds	r3, #1
 8003568:	2b07      	cmp	r3, #7
 800356a:	9320      	str	r3, [sp, #128]	; 0x80
 800356c:	dc31      	bgt.n	80035d2 <_svfprintf_r+0xe1a>
 800356e:	3408      	adds	r4, #8
 8003570:	2300      	movs	r3, #0
 8003572:	2200      	movs	r2, #0
 8003574:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003578:	f7fd faaa 	bl	8000ad0 <__aeabi_dcmpeq>
 800357c:	9b03      	ldr	r3, [sp, #12]
 800357e:	1e5e      	subs	r6, r3, #1
 8003580:	2800      	cmp	r0, #0
 8003582:	d12f      	bne.n	80035e4 <_svfprintf_r+0xe2c>
 8003584:	f108 0301 	add.w	r3, r8, #1
 8003588:	e884 0048 	stmia.w	r4, {r3, r6}
 800358c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800358e:	9a03      	ldr	r2, [sp, #12]
 8003590:	3b01      	subs	r3, #1
 8003592:	4413      	add	r3, r2
 8003594:	9321      	str	r3, [sp, #132]	; 0x84
 8003596:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003598:	3301      	adds	r3, #1
 800359a:	2b07      	cmp	r3, #7
 800359c:	9320      	str	r3, [sp, #128]	; 0x80
 800359e:	dd4a      	ble.n	8003636 <_svfprintf_r+0xe7e>
 80035a0:	aa1f      	add	r2, sp, #124	; 0x7c
 80035a2:	4651      	mov	r1, sl
 80035a4:	4658      	mov	r0, fp
 80035a6:	f001 fc51 	bl	8004e4c <__ssprint_r>
 80035aa:	2800      	cmp	r0, #0
 80035ac:	d165      	bne.n	800367a <_svfprintf_r+0xec2>
 80035ae:	ac2c      	add	r4, sp, #176	; 0xb0
 80035b0:	ab1b      	add	r3, sp, #108	; 0x6c
 80035b2:	6023      	str	r3, [r4, #0]
 80035b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80035b6:	6063      	str	r3, [r4, #4]
 80035b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80035ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80035bc:	4413      	add	r3, r2
 80035be:	e41c      	b.n	8002dfa <_svfprintf_r+0x642>
 80035c0:	aa1f      	add	r2, sp, #124	; 0x7c
 80035c2:	4651      	mov	r1, sl
 80035c4:	4658      	mov	r0, fp
 80035c6:	f001 fc41 	bl	8004e4c <__ssprint_r>
 80035ca:	2800      	cmp	r0, #0
 80035cc:	d155      	bne.n	800367a <_svfprintf_r+0xec2>
 80035ce:	ac2c      	add	r4, sp, #176	; 0xb0
 80035d0:	e7c0      	b.n	8003554 <_svfprintf_r+0xd9c>
 80035d2:	aa1f      	add	r2, sp, #124	; 0x7c
 80035d4:	4651      	mov	r1, sl
 80035d6:	4658      	mov	r0, fp
 80035d8:	f001 fc38 	bl	8004e4c <__ssprint_r>
 80035dc:	2800      	cmp	r0, #0
 80035de:	d14c      	bne.n	800367a <_svfprintf_r+0xec2>
 80035e0:	ac2c      	add	r4, sp, #176	; 0xb0
 80035e2:	e7c5      	b.n	8003570 <_svfprintf_r+0xdb8>
 80035e4:	2e00      	cmp	r6, #0
 80035e6:	dde3      	ble.n	80035b0 <_svfprintf_r+0xdf8>
 80035e8:	4f59      	ldr	r7, [pc, #356]	; (8003750 <_svfprintf_r+0xf98>)
 80035ea:	f04f 0810 	mov.w	r8, #16
 80035ee:	2e10      	cmp	r6, #16
 80035f0:	6027      	str	r7, [r4, #0]
 80035f2:	dc04      	bgt.n	80035fe <_svfprintf_r+0xe46>
 80035f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80035f6:	6066      	str	r6, [r4, #4]
 80035f8:	441e      	add	r6, r3
 80035fa:	9621      	str	r6, [sp, #132]	; 0x84
 80035fc:	e7cb      	b.n	8003596 <_svfprintf_r+0xdde>
 80035fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003600:	f8c4 8004 	str.w	r8, [r4, #4]
 8003604:	3310      	adds	r3, #16
 8003606:	9321      	str	r3, [sp, #132]	; 0x84
 8003608:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800360a:	3301      	adds	r3, #1
 800360c:	2b07      	cmp	r3, #7
 800360e:	9320      	str	r3, [sp, #128]	; 0x80
 8003610:	dc02      	bgt.n	8003618 <_svfprintf_r+0xe60>
 8003612:	3408      	adds	r4, #8
 8003614:	3e10      	subs	r6, #16
 8003616:	e7ea      	b.n	80035ee <_svfprintf_r+0xe36>
 8003618:	aa1f      	add	r2, sp, #124	; 0x7c
 800361a:	4651      	mov	r1, sl
 800361c:	4658      	mov	r0, fp
 800361e:	f001 fc15 	bl	8004e4c <__ssprint_r>
 8003622:	bb50      	cbnz	r0, 800367a <_svfprintf_r+0xec2>
 8003624:	ac2c      	add	r4, sp, #176	; 0xb0
 8003626:	e7f5      	b.n	8003614 <_svfprintf_r+0xe5c>
 8003628:	2301      	movs	r3, #1
 800362a:	6063      	str	r3, [r4, #4]
 800362c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800362e:	f8c4 8000 	str.w	r8, [r4]
 8003632:	3301      	adds	r3, #1
 8003634:	e7ae      	b.n	8003594 <_svfprintf_r+0xddc>
 8003636:	3408      	adds	r4, #8
 8003638:	e7ba      	b.n	80035b0 <_svfprintf_r+0xdf8>
 800363a:	3408      	adds	r4, #8
 800363c:	f7ff bbed 	b.w	8002e1a <_svfprintf_r+0x662>
 8003640:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003642:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003644:	1a9d      	subs	r5, r3, r2
 8003646:	2d00      	cmp	r5, #0
 8003648:	f77f abea 	ble.w	8002e20 <_svfprintf_r+0x668>
 800364c:	2610      	movs	r6, #16
 800364e:	4b41      	ldr	r3, [pc, #260]	; (8003754 <_svfprintf_r+0xf9c>)
 8003650:	6023      	str	r3, [r4, #0]
 8003652:	2d10      	cmp	r5, #16
 8003654:	dc1b      	bgt.n	800368e <_svfprintf_r+0xed6>
 8003656:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003658:	6065      	str	r5, [r4, #4]
 800365a:	441d      	add	r5, r3
 800365c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800365e:	9521      	str	r5, [sp, #132]	; 0x84
 8003660:	3301      	adds	r3, #1
 8003662:	2b07      	cmp	r3, #7
 8003664:	9320      	str	r3, [sp, #128]	; 0x80
 8003666:	f77f abdb 	ble.w	8002e20 <_svfprintf_r+0x668>
 800366a:	aa1f      	add	r2, sp, #124	; 0x7c
 800366c:	4651      	mov	r1, sl
 800366e:	4658      	mov	r0, fp
 8003670:	f001 fbec 	bl	8004e4c <__ssprint_r>
 8003674:	2800      	cmp	r0, #0
 8003676:	f43f abd3 	beq.w	8002e20 <_svfprintf_r+0x668>
 800367a:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800367e:	f013 0f40 	tst.w	r3, #64	; 0x40
 8003682:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003684:	bf18      	it	ne
 8003686:	f04f 33ff 	movne.w	r3, #4294967295
 800368a:	f7ff b8b9 	b.w	8002800 <_svfprintf_r+0x48>
 800368e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003690:	6066      	str	r6, [r4, #4]
 8003692:	3310      	adds	r3, #16
 8003694:	9321      	str	r3, [sp, #132]	; 0x84
 8003696:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003698:	3301      	adds	r3, #1
 800369a:	2b07      	cmp	r3, #7
 800369c:	9320      	str	r3, [sp, #128]	; 0x80
 800369e:	dc02      	bgt.n	80036a6 <_svfprintf_r+0xeee>
 80036a0:	3408      	adds	r4, #8
 80036a2:	3d10      	subs	r5, #16
 80036a4:	e7d3      	b.n	800364e <_svfprintf_r+0xe96>
 80036a6:	aa1f      	add	r2, sp, #124	; 0x7c
 80036a8:	4651      	mov	r1, sl
 80036aa:	4658      	mov	r0, fp
 80036ac:	f001 fbce 	bl	8004e4c <__ssprint_r>
 80036b0:	2800      	cmp	r0, #0
 80036b2:	d1e2      	bne.n	800367a <_svfprintf_r+0xec2>
 80036b4:	ac2c      	add	r4, sp, #176	; 0xb0
 80036b6:	e7f4      	b.n	80036a2 <_svfprintf_r+0xeea>
 80036b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	d0dd      	beq.n	800367a <_svfprintf_r+0xec2>
 80036be:	aa1f      	add	r2, sp, #124	; 0x7c
 80036c0:	4651      	mov	r1, sl
 80036c2:	4658      	mov	r0, fp
 80036c4:	f001 fbc2 	bl	8004e4c <__ssprint_r>
 80036c8:	e7d7      	b.n	800367a <_svfprintf_r+0xec2>
 80036ca:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80036ce:	4610      	mov	r0, r2
 80036d0:	4619      	mov	r1, r3
 80036d2:	f7fd fa2f 	bl	8000b34 <__aeabi_dcmpun>
 80036d6:	2800      	cmp	r0, #0
 80036d8:	f43f aa44 	beq.w	8002b64 <_svfprintf_r+0x3ac>
 80036dc:	4b1e      	ldr	r3, [pc, #120]	; (8003758 <_svfprintf_r+0xfa0>)
 80036de:	4a1f      	ldr	r2, [pc, #124]	; (800375c <_svfprintf_r+0xfa4>)
 80036e0:	f7ff ba34 	b.w	8002b4c <_svfprintf_r+0x394>
 80036e4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80036e6:	eba3 0308 	sub.w	r3, r3, r8
 80036ea:	9303      	str	r3, [sp, #12]
 80036ec:	f7ff bab5 	b.w	8002c5a <_svfprintf_r+0x4a2>
 80036f0:	ea56 0207 	orrs.w	r2, r6, r7
 80036f4:	950b      	str	r5, [sp, #44]	; 0x2c
 80036f6:	f43f ac2b 	beq.w	8002f50 <_svfprintf_r+0x798>
 80036fa:	2b01      	cmp	r3, #1
 80036fc:	f43f ac9d 	beq.w	800303a <_svfprintf_r+0x882>
 8003700:	2b02      	cmp	r3, #2
 8003702:	f43f acbd 	beq.w	8003080 <_svfprintf_r+0x8c8>
 8003706:	ab2c      	add	r3, sp, #176	; 0xb0
 8003708:	08f1      	lsrs	r1, r6, #3
 800370a:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 800370e:	08f8      	lsrs	r0, r7, #3
 8003710:	f006 0207 	and.w	r2, r6, #7
 8003714:	4607      	mov	r7, r0
 8003716:	460e      	mov	r6, r1
 8003718:	3230      	adds	r2, #48	; 0x30
 800371a:	ea56 0107 	orrs.w	r1, r6, r7
 800371e:	f103 38ff 	add.w	r8, r3, #4294967295
 8003722:	f803 2c01 	strb.w	r2, [r3, #-1]
 8003726:	f47f ac86 	bne.w	8003036 <_svfprintf_r+0x87e>
 800372a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800372c:	07c9      	lsls	r1, r1, #31
 800372e:	d506      	bpl.n	800373e <_svfprintf_r+0xf86>
 8003730:	2a30      	cmp	r2, #48	; 0x30
 8003732:	d004      	beq.n	800373e <_svfprintf_r+0xf86>
 8003734:	2230      	movs	r2, #48	; 0x30
 8003736:	f808 2c01 	strb.w	r2, [r8, #-1]
 800373a:	f1a3 0802 	sub.w	r8, r3, #2
 800373e:	464e      	mov	r6, r9
 8003740:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 8003744:	eba9 0908 	sub.w	r9, r9, r8
 8003748:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800374a:	2700      	movs	r7, #0
 800374c:	f7ff bad1 	b.w	8002cf2 <_svfprintf_r+0x53a>
 8003750:	080055d6 	.word	0x080055d6
 8003754:	080055c6 	.word	0x080055c6
 8003758:	0800559a 	.word	0x0800559a
 800375c:	0800559e 	.word	0x0800559e

08003760 <quorem>:
 8003760:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003764:	6903      	ldr	r3, [r0, #16]
 8003766:	690c      	ldr	r4, [r1, #16]
 8003768:	429c      	cmp	r4, r3
 800376a:	4680      	mov	r8, r0
 800376c:	f300 8082 	bgt.w	8003874 <quorem+0x114>
 8003770:	3c01      	subs	r4, #1
 8003772:	f101 0714 	add.w	r7, r1, #20
 8003776:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800377a:	f100 0614 	add.w	r6, r0, #20
 800377e:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8003782:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8003786:	eb06 030e 	add.w	r3, r6, lr
 800378a:	3501      	adds	r5, #1
 800378c:	eb07 090e 	add.w	r9, r7, lr
 8003790:	9301      	str	r3, [sp, #4]
 8003792:	fbb0 f5f5 	udiv	r5, r0, r5
 8003796:	b395      	cbz	r5, 80037fe <quorem+0x9e>
 8003798:	f04f 0a00 	mov.w	sl, #0
 800379c:	4638      	mov	r0, r7
 800379e:	46b4      	mov	ip, r6
 80037a0:	46d3      	mov	fp, sl
 80037a2:	f850 2b04 	ldr.w	r2, [r0], #4
 80037a6:	b293      	uxth	r3, r2
 80037a8:	fb05 a303 	mla	r3, r5, r3, sl
 80037ac:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80037b0:	b29b      	uxth	r3, r3
 80037b2:	ebab 0303 	sub.w	r3, fp, r3
 80037b6:	0c12      	lsrs	r2, r2, #16
 80037b8:	f8bc b000 	ldrh.w	fp, [ip]
 80037bc:	fb05 a202 	mla	r2, r5, r2, sl
 80037c0:	fa13 f38b 	uxtah	r3, r3, fp
 80037c4:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80037c8:	fa1f fb82 	uxth.w	fp, r2
 80037cc:	f8dc 2000 	ldr.w	r2, [ip]
 80037d0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80037d4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80037d8:	b29b      	uxth	r3, r3
 80037da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80037de:	4581      	cmp	r9, r0
 80037e0:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80037e4:	f84c 3b04 	str.w	r3, [ip], #4
 80037e8:	d2db      	bcs.n	80037a2 <quorem+0x42>
 80037ea:	f856 300e 	ldr.w	r3, [r6, lr]
 80037ee:	b933      	cbnz	r3, 80037fe <quorem+0x9e>
 80037f0:	9b01      	ldr	r3, [sp, #4]
 80037f2:	3b04      	subs	r3, #4
 80037f4:	429e      	cmp	r6, r3
 80037f6:	461a      	mov	r2, r3
 80037f8:	d330      	bcc.n	800385c <quorem+0xfc>
 80037fa:	f8c8 4010 	str.w	r4, [r8, #16]
 80037fe:	4640      	mov	r0, r8
 8003800:	f001 fa4d 	bl	8004c9e <__mcmp>
 8003804:	2800      	cmp	r0, #0
 8003806:	db25      	blt.n	8003854 <quorem+0xf4>
 8003808:	3501      	adds	r5, #1
 800380a:	4630      	mov	r0, r6
 800380c:	f04f 0e00 	mov.w	lr, #0
 8003810:	f857 2b04 	ldr.w	r2, [r7], #4
 8003814:	f8d0 c000 	ldr.w	ip, [r0]
 8003818:	b293      	uxth	r3, r2
 800381a:	ebae 0303 	sub.w	r3, lr, r3
 800381e:	0c12      	lsrs	r2, r2, #16
 8003820:	fa13 f38c 	uxtah	r3, r3, ip
 8003824:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8003828:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800382c:	b29b      	uxth	r3, r3
 800382e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003832:	45b9      	cmp	r9, r7
 8003834:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8003838:	f840 3b04 	str.w	r3, [r0], #4
 800383c:	d2e8      	bcs.n	8003810 <quorem+0xb0>
 800383e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8003842:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8003846:	b92a      	cbnz	r2, 8003854 <quorem+0xf4>
 8003848:	3b04      	subs	r3, #4
 800384a:	429e      	cmp	r6, r3
 800384c:	461a      	mov	r2, r3
 800384e:	d30b      	bcc.n	8003868 <quorem+0x108>
 8003850:	f8c8 4010 	str.w	r4, [r8, #16]
 8003854:	4628      	mov	r0, r5
 8003856:	b003      	add	sp, #12
 8003858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800385c:	6812      	ldr	r2, [r2, #0]
 800385e:	3b04      	subs	r3, #4
 8003860:	2a00      	cmp	r2, #0
 8003862:	d1ca      	bne.n	80037fa <quorem+0x9a>
 8003864:	3c01      	subs	r4, #1
 8003866:	e7c5      	b.n	80037f4 <quorem+0x94>
 8003868:	6812      	ldr	r2, [r2, #0]
 800386a:	3b04      	subs	r3, #4
 800386c:	2a00      	cmp	r2, #0
 800386e:	d1ef      	bne.n	8003850 <quorem+0xf0>
 8003870:	3c01      	subs	r4, #1
 8003872:	e7ea      	b.n	800384a <quorem+0xea>
 8003874:	2000      	movs	r0, #0
 8003876:	e7ee      	b.n	8003856 <quorem+0xf6>

08003878 <_dtoa_r>:
 8003878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800387c:	ec57 6b10 	vmov	r6, r7, d0
 8003880:	b097      	sub	sp, #92	; 0x5c
 8003882:	e9cd 6700 	strd	r6, r7, [sp]
 8003886:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003888:	9107      	str	r1, [sp, #28]
 800388a:	4604      	mov	r4, r0
 800388c:	920a      	str	r2, [sp, #40]	; 0x28
 800388e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003890:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8003892:	b93e      	cbnz	r6, 80038a4 <_dtoa_r+0x2c>
 8003894:	2010      	movs	r0, #16
 8003896:	f000 fdcb 	bl	8004430 <malloc>
 800389a:	6260      	str	r0, [r4, #36]	; 0x24
 800389c:	6046      	str	r6, [r0, #4]
 800389e:	6086      	str	r6, [r0, #8]
 80038a0:	6006      	str	r6, [r0, #0]
 80038a2:	60c6      	str	r6, [r0, #12]
 80038a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038a6:	6819      	ldr	r1, [r3, #0]
 80038a8:	b151      	cbz	r1, 80038c0 <_dtoa_r+0x48>
 80038aa:	685a      	ldr	r2, [r3, #4]
 80038ac:	604a      	str	r2, [r1, #4]
 80038ae:	2301      	movs	r3, #1
 80038b0:	4093      	lsls	r3, r2
 80038b2:	608b      	str	r3, [r1, #8]
 80038b4:	4620      	mov	r0, r4
 80038b6:	f001 f81d 	bl	80048f4 <_Bfree>
 80038ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038bc:	2200      	movs	r2, #0
 80038be:	601a      	str	r2, [r3, #0]
 80038c0:	9b01      	ldr	r3, [sp, #4]
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	bfbf      	itttt	lt
 80038c6:	2301      	movlt	r3, #1
 80038c8:	602b      	strlt	r3, [r5, #0]
 80038ca:	9b01      	ldrlt	r3, [sp, #4]
 80038cc:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80038d0:	bfb2      	itee	lt
 80038d2:	9301      	strlt	r3, [sp, #4]
 80038d4:	2300      	movge	r3, #0
 80038d6:	602b      	strge	r3, [r5, #0]
 80038d8:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80038dc:	4ba8      	ldr	r3, [pc, #672]	; (8003b80 <_dtoa_r+0x308>)
 80038de:	ea33 0308 	bics.w	r3, r3, r8
 80038e2:	d11b      	bne.n	800391c <_dtoa_r+0xa4>
 80038e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80038e6:	f242 730f 	movw	r3, #9999	; 0x270f
 80038ea:	6013      	str	r3, [r2, #0]
 80038ec:	9b00      	ldr	r3, [sp, #0]
 80038ee:	b923      	cbnz	r3, 80038fa <_dtoa_r+0x82>
 80038f0:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80038f4:	2800      	cmp	r0, #0
 80038f6:	f000 8578 	beq.w	80043ea <_dtoa_r+0xb72>
 80038fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80038fc:	b953      	cbnz	r3, 8003914 <_dtoa_r+0x9c>
 80038fe:	4ba1      	ldr	r3, [pc, #644]	; (8003b84 <_dtoa_r+0x30c>)
 8003900:	e021      	b.n	8003946 <_dtoa_r+0xce>
 8003902:	4ba1      	ldr	r3, [pc, #644]	; (8003b88 <_dtoa_r+0x310>)
 8003904:	9302      	str	r3, [sp, #8]
 8003906:	3308      	adds	r3, #8
 8003908:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800390a:	6013      	str	r3, [r2, #0]
 800390c:	9802      	ldr	r0, [sp, #8]
 800390e:	b017      	add	sp, #92	; 0x5c
 8003910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003914:	4b9b      	ldr	r3, [pc, #620]	; (8003b84 <_dtoa_r+0x30c>)
 8003916:	9302      	str	r3, [sp, #8]
 8003918:	3303      	adds	r3, #3
 800391a:	e7f5      	b.n	8003908 <_dtoa_r+0x90>
 800391c:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003920:	2200      	movs	r2, #0
 8003922:	2300      	movs	r3, #0
 8003924:	4630      	mov	r0, r6
 8003926:	4639      	mov	r1, r7
 8003928:	f7fd f8d2 	bl	8000ad0 <__aeabi_dcmpeq>
 800392c:	4681      	mov	r9, r0
 800392e:	b160      	cbz	r0, 800394a <_dtoa_r+0xd2>
 8003930:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003932:	2301      	movs	r3, #1
 8003934:	6013      	str	r3, [r2, #0]
 8003936:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003938:	2b00      	cmp	r3, #0
 800393a:	f000 8553 	beq.w	80043e4 <_dtoa_r+0xb6c>
 800393e:	4b93      	ldr	r3, [pc, #588]	; (8003b8c <_dtoa_r+0x314>)
 8003940:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003942:	6013      	str	r3, [r2, #0]
 8003944:	3b01      	subs	r3, #1
 8003946:	9302      	str	r3, [sp, #8]
 8003948:	e7e0      	b.n	800390c <_dtoa_r+0x94>
 800394a:	aa14      	add	r2, sp, #80	; 0x50
 800394c:	a915      	add	r1, sp, #84	; 0x54
 800394e:	ec47 6b10 	vmov	d0, r6, r7
 8003952:	4620      	mov	r0, r4
 8003954:	f001 fa1b 	bl	8004d8e <__d2b>
 8003958:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800395c:	4682      	mov	sl, r0
 800395e:	2d00      	cmp	r5, #0
 8003960:	d07e      	beq.n	8003a60 <_dtoa_r+0x1e8>
 8003962:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003966:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800396a:	4630      	mov	r0, r6
 800396c:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003970:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003974:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
 8003978:	2200      	movs	r2, #0
 800397a:	4b85      	ldr	r3, [pc, #532]	; (8003b90 <_dtoa_r+0x318>)
 800397c:	f7fc fc8c 	bl	8000298 <__aeabi_dsub>
 8003980:	a379      	add	r3, pc, #484	; (adr r3, 8003b68 <_dtoa_r+0x2f0>)
 8003982:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003986:	f7fc fe3b 	bl	8000600 <__aeabi_dmul>
 800398a:	a379      	add	r3, pc, #484	; (adr r3, 8003b70 <_dtoa_r+0x2f8>)
 800398c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003990:	f7fc fc84 	bl	800029c <__adddf3>
 8003994:	4606      	mov	r6, r0
 8003996:	4628      	mov	r0, r5
 8003998:	460f      	mov	r7, r1
 800399a:	f7fc fdcb 	bl	8000534 <__aeabi_i2d>
 800399e:	a376      	add	r3, pc, #472	; (adr r3, 8003b78 <_dtoa_r+0x300>)
 80039a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039a4:	f7fc fe2c 	bl	8000600 <__aeabi_dmul>
 80039a8:	4602      	mov	r2, r0
 80039aa:	460b      	mov	r3, r1
 80039ac:	4630      	mov	r0, r6
 80039ae:	4639      	mov	r1, r7
 80039b0:	f7fc fc74 	bl	800029c <__adddf3>
 80039b4:	4606      	mov	r6, r0
 80039b6:	460f      	mov	r7, r1
 80039b8:	f7fd f8d2 	bl	8000b60 <__aeabi_d2iz>
 80039bc:	2200      	movs	r2, #0
 80039be:	4683      	mov	fp, r0
 80039c0:	2300      	movs	r3, #0
 80039c2:	4630      	mov	r0, r6
 80039c4:	4639      	mov	r1, r7
 80039c6:	f7fd f88d 	bl	8000ae4 <__aeabi_dcmplt>
 80039ca:	b158      	cbz	r0, 80039e4 <_dtoa_r+0x16c>
 80039cc:	4658      	mov	r0, fp
 80039ce:	f7fc fdb1 	bl	8000534 <__aeabi_i2d>
 80039d2:	4602      	mov	r2, r0
 80039d4:	460b      	mov	r3, r1
 80039d6:	4630      	mov	r0, r6
 80039d8:	4639      	mov	r1, r7
 80039da:	f7fd f879 	bl	8000ad0 <__aeabi_dcmpeq>
 80039de:	b908      	cbnz	r0, 80039e4 <_dtoa_r+0x16c>
 80039e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80039e4:	f1bb 0f16 	cmp.w	fp, #22
 80039e8:	d859      	bhi.n	8003a9e <_dtoa_r+0x226>
 80039ea:	496a      	ldr	r1, [pc, #424]	; (8003b94 <_dtoa_r+0x31c>)
 80039ec:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 80039f0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80039f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80039f8:	f7fd f892 	bl	8000b20 <__aeabi_dcmpgt>
 80039fc:	2800      	cmp	r0, #0
 80039fe:	d050      	beq.n	8003aa2 <_dtoa_r+0x22a>
 8003a00:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003a04:	2300      	movs	r3, #0
 8003a06:	930e      	str	r3, [sp, #56]	; 0x38
 8003a08:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003a0a:	1b5d      	subs	r5, r3, r5
 8003a0c:	1e6b      	subs	r3, r5, #1
 8003a0e:	9306      	str	r3, [sp, #24]
 8003a10:	bf45      	ittet	mi
 8003a12:	f1c5 0301 	rsbmi	r3, r5, #1
 8003a16:	9305      	strmi	r3, [sp, #20]
 8003a18:	2300      	movpl	r3, #0
 8003a1a:	2300      	movmi	r3, #0
 8003a1c:	bf4c      	ite	mi
 8003a1e:	9306      	strmi	r3, [sp, #24]
 8003a20:	9305      	strpl	r3, [sp, #20]
 8003a22:	f1bb 0f00 	cmp.w	fp, #0
 8003a26:	db3e      	blt.n	8003aa6 <_dtoa_r+0x22e>
 8003a28:	9b06      	ldr	r3, [sp, #24]
 8003a2a:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8003a2e:	445b      	add	r3, fp
 8003a30:	9306      	str	r3, [sp, #24]
 8003a32:	2300      	movs	r3, #0
 8003a34:	9308      	str	r3, [sp, #32]
 8003a36:	9b07      	ldr	r3, [sp, #28]
 8003a38:	2b09      	cmp	r3, #9
 8003a3a:	f200 80af 	bhi.w	8003b9c <_dtoa_r+0x324>
 8003a3e:	2b05      	cmp	r3, #5
 8003a40:	bfc4      	itt	gt
 8003a42:	3b04      	subgt	r3, #4
 8003a44:	9307      	strgt	r3, [sp, #28]
 8003a46:	9b07      	ldr	r3, [sp, #28]
 8003a48:	f1a3 0302 	sub.w	r3, r3, #2
 8003a4c:	bfcc      	ite	gt
 8003a4e:	2600      	movgt	r6, #0
 8003a50:	2601      	movle	r6, #1
 8003a52:	2b03      	cmp	r3, #3
 8003a54:	f200 80ae 	bhi.w	8003bb4 <_dtoa_r+0x33c>
 8003a58:	e8df f003 	tbb	[pc, r3]
 8003a5c:	772f8482 	.word	0x772f8482
 8003a60:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003a62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8003a64:	441d      	add	r5, r3
 8003a66:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003a6a:	2b20      	cmp	r3, #32
 8003a6c:	dd11      	ble.n	8003a92 <_dtoa_r+0x21a>
 8003a6e:	9a00      	ldr	r2, [sp, #0]
 8003a70:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8003a74:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8003a78:	fa22 f000 	lsr.w	r0, r2, r0
 8003a7c:	fa08 f303 	lsl.w	r3, r8, r3
 8003a80:	4318      	orrs	r0, r3
 8003a82:	f7fc fd47 	bl	8000514 <__aeabi_ui2d>
 8003a86:	2301      	movs	r3, #1
 8003a88:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8003a8c:	3d01      	subs	r5, #1
 8003a8e:	9312      	str	r3, [sp, #72]	; 0x48
 8003a90:	e772      	b.n	8003978 <_dtoa_r+0x100>
 8003a92:	f1c3 0020 	rsb	r0, r3, #32
 8003a96:	9b00      	ldr	r3, [sp, #0]
 8003a98:	fa03 f000 	lsl.w	r0, r3, r0
 8003a9c:	e7f1      	b.n	8003a82 <_dtoa_r+0x20a>
 8003a9e:	2301      	movs	r3, #1
 8003aa0:	e7b1      	b.n	8003a06 <_dtoa_r+0x18e>
 8003aa2:	900e      	str	r0, [sp, #56]	; 0x38
 8003aa4:	e7b0      	b.n	8003a08 <_dtoa_r+0x190>
 8003aa6:	9b05      	ldr	r3, [sp, #20]
 8003aa8:	eba3 030b 	sub.w	r3, r3, fp
 8003aac:	9305      	str	r3, [sp, #20]
 8003aae:	f1cb 0300 	rsb	r3, fp, #0
 8003ab2:	9308      	str	r3, [sp, #32]
 8003ab4:	2300      	movs	r3, #0
 8003ab6:	930b      	str	r3, [sp, #44]	; 0x2c
 8003ab8:	e7bd      	b.n	8003a36 <_dtoa_r+0x1be>
 8003aba:	2301      	movs	r3, #1
 8003abc:	9309      	str	r3, [sp, #36]	; 0x24
 8003abe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003ac0:	2b00      	cmp	r3, #0
 8003ac2:	dd7a      	ble.n	8003bba <_dtoa_r+0x342>
 8003ac4:	9304      	str	r3, [sp, #16]
 8003ac6:	9303      	str	r3, [sp, #12]
 8003ac8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8003aca:	2200      	movs	r2, #0
 8003acc:	606a      	str	r2, [r5, #4]
 8003ace:	2104      	movs	r1, #4
 8003ad0:	f101 0214 	add.w	r2, r1, #20
 8003ad4:	429a      	cmp	r2, r3
 8003ad6:	d975      	bls.n	8003bc4 <_dtoa_r+0x34c>
 8003ad8:	6869      	ldr	r1, [r5, #4]
 8003ada:	4620      	mov	r0, r4
 8003adc:	f000 fed6 	bl	800488c <_Balloc>
 8003ae0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003ae2:	6028      	str	r0, [r5, #0]
 8003ae4:	681b      	ldr	r3, [r3, #0]
 8003ae6:	9302      	str	r3, [sp, #8]
 8003ae8:	9b03      	ldr	r3, [sp, #12]
 8003aea:	2b0e      	cmp	r3, #14
 8003aec:	f200 80e5 	bhi.w	8003cba <_dtoa_r+0x442>
 8003af0:	2e00      	cmp	r6, #0
 8003af2:	f000 80e2 	beq.w	8003cba <_dtoa_r+0x442>
 8003af6:	ed9d 7b00 	vldr	d7, [sp]
 8003afa:	f1bb 0f00 	cmp.w	fp, #0
 8003afe:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 8003b02:	dd74      	ble.n	8003bee <_dtoa_r+0x376>
 8003b04:	4a23      	ldr	r2, [pc, #140]	; (8003b94 <_dtoa_r+0x31c>)
 8003b06:	f00b 030f 	and.w	r3, fp, #15
 8003b0a:	ea4f 162b 	mov.w	r6, fp, asr #4
 8003b0e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003b12:	06f0      	lsls	r0, r6, #27
 8003b14:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003b18:	d559      	bpl.n	8003bce <_dtoa_r+0x356>
 8003b1a:	4b1f      	ldr	r3, [pc, #124]	; (8003b98 <_dtoa_r+0x320>)
 8003b1c:	ec51 0b17 	vmov	r0, r1, d7
 8003b20:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003b24:	f7fc fe96 	bl	8000854 <__aeabi_ddiv>
 8003b28:	e9cd 0100 	strd	r0, r1, [sp]
 8003b2c:	f006 060f 	and.w	r6, r6, #15
 8003b30:	2503      	movs	r5, #3
 8003b32:	4f19      	ldr	r7, [pc, #100]	; (8003b98 <_dtoa_r+0x320>)
 8003b34:	2e00      	cmp	r6, #0
 8003b36:	d14c      	bne.n	8003bd2 <_dtoa_r+0x35a>
 8003b38:	4642      	mov	r2, r8
 8003b3a:	464b      	mov	r3, r9
 8003b3c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003b40:	f7fc fe88 	bl	8000854 <__aeabi_ddiv>
 8003b44:	e9cd 0100 	strd	r0, r1, [sp]
 8003b48:	e06a      	b.n	8003c20 <_dtoa_r+0x3a8>
 8003b4a:	2301      	movs	r3, #1
 8003b4c:	9309      	str	r3, [sp, #36]	; 0x24
 8003b4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003b50:	445b      	add	r3, fp
 8003b52:	9304      	str	r3, [sp, #16]
 8003b54:	3301      	adds	r3, #1
 8003b56:	2b01      	cmp	r3, #1
 8003b58:	9303      	str	r3, [sp, #12]
 8003b5a:	bfb8      	it	lt
 8003b5c:	2301      	movlt	r3, #1
 8003b5e:	e7b3      	b.n	8003ac8 <_dtoa_r+0x250>
 8003b60:	2300      	movs	r3, #0
 8003b62:	e7ab      	b.n	8003abc <_dtoa_r+0x244>
 8003b64:	2300      	movs	r3, #0
 8003b66:	e7f1      	b.n	8003b4c <_dtoa_r+0x2d4>
 8003b68:	636f4361 	.word	0x636f4361
 8003b6c:	3fd287a7 	.word	0x3fd287a7
 8003b70:	8b60c8b3 	.word	0x8b60c8b3
 8003b74:	3fc68a28 	.word	0x3fc68a28
 8003b78:	509f79fb 	.word	0x509f79fb
 8003b7c:	3fd34413 	.word	0x3fd34413
 8003b80:	7ff00000 	.word	0x7ff00000
 8003b84:	080055ef 	.word	0x080055ef
 8003b88:	080055e6 	.word	0x080055e6
 8003b8c:	080055c5 	.word	0x080055c5
 8003b90:	3ff80000 	.word	0x3ff80000
 8003b94:	08005620 	.word	0x08005620
 8003b98:	080055f8 	.word	0x080055f8
 8003b9c:	2601      	movs	r6, #1
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	9307      	str	r3, [sp, #28]
 8003ba2:	9609      	str	r6, [sp, #36]	; 0x24
 8003ba4:	f04f 33ff 	mov.w	r3, #4294967295
 8003ba8:	9304      	str	r3, [sp, #16]
 8003baa:	9303      	str	r3, [sp, #12]
 8003bac:	2200      	movs	r2, #0
 8003bae:	2312      	movs	r3, #18
 8003bb0:	920a      	str	r2, [sp, #40]	; 0x28
 8003bb2:	e789      	b.n	8003ac8 <_dtoa_r+0x250>
 8003bb4:	2301      	movs	r3, #1
 8003bb6:	9309      	str	r3, [sp, #36]	; 0x24
 8003bb8:	e7f4      	b.n	8003ba4 <_dtoa_r+0x32c>
 8003bba:	2301      	movs	r3, #1
 8003bbc:	9304      	str	r3, [sp, #16]
 8003bbe:	9303      	str	r3, [sp, #12]
 8003bc0:	461a      	mov	r2, r3
 8003bc2:	e7f5      	b.n	8003bb0 <_dtoa_r+0x338>
 8003bc4:	686a      	ldr	r2, [r5, #4]
 8003bc6:	3201      	adds	r2, #1
 8003bc8:	606a      	str	r2, [r5, #4]
 8003bca:	0049      	lsls	r1, r1, #1
 8003bcc:	e780      	b.n	8003ad0 <_dtoa_r+0x258>
 8003bce:	2502      	movs	r5, #2
 8003bd0:	e7af      	b.n	8003b32 <_dtoa_r+0x2ba>
 8003bd2:	07f1      	lsls	r1, r6, #31
 8003bd4:	d508      	bpl.n	8003be8 <_dtoa_r+0x370>
 8003bd6:	4640      	mov	r0, r8
 8003bd8:	4649      	mov	r1, r9
 8003bda:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003bde:	f7fc fd0f 	bl	8000600 <__aeabi_dmul>
 8003be2:	3501      	adds	r5, #1
 8003be4:	4680      	mov	r8, r0
 8003be6:	4689      	mov	r9, r1
 8003be8:	1076      	asrs	r6, r6, #1
 8003bea:	3708      	adds	r7, #8
 8003bec:	e7a2      	b.n	8003b34 <_dtoa_r+0x2bc>
 8003bee:	f000 809d 	beq.w	8003d2c <_dtoa_r+0x4b4>
 8003bf2:	f1cb 0600 	rsb	r6, fp, #0
 8003bf6:	4b9f      	ldr	r3, [pc, #636]	; (8003e74 <_dtoa_r+0x5fc>)
 8003bf8:	4f9f      	ldr	r7, [pc, #636]	; (8003e78 <_dtoa_r+0x600>)
 8003bfa:	f006 020f 	and.w	r2, r6, #15
 8003bfe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003c02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c06:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003c0a:	f7fc fcf9 	bl	8000600 <__aeabi_dmul>
 8003c0e:	e9cd 0100 	strd	r0, r1, [sp]
 8003c12:	1136      	asrs	r6, r6, #4
 8003c14:	2300      	movs	r3, #0
 8003c16:	2502      	movs	r5, #2
 8003c18:	2e00      	cmp	r6, #0
 8003c1a:	d17c      	bne.n	8003d16 <_dtoa_r+0x49e>
 8003c1c:	2b00      	cmp	r3, #0
 8003c1e:	d191      	bne.n	8003b44 <_dtoa_r+0x2cc>
 8003c20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003c22:	2b00      	cmp	r3, #0
 8003c24:	f000 8084 	beq.w	8003d30 <_dtoa_r+0x4b8>
 8003c28:	e9dd 8900 	ldrd	r8, r9, [sp]
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	4b93      	ldr	r3, [pc, #588]	; (8003e7c <_dtoa_r+0x604>)
 8003c30:	4640      	mov	r0, r8
 8003c32:	4649      	mov	r1, r9
 8003c34:	f7fc ff56 	bl	8000ae4 <__aeabi_dcmplt>
 8003c38:	2800      	cmp	r0, #0
 8003c3a:	d079      	beq.n	8003d30 <_dtoa_r+0x4b8>
 8003c3c:	9b03      	ldr	r3, [sp, #12]
 8003c3e:	2b00      	cmp	r3, #0
 8003c40:	d076      	beq.n	8003d30 <_dtoa_r+0x4b8>
 8003c42:	9b04      	ldr	r3, [sp, #16]
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	dd34      	ble.n	8003cb2 <_dtoa_r+0x43a>
 8003c48:	2200      	movs	r2, #0
 8003c4a:	4b8d      	ldr	r3, [pc, #564]	; (8003e80 <_dtoa_r+0x608>)
 8003c4c:	4640      	mov	r0, r8
 8003c4e:	4649      	mov	r1, r9
 8003c50:	f7fc fcd6 	bl	8000600 <__aeabi_dmul>
 8003c54:	e9cd 0100 	strd	r0, r1, [sp]
 8003c58:	9e04      	ldr	r6, [sp, #16]
 8003c5a:	f10b 37ff 	add.w	r7, fp, #4294967295
 8003c5e:	3501      	adds	r5, #1
 8003c60:	4628      	mov	r0, r5
 8003c62:	f7fc fc67 	bl	8000534 <__aeabi_i2d>
 8003c66:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003c6a:	f7fc fcc9 	bl	8000600 <__aeabi_dmul>
 8003c6e:	2200      	movs	r2, #0
 8003c70:	4b84      	ldr	r3, [pc, #528]	; (8003e84 <_dtoa_r+0x60c>)
 8003c72:	f7fc fb13 	bl	800029c <__adddf3>
 8003c76:	4680      	mov	r8, r0
 8003c78:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8003c7c:	2e00      	cmp	r6, #0
 8003c7e:	d15a      	bne.n	8003d36 <_dtoa_r+0x4be>
 8003c80:	2200      	movs	r2, #0
 8003c82:	4b81      	ldr	r3, [pc, #516]	; (8003e88 <_dtoa_r+0x610>)
 8003c84:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003c88:	f7fc fb06 	bl	8000298 <__aeabi_dsub>
 8003c8c:	4642      	mov	r2, r8
 8003c8e:	464b      	mov	r3, r9
 8003c90:	e9cd 0100 	strd	r0, r1, [sp]
 8003c94:	f7fc ff44 	bl	8000b20 <__aeabi_dcmpgt>
 8003c98:	2800      	cmp	r0, #0
 8003c9a:	f040 829b 	bne.w	80041d4 <_dtoa_r+0x95c>
 8003c9e:	4642      	mov	r2, r8
 8003ca0:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8003ca4:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003ca8:	f7fc ff1c 	bl	8000ae4 <__aeabi_dcmplt>
 8003cac:	2800      	cmp	r0, #0
 8003cae:	f040 828f 	bne.w	80041d0 <_dtoa_r+0x958>
 8003cb2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8003cb6:	e9cd 2300 	strd	r2, r3, [sp]
 8003cba:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003cbc:	2b00      	cmp	r3, #0
 8003cbe:	f2c0 8150 	blt.w	8003f62 <_dtoa_r+0x6ea>
 8003cc2:	f1bb 0f0e 	cmp.w	fp, #14
 8003cc6:	f300 814c 	bgt.w	8003f62 <_dtoa_r+0x6ea>
 8003cca:	4b6a      	ldr	r3, [pc, #424]	; (8003e74 <_dtoa_r+0x5fc>)
 8003ccc:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8003cd0:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003cd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003cd6:	2b00      	cmp	r3, #0
 8003cd8:	f280 80da 	bge.w	8003e90 <_dtoa_r+0x618>
 8003cdc:	9b03      	ldr	r3, [sp, #12]
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	f300 80d6 	bgt.w	8003e90 <_dtoa_r+0x618>
 8003ce4:	f040 8273 	bne.w	80041ce <_dtoa_r+0x956>
 8003ce8:	2200      	movs	r2, #0
 8003cea:	4b67      	ldr	r3, [pc, #412]	; (8003e88 <_dtoa_r+0x610>)
 8003cec:	4640      	mov	r0, r8
 8003cee:	4649      	mov	r1, r9
 8003cf0:	f7fc fc86 	bl	8000600 <__aeabi_dmul>
 8003cf4:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003cf8:	f7fc ff08 	bl	8000b0c <__aeabi_dcmpge>
 8003cfc:	9e03      	ldr	r6, [sp, #12]
 8003cfe:	4637      	mov	r7, r6
 8003d00:	2800      	cmp	r0, #0
 8003d02:	f040 824a 	bne.w	800419a <_dtoa_r+0x922>
 8003d06:	9b02      	ldr	r3, [sp, #8]
 8003d08:	9a02      	ldr	r2, [sp, #8]
 8003d0a:	1c5d      	adds	r5, r3, #1
 8003d0c:	2331      	movs	r3, #49	; 0x31
 8003d0e:	7013      	strb	r3, [r2, #0]
 8003d10:	f10b 0b01 	add.w	fp, fp, #1
 8003d14:	e245      	b.n	80041a2 <_dtoa_r+0x92a>
 8003d16:	07f2      	lsls	r2, r6, #31
 8003d18:	d505      	bpl.n	8003d26 <_dtoa_r+0x4ae>
 8003d1a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003d1e:	f7fc fc6f 	bl	8000600 <__aeabi_dmul>
 8003d22:	3501      	adds	r5, #1
 8003d24:	2301      	movs	r3, #1
 8003d26:	1076      	asrs	r6, r6, #1
 8003d28:	3708      	adds	r7, #8
 8003d2a:	e775      	b.n	8003c18 <_dtoa_r+0x3a0>
 8003d2c:	2502      	movs	r5, #2
 8003d2e:	e777      	b.n	8003c20 <_dtoa_r+0x3a8>
 8003d30:	465f      	mov	r7, fp
 8003d32:	9e03      	ldr	r6, [sp, #12]
 8003d34:	e794      	b.n	8003c60 <_dtoa_r+0x3e8>
 8003d36:	9a02      	ldr	r2, [sp, #8]
 8003d38:	4b4e      	ldr	r3, [pc, #312]	; (8003e74 <_dtoa_r+0x5fc>)
 8003d3a:	4432      	add	r2, r6
 8003d3c:	9213      	str	r2, [sp, #76]	; 0x4c
 8003d3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003d40:	1e71      	subs	r1, r6, #1
 8003d42:	2a00      	cmp	r2, #0
 8003d44:	d048      	beq.n	8003dd8 <_dtoa_r+0x560>
 8003d46:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8003d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d4e:	2000      	movs	r0, #0
 8003d50:	494e      	ldr	r1, [pc, #312]	; (8003e8c <_dtoa_r+0x614>)
 8003d52:	f7fc fd7f 	bl	8000854 <__aeabi_ddiv>
 8003d56:	4642      	mov	r2, r8
 8003d58:	464b      	mov	r3, r9
 8003d5a:	f7fc fa9d 	bl	8000298 <__aeabi_dsub>
 8003d5e:	9d02      	ldr	r5, [sp, #8]
 8003d60:	4680      	mov	r8, r0
 8003d62:	4689      	mov	r9, r1
 8003d64:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003d68:	f7fc fefa 	bl	8000b60 <__aeabi_d2iz>
 8003d6c:	4606      	mov	r6, r0
 8003d6e:	f7fc fbe1 	bl	8000534 <__aeabi_i2d>
 8003d72:	4602      	mov	r2, r0
 8003d74:	460b      	mov	r3, r1
 8003d76:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003d7a:	f7fc fa8d 	bl	8000298 <__aeabi_dsub>
 8003d7e:	3630      	adds	r6, #48	; 0x30
 8003d80:	f805 6b01 	strb.w	r6, [r5], #1
 8003d84:	4642      	mov	r2, r8
 8003d86:	464b      	mov	r3, r9
 8003d88:	e9cd 0100 	strd	r0, r1, [sp]
 8003d8c:	f7fc feaa 	bl	8000ae4 <__aeabi_dcmplt>
 8003d90:	2800      	cmp	r0, #0
 8003d92:	d165      	bne.n	8003e60 <_dtoa_r+0x5e8>
 8003d94:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003d98:	2000      	movs	r0, #0
 8003d9a:	4938      	ldr	r1, [pc, #224]	; (8003e7c <_dtoa_r+0x604>)
 8003d9c:	f7fc fa7c 	bl	8000298 <__aeabi_dsub>
 8003da0:	4642      	mov	r2, r8
 8003da2:	464b      	mov	r3, r9
 8003da4:	f7fc fe9e 	bl	8000ae4 <__aeabi_dcmplt>
 8003da8:	2800      	cmp	r0, #0
 8003daa:	f040 80ba 	bne.w	8003f22 <_dtoa_r+0x6aa>
 8003dae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003db0:	429d      	cmp	r5, r3
 8003db2:	f43f af7e 	beq.w	8003cb2 <_dtoa_r+0x43a>
 8003db6:	2200      	movs	r2, #0
 8003db8:	4b31      	ldr	r3, [pc, #196]	; (8003e80 <_dtoa_r+0x608>)
 8003dba:	4640      	mov	r0, r8
 8003dbc:	4649      	mov	r1, r9
 8003dbe:	f7fc fc1f 	bl	8000600 <__aeabi_dmul>
 8003dc2:	2200      	movs	r2, #0
 8003dc4:	4680      	mov	r8, r0
 8003dc6:	4689      	mov	r9, r1
 8003dc8:	4b2d      	ldr	r3, [pc, #180]	; (8003e80 <_dtoa_r+0x608>)
 8003dca:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003dce:	f7fc fc17 	bl	8000600 <__aeabi_dmul>
 8003dd2:	e9cd 0100 	strd	r0, r1, [sp]
 8003dd6:	e7c5      	b.n	8003d64 <_dtoa_r+0x4ec>
 8003dd8:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8003ddc:	4642      	mov	r2, r8
 8003dde:	464b      	mov	r3, r9
 8003de0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003de4:	f7fc fc0c 	bl	8000600 <__aeabi_dmul>
 8003de8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003dec:	9d02      	ldr	r5, [sp, #8]
 8003dee:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003df2:	f7fc feb5 	bl	8000b60 <__aeabi_d2iz>
 8003df6:	4606      	mov	r6, r0
 8003df8:	f7fc fb9c 	bl	8000534 <__aeabi_i2d>
 8003dfc:	3630      	adds	r6, #48	; 0x30
 8003dfe:	4602      	mov	r2, r0
 8003e00:	460b      	mov	r3, r1
 8003e02:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003e06:	f7fc fa47 	bl	8000298 <__aeabi_dsub>
 8003e0a:	f805 6b01 	strb.w	r6, [r5], #1
 8003e0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003e10:	42ab      	cmp	r3, r5
 8003e12:	4680      	mov	r8, r0
 8003e14:	4689      	mov	r9, r1
 8003e16:	f04f 0200 	mov.w	r2, #0
 8003e1a:	d125      	bne.n	8003e68 <_dtoa_r+0x5f0>
 8003e1c:	4b1b      	ldr	r3, [pc, #108]	; (8003e8c <_dtoa_r+0x614>)
 8003e1e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003e22:	f7fc fa3b 	bl	800029c <__adddf3>
 8003e26:	4602      	mov	r2, r0
 8003e28:	460b      	mov	r3, r1
 8003e2a:	4640      	mov	r0, r8
 8003e2c:	4649      	mov	r1, r9
 8003e2e:	f7fc fe77 	bl	8000b20 <__aeabi_dcmpgt>
 8003e32:	2800      	cmp	r0, #0
 8003e34:	d175      	bne.n	8003f22 <_dtoa_r+0x6aa>
 8003e36:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003e3a:	2000      	movs	r0, #0
 8003e3c:	4913      	ldr	r1, [pc, #76]	; (8003e8c <_dtoa_r+0x614>)
 8003e3e:	f7fc fa2b 	bl	8000298 <__aeabi_dsub>
 8003e42:	4602      	mov	r2, r0
 8003e44:	460b      	mov	r3, r1
 8003e46:	4640      	mov	r0, r8
 8003e48:	4649      	mov	r1, r9
 8003e4a:	f7fc fe4b 	bl	8000ae4 <__aeabi_dcmplt>
 8003e4e:	2800      	cmp	r0, #0
 8003e50:	f43f af2f 	beq.w	8003cb2 <_dtoa_r+0x43a>
 8003e54:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003e58:	2b30      	cmp	r3, #48	; 0x30
 8003e5a:	f105 32ff 	add.w	r2, r5, #4294967295
 8003e5e:	d001      	beq.n	8003e64 <_dtoa_r+0x5ec>
 8003e60:	46bb      	mov	fp, r7
 8003e62:	e04d      	b.n	8003f00 <_dtoa_r+0x688>
 8003e64:	4615      	mov	r5, r2
 8003e66:	e7f5      	b.n	8003e54 <_dtoa_r+0x5dc>
 8003e68:	4b05      	ldr	r3, [pc, #20]	; (8003e80 <_dtoa_r+0x608>)
 8003e6a:	f7fc fbc9 	bl	8000600 <__aeabi_dmul>
 8003e6e:	e9cd 0100 	strd	r0, r1, [sp]
 8003e72:	e7bc      	b.n	8003dee <_dtoa_r+0x576>
 8003e74:	08005620 	.word	0x08005620
 8003e78:	080055f8 	.word	0x080055f8
 8003e7c:	3ff00000 	.word	0x3ff00000
 8003e80:	40240000 	.word	0x40240000
 8003e84:	401c0000 	.word	0x401c0000
 8003e88:	40140000 	.word	0x40140000
 8003e8c:	3fe00000 	.word	0x3fe00000
 8003e90:	e9dd 6700 	ldrd	r6, r7, [sp]
 8003e94:	9d02      	ldr	r5, [sp, #8]
 8003e96:	4642      	mov	r2, r8
 8003e98:	464b      	mov	r3, r9
 8003e9a:	4630      	mov	r0, r6
 8003e9c:	4639      	mov	r1, r7
 8003e9e:	f7fc fcd9 	bl	8000854 <__aeabi_ddiv>
 8003ea2:	f7fc fe5d 	bl	8000b60 <__aeabi_d2iz>
 8003ea6:	9000      	str	r0, [sp, #0]
 8003ea8:	f7fc fb44 	bl	8000534 <__aeabi_i2d>
 8003eac:	4642      	mov	r2, r8
 8003eae:	464b      	mov	r3, r9
 8003eb0:	f7fc fba6 	bl	8000600 <__aeabi_dmul>
 8003eb4:	4602      	mov	r2, r0
 8003eb6:	460b      	mov	r3, r1
 8003eb8:	4630      	mov	r0, r6
 8003eba:	4639      	mov	r1, r7
 8003ebc:	f7fc f9ec 	bl	8000298 <__aeabi_dsub>
 8003ec0:	9e00      	ldr	r6, [sp, #0]
 8003ec2:	9f03      	ldr	r7, [sp, #12]
 8003ec4:	3630      	adds	r6, #48	; 0x30
 8003ec6:	f805 6b01 	strb.w	r6, [r5], #1
 8003eca:	9e02      	ldr	r6, [sp, #8]
 8003ecc:	1bae      	subs	r6, r5, r6
 8003ece:	42b7      	cmp	r7, r6
 8003ed0:	4602      	mov	r2, r0
 8003ed2:	460b      	mov	r3, r1
 8003ed4:	d138      	bne.n	8003f48 <_dtoa_r+0x6d0>
 8003ed6:	f7fc f9e1 	bl	800029c <__adddf3>
 8003eda:	4606      	mov	r6, r0
 8003edc:	460f      	mov	r7, r1
 8003ede:	4602      	mov	r2, r0
 8003ee0:	460b      	mov	r3, r1
 8003ee2:	4640      	mov	r0, r8
 8003ee4:	4649      	mov	r1, r9
 8003ee6:	f7fc fdfd 	bl	8000ae4 <__aeabi_dcmplt>
 8003eea:	b9c8      	cbnz	r0, 8003f20 <_dtoa_r+0x6a8>
 8003eec:	4632      	mov	r2, r6
 8003eee:	463b      	mov	r3, r7
 8003ef0:	4640      	mov	r0, r8
 8003ef2:	4649      	mov	r1, r9
 8003ef4:	f7fc fdec 	bl	8000ad0 <__aeabi_dcmpeq>
 8003ef8:	b110      	cbz	r0, 8003f00 <_dtoa_r+0x688>
 8003efa:	9b00      	ldr	r3, [sp, #0]
 8003efc:	07db      	lsls	r3, r3, #31
 8003efe:	d40f      	bmi.n	8003f20 <_dtoa_r+0x6a8>
 8003f00:	4651      	mov	r1, sl
 8003f02:	4620      	mov	r0, r4
 8003f04:	f000 fcf6 	bl	80048f4 <_Bfree>
 8003f08:	2300      	movs	r3, #0
 8003f0a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003f0c:	702b      	strb	r3, [r5, #0]
 8003f0e:	f10b 0301 	add.w	r3, fp, #1
 8003f12:	6013      	str	r3, [r2, #0]
 8003f14:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	f43f acf8 	beq.w	800390c <_dtoa_r+0x94>
 8003f1c:	601d      	str	r5, [r3, #0]
 8003f1e:	e4f5      	b.n	800390c <_dtoa_r+0x94>
 8003f20:	465f      	mov	r7, fp
 8003f22:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003f26:	2a39      	cmp	r2, #57	; 0x39
 8003f28:	f105 33ff 	add.w	r3, r5, #4294967295
 8003f2c:	d106      	bne.n	8003f3c <_dtoa_r+0x6c4>
 8003f2e:	9a02      	ldr	r2, [sp, #8]
 8003f30:	429a      	cmp	r2, r3
 8003f32:	d107      	bne.n	8003f44 <_dtoa_r+0x6cc>
 8003f34:	2330      	movs	r3, #48	; 0x30
 8003f36:	7013      	strb	r3, [r2, #0]
 8003f38:	3701      	adds	r7, #1
 8003f3a:	4613      	mov	r3, r2
 8003f3c:	781a      	ldrb	r2, [r3, #0]
 8003f3e:	3201      	adds	r2, #1
 8003f40:	701a      	strb	r2, [r3, #0]
 8003f42:	e78d      	b.n	8003e60 <_dtoa_r+0x5e8>
 8003f44:	461d      	mov	r5, r3
 8003f46:	e7ec      	b.n	8003f22 <_dtoa_r+0x6aa>
 8003f48:	2200      	movs	r2, #0
 8003f4a:	4ba4      	ldr	r3, [pc, #656]	; (80041dc <_dtoa_r+0x964>)
 8003f4c:	f7fc fb58 	bl	8000600 <__aeabi_dmul>
 8003f50:	2200      	movs	r2, #0
 8003f52:	2300      	movs	r3, #0
 8003f54:	4606      	mov	r6, r0
 8003f56:	460f      	mov	r7, r1
 8003f58:	f7fc fdba 	bl	8000ad0 <__aeabi_dcmpeq>
 8003f5c:	2800      	cmp	r0, #0
 8003f5e:	d09a      	beq.n	8003e96 <_dtoa_r+0x61e>
 8003f60:	e7ce      	b.n	8003f00 <_dtoa_r+0x688>
 8003f62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003f64:	2a00      	cmp	r2, #0
 8003f66:	f000 80cd 	beq.w	8004104 <_dtoa_r+0x88c>
 8003f6a:	9a07      	ldr	r2, [sp, #28]
 8003f6c:	2a01      	cmp	r2, #1
 8003f6e:	f300 80af 	bgt.w	80040d0 <_dtoa_r+0x858>
 8003f72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003f74:	2a00      	cmp	r2, #0
 8003f76:	f000 80a7 	beq.w	80040c8 <_dtoa_r+0x850>
 8003f7a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003f7e:	9e08      	ldr	r6, [sp, #32]
 8003f80:	9d05      	ldr	r5, [sp, #20]
 8003f82:	9a05      	ldr	r2, [sp, #20]
 8003f84:	441a      	add	r2, r3
 8003f86:	9205      	str	r2, [sp, #20]
 8003f88:	9a06      	ldr	r2, [sp, #24]
 8003f8a:	2101      	movs	r1, #1
 8003f8c:	441a      	add	r2, r3
 8003f8e:	4620      	mov	r0, r4
 8003f90:	9206      	str	r2, [sp, #24]
 8003f92:	f000 fd4f 	bl	8004a34 <__i2b>
 8003f96:	4607      	mov	r7, r0
 8003f98:	2d00      	cmp	r5, #0
 8003f9a:	dd0c      	ble.n	8003fb6 <_dtoa_r+0x73e>
 8003f9c:	9b06      	ldr	r3, [sp, #24]
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	dd09      	ble.n	8003fb6 <_dtoa_r+0x73e>
 8003fa2:	42ab      	cmp	r3, r5
 8003fa4:	9a05      	ldr	r2, [sp, #20]
 8003fa6:	bfa8      	it	ge
 8003fa8:	462b      	movge	r3, r5
 8003faa:	1ad2      	subs	r2, r2, r3
 8003fac:	9205      	str	r2, [sp, #20]
 8003fae:	9a06      	ldr	r2, [sp, #24]
 8003fb0:	1aed      	subs	r5, r5, r3
 8003fb2:	1ad3      	subs	r3, r2, r3
 8003fb4:	9306      	str	r3, [sp, #24]
 8003fb6:	9b08      	ldr	r3, [sp, #32]
 8003fb8:	b1f3      	cbz	r3, 8003ff8 <_dtoa_r+0x780>
 8003fba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	f000 80a5 	beq.w	800410c <_dtoa_r+0x894>
 8003fc2:	2e00      	cmp	r6, #0
 8003fc4:	dd10      	ble.n	8003fe8 <_dtoa_r+0x770>
 8003fc6:	4639      	mov	r1, r7
 8003fc8:	4632      	mov	r2, r6
 8003fca:	4620      	mov	r0, r4
 8003fcc:	f000 fdc8 	bl	8004b60 <__pow5mult>
 8003fd0:	4652      	mov	r2, sl
 8003fd2:	4601      	mov	r1, r0
 8003fd4:	4607      	mov	r7, r0
 8003fd6:	4620      	mov	r0, r4
 8003fd8:	f000 fd35 	bl	8004a46 <__multiply>
 8003fdc:	4651      	mov	r1, sl
 8003fde:	4680      	mov	r8, r0
 8003fe0:	4620      	mov	r0, r4
 8003fe2:	f000 fc87 	bl	80048f4 <_Bfree>
 8003fe6:	46c2      	mov	sl, r8
 8003fe8:	9b08      	ldr	r3, [sp, #32]
 8003fea:	1b9a      	subs	r2, r3, r6
 8003fec:	d004      	beq.n	8003ff8 <_dtoa_r+0x780>
 8003fee:	4651      	mov	r1, sl
 8003ff0:	4620      	mov	r0, r4
 8003ff2:	f000 fdb5 	bl	8004b60 <__pow5mult>
 8003ff6:	4682      	mov	sl, r0
 8003ff8:	2101      	movs	r1, #1
 8003ffa:	4620      	mov	r0, r4
 8003ffc:	f000 fd1a 	bl	8004a34 <__i2b>
 8004000:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004002:	2b00      	cmp	r3, #0
 8004004:	4606      	mov	r6, r0
 8004006:	f340 8083 	ble.w	8004110 <_dtoa_r+0x898>
 800400a:	461a      	mov	r2, r3
 800400c:	4601      	mov	r1, r0
 800400e:	4620      	mov	r0, r4
 8004010:	f000 fda6 	bl	8004b60 <__pow5mult>
 8004014:	9b07      	ldr	r3, [sp, #28]
 8004016:	2b01      	cmp	r3, #1
 8004018:	4606      	mov	r6, r0
 800401a:	dd7c      	ble.n	8004116 <_dtoa_r+0x89e>
 800401c:	f04f 0800 	mov.w	r8, #0
 8004020:	6933      	ldr	r3, [r6, #16]
 8004022:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8004026:	6918      	ldr	r0, [r3, #16]
 8004028:	f000 fcb6 	bl	8004998 <__hi0bits>
 800402c:	f1c0 0020 	rsb	r0, r0, #32
 8004030:	9b06      	ldr	r3, [sp, #24]
 8004032:	4418      	add	r0, r3
 8004034:	f010 001f 	ands.w	r0, r0, #31
 8004038:	f000 8096 	beq.w	8004168 <_dtoa_r+0x8f0>
 800403c:	f1c0 0320 	rsb	r3, r0, #32
 8004040:	2b04      	cmp	r3, #4
 8004042:	f340 8087 	ble.w	8004154 <_dtoa_r+0x8dc>
 8004046:	9b05      	ldr	r3, [sp, #20]
 8004048:	f1c0 001c 	rsb	r0, r0, #28
 800404c:	4403      	add	r3, r0
 800404e:	9305      	str	r3, [sp, #20]
 8004050:	9b06      	ldr	r3, [sp, #24]
 8004052:	4405      	add	r5, r0
 8004054:	4403      	add	r3, r0
 8004056:	9306      	str	r3, [sp, #24]
 8004058:	9b05      	ldr	r3, [sp, #20]
 800405a:	2b00      	cmp	r3, #0
 800405c:	dd05      	ble.n	800406a <_dtoa_r+0x7f2>
 800405e:	4651      	mov	r1, sl
 8004060:	461a      	mov	r2, r3
 8004062:	4620      	mov	r0, r4
 8004064:	f000 fdca 	bl	8004bfc <__lshift>
 8004068:	4682      	mov	sl, r0
 800406a:	9b06      	ldr	r3, [sp, #24]
 800406c:	2b00      	cmp	r3, #0
 800406e:	dd05      	ble.n	800407c <_dtoa_r+0x804>
 8004070:	4631      	mov	r1, r6
 8004072:	461a      	mov	r2, r3
 8004074:	4620      	mov	r0, r4
 8004076:	f000 fdc1 	bl	8004bfc <__lshift>
 800407a:	4606      	mov	r6, r0
 800407c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800407e:	2b00      	cmp	r3, #0
 8004080:	d074      	beq.n	800416c <_dtoa_r+0x8f4>
 8004082:	4631      	mov	r1, r6
 8004084:	4650      	mov	r0, sl
 8004086:	f000 fe0a 	bl	8004c9e <__mcmp>
 800408a:	2800      	cmp	r0, #0
 800408c:	da6e      	bge.n	800416c <_dtoa_r+0x8f4>
 800408e:	2300      	movs	r3, #0
 8004090:	4651      	mov	r1, sl
 8004092:	220a      	movs	r2, #10
 8004094:	4620      	mov	r0, r4
 8004096:	f000 fc44 	bl	8004922 <__multadd>
 800409a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800409c:	f10b 3bff 	add.w	fp, fp, #4294967295
 80040a0:	4682      	mov	sl, r0
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	f000 81a8 	beq.w	80043f8 <_dtoa_r+0xb80>
 80040a8:	2300      	movs	r3, #0
 80040aa:	4639      	mov	r1, r7
 80040ac:	220a      	movs	r2, #10
 80040ae:	4620      	mov	r0, r4
 80040b0:	f000 fc37 	bl	8004922 <__multadd>
 80040b4:	9b04      	ldr	r3, [sp, #16]
 80040b6:	2b00      	cmp	r3, #0
 80040b8:	4607      	mov	r7, r0
 80040ba:	f300 80c8 	bgt.w	800424e <_dtoa_r+0x9d6>
 80040be:	9b07      	ldr	r3, [sp, #28]
 80040c0:	2b02      	cmp	r3, #2
 80040c2:	f340 80c4 	ble.w	800424e <_dtoa_r+0x9d6>
 80040c6:	e059      	b.n	800417c <_dtoa_r+0x904>
 80040c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80040ca:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80040ce:	e756      	b.n	8003f7e <_dtoa_r+0x706>
 80040d0:	9b03      	ldr	r3, [sp, #12]
 80040d2:	1e5e      	subs	r6, r3, #1
 80040d4:	9b08      	ldr	r3, [sp, #32]
 80040d6:	42b3      	cmp	r3, r6
 80040d8:	bfbf      	itttt	lt
 80040da:	9b08      	ldrlt	r3, [sp, #32]
 80040dc:	9608      	strlt	r6, [sp, #32]
 80040de:	1af2      	sublt	r2, r6, r3
 80040e0:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 80040e2:	bfb6      	itet	lt
 80040e4:	189b      	addlt	r3, r3, r2
 80040e6:	1b9e      	subge	r6, r3, r6
 80040e8:	930b      	strlt	r3, [sp, #44]	; 0x2c
 80040ea:	9b03      	ldr	r3, [sp, #12]
 80040ec:	bfb8      	it	lt
 80040ee:	2600      	movlt	r6, #0
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	bfb9      	ittee	lt
 80040f4:	9b05      	ldrlt	r3, [sp, #20]
 80040f6:	9a03      	ldrlt	r2, [sp, #12]
 80040f8:	9d05      	ldrge	r5, [sp, #20]
 80040fa:	9b03      	ldrge	r3, [sp, #12]
 80040fc:	bfbc      	itt	lt
 80040fe:	1a9d      	sublt	r5, r3, r2
 8004100:	2300      	movlt	r3, #0
 8004102:	e73e      	b.n	8003f82 <_dtoa_r+0x70a>
 8004104:	9e08      	ldr	r6, [sp, #32]
 8004106:	9d05      	ldr	r5, [sp, #20]
 8004108:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800410a:	e745      	b.n	8003f98 <_dtoa_r+0x720>
 800410c:	9a08      	ldr	r2, [sp, #32]
 800410e:	e76e      	b.n	8003fee <_dtoa_r+0x776>
 8004110:	9b07      	ldr	r3, [sp, #28]
 8004112:	2b01      	cmp	r3, #1
 8004114:	dc19      	bgt.n	800414a <_dtoa_r+0x8d2>
 8004116:	9b00      	ldr	r3, [sp, #0]
 8004118:	b9bb      	cbnz	r3, 800414a <_dtoa_r+0x8d2>
 800411a:	9b01      	ldr	r3, [sp, #4]
 800411c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004120:	b99b      	cbnz	r3, 800414a <_dtoa_r+0x8d2>
 8004122:	9b01      	ldr	r3, [sp, #4]
 8004124:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004128:	0d1b      	lsrs	r3, r3, #20
 800412a:	051b      	lsls	r3, r3, #20
 800412c:	b183      	cbz	r3, 8004150 <_dtoa_r+0x8d8>
 800412e:	9b05      	ldr	r3, [sp, #20]
 8004130:	3301      	adds	r3, #1
 8004132:	9305      	str	r3, [sp, #20]
 8004134:	9b06      	ldr	r3, [sp, #24]
 8004136:	3301      	adds	r3, #1
 8004138:	9306      	str	r3, [sp, #24]
 800413a:	f04f 0801 	mov.w	r8, #1
 800413e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004140:	2b00      	cmp	r3, #0
 8004142:	f47f af6d 	bne.w	8004020 <_dtoa_r+0x7a8>
 8004146:	2001      	movs	r0, #1
 8004148:	e772      	b.n	8004030 <_dtoa_r+0x7b8>
 800414a:	f04f 0800 	mov.w	r8, #0
 800414e:	e7f6      	b.n	800413e <_dtoa_r+0x8c6>
 8004150:	4698      	mov	r8, r3
 8004152:	e7f4      	b.n	800413e <_dtoa_r+0x8c6>
 8004154:	d080      	beq.n	8004058 <_dtoa_r+0x7e0>
 8004156:	9a05      	ldr	r2, [sp, #20]
 8004158:	331c      	adds	r3, #28
 800415a:	441a      	add	r2, r3
 800415c:	9205      	str	r2, [sp, #20]
 800415e:	9a06      	ldr	r2, [sp, #24]
 8004160:	441a      	add	r2, r3
 8004162:	441d      	add	r5, r3
 8004164:	4613      	mov	r3, r2
 8004166:	e776      	b.n	8004056 <_dtoa_r+0x7de>
 8004168:	4603      	mov	r3, r0
 800416a:	e7f4      	b.n	8004156 <_dtoa_r+0x8de>
 800416c:	9b03      	ldr	r3, [sp, #12]
 800416e:	2b00      	cmp	r3, #0
 8004170:	dc36      	bgt.n	80041e0 <_dtoa_r+0x968>
 8004172:	9b07      	ldr	r3, [sp, #28]
 8004174:	2b02      	cmp	r3, #2
 8004176:	dd33      	ble.n	80041e0 <_dtoa_r+0x968>
 8004178:	9b03      	ldr	r3, [sp, #12]
 800417a:	9304      	str	r3, [sp, #16]
 800417c:	9b04      	ldr	r3, [sp, #16]
 800417e:	b963      	cbnz	r3, 800419a <_dtoa_r+0x922>
 8004180:	4631      	mov	r1, r6
 8004182:	2205      	movs	r2, #5
 8004184:	4620      	mov	r0, r4
 8004186:	f000 fbcc 	bl	8004922 <__multadd>
 800418a:	4601      	mov	r1, r0
 800418c:	4606      	mov	r6, r0
 800418e:	4650      	mov	r0, sl
 8004190:	f000 fd85 	bl	8004c9e <__mcmp>
 8004194:	2800      	cmp	r0, #0
 8004196:	f73f adb6 	bgt.w	8003d06 <_dtoa_r+0x48e>
 800419a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800419c:	9d02      	ldr	r5, [sp, #8]
 800419e:	ea6f 0b03 	mvn.w	fp, r3
 80041a2:	2300      	movs	r3, #0
 80041a4:	9303      	str	r3, [sp, #12]
 80041a6:	4631      	mov	r1, r6
 80041a8:	4620      	mov	r0, r4
 80041aa:	f000 fba3 	bl	80048f4 <_Bfree>
 80041ae:	2f00      	cmp	r7, #0
 80041b0:	f43f aea6 	beq.w	8003f00 <_dtoa_r+0x688>
 80041b4:	9b03      	ldr	r3, [sp, #12]
 80041b6:	b12b      	cbz	r3, 80041c4 <_dtoa_r+0x94c>
 80041b8:	42bb      	cmp	r3, r7
 80041ba:	d003      	beq.n	80041c4 <_dtoa_r+0x94c>
 80041bc:	4619      	mov	r1, r3
 80041be:	4620      	mov	r0, r4
 80041c0:	f000 fb98 	bl	80048f4 <_Bfree>
 80041c4:	4639      	mov	r1, r7
 80041c6:	4620      	mov	r0, r4
 80041c8:	f000 fb94 	bl	80048f4 <_Bfree>
 80041cc:	e698      	b.n	8003f00 <_dtoa_r+0x688>
 80041ce:	2600      	movs	r6, #0
 80041d0:	4637      	mov	r7, r6
 80041d2:	e7e2      	b.n	800419a <_dtoa_r+0x922>
 80041d4:	46bb      	mov	fp, r7
 80041d6:	4637      	mov	r7, r6
 80041d8:	e595      	b.n	8003d06 <_dtoa_r+0x48e>
 80041da:	bf00      	nop
 80041dc:	40240000 	.word	0x40240000
 80041e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041e2:	bb93      	cbnz	r3, 800424a <_dtoa_r+0x9d2>
 80041e4:	9b03      	ldr	r3, [sp, #12]
 80041e6:	9304      	str	r3, [sp, #16]
 80041e8:	9d02      	ldr	r5, [sp, #8]
 80041ea:	4631      	mov	r1, r6
 80041ec:	4650      	mov	r0, sl
 80041ee:	f7ff fab7 	bl	8003760 <quorem>
 80041f2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80041f6:	f805 9b01 	strb.w	r9, [r5], #1
 80041fa:	9b02      	ldr	r3, [sp, #8]
 80041fc:	9a04      	ldr	r2, [sp, #16]
 80041fe:	1aeb      	subs	r3, r5, r3
 8004200:	429a      	cmp	r2, r3
 8004202:	f300 80dc 	bgt.w	80043be <_dtoa_r+0xb46>
 8004206:	9b02      	ldr	r3, [sp, #8]
 8004208:	2a01      	cmp	r2, #1
 800420a:	bfac      	ite	ge
 800420c:	189b      	addge	r3, r3, r2
 800420e:	3301      	addlt	r3, #1
 8004210:	4698      	mov	r8, r3
 8004212:	2300      	movs	r3, #0
 8004214:	9303      	str	r3, [sp, #12]
 8004216:	4651      	mov	r1, sl
 8004218:	2201      	movs	r2, #1
 800421a:	4620      	mov	r0, r4
 800421c:	f000 fcee 	bl	8004bfc <__lshift>
 8004220:	4631      	mov	r1, r6
 8004222:	4682      	mov	sl, r0
 8004224:	f000 fd3b 	bl	8004c9e <__mcmp>
 8004228:	2800      	cmp	r0, #0
 800422a:	f300 808d 	bgt.w	8004348 <_dtoa_r+0xad0>
 800422e:	d103      	bne.n	8004238 <_dtoa_r+0x9c0>
 8004230:	f019 0f01 	tst.w	r9, #1
 8004234:	f040 8088 	bne.w	8004348 <_dtoa_r+0xad0>
 8004238:	4645      	mov	r5, r8
 800423a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800423e:	2b30      	cmp	r3, #48	; 0x30
 8004240:	f105 32ff 	add.w	r2, r5, #4294967295
 8004244:	d1af      	bne.n	80041a6 <_dtoa_r+0x92e>
 8004246:	4615      	mov	r5, r2
 8004248:	e7f7      	b.n	800423a <_dtoa_r+0x9c2>
 800424a:	9b03      	ldr	r3, [sp, #12]
 800424c:	9304      	str	r3, [sp, #16]
 800424e:	2d00      	cmp	r5, #0
 8004250:	dd05      	ble.n	800425e <_dtoa_r+0x9e6>
 8004252:	4639      	mov	r1, r7
 8004254:	462a      	mov	r2, r5
 8004256:	4620      	mov	r0, r4
 8004258:	f000 fcd0 	bl	8004bfc <__lshift>
 800425c:	4607      	mov	r7, r0
 800425e:	f1b8 0f00 	cmp.w	r8, #0
 8004262:	d04c      	beq.n	80042fe <_dtoa_r+0xa86>
 8004264:	6879      	ldr	r1, [r7, #4]
 8004266:	4620      	mov	r0, r4
 8004268:	f000 fb10 	bl	800488c <_Balloc>
 800426c:	693a      	ldr	r2, [r7, #16]
 800426e:	3202      	adds	r2, #2
 8004270:	4605      	mov	r5, r0
 8004272:	0092      	lsls	r2, r2, #2
 8004274:	f107 010c 	add.w	r1, r7, #12
 8004278:	300c      	adds	r0, #12
 800427a:	f000 faef 	bl	800485c <memcpy>
 800427e:	2201      	movs	r2, #1
 8004280:	4629      	mov	r1, r5
 8004282:	4620      	mov	r0, r4
 8004284:	f000 fcba 	bl	8004bfc <__lshift>
 8004288:	9b00      	ldr	r3, [sp, #0]
 800428a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800428e:	9703      	str	r7, [sp, #12]
 8004290:	f003 0301 	and.w	r3, r3, #1
 8004294:	4607      	mov	r7, r0
 8004296:	9305      	str	r3, [sp, #20]
 8004298:	4631      	mov	r1, r6
 800429a:	4650      	mov	r0, sl
 800429c:	f7ff fa60 	bl	8003760 <quorem>
 80042a0:	9903      	ldr	r1, [sp, #12]
 80042a2:	4605      	mov	r5, r0
 80042a4:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80042a8:	4650      	mov	r0, sl
 80042aa:	f000 fcf8 	bl	8004c9e <__mcmp>
 80042ae:	463a      	mov	r2, r7
 80042b0:	9000      	str	r0, [sp, #0]
 80042b2:	4631      	mov	r1, r6
 80042b4:	4620      	mov	r0, r4
 80042b6:	f000 fd0c 	bl	8004cd2 <__mdiff>
 80042ba:	68c3      	ldr	r3, [r0, #12]
 80042bc:	4602      	mov	r2, r0
 80042be:	bb03      	cbnz	r3, 8004302 <_dtoa_r+0xa8a>
 80042c0:	4601      	mov	r1, r0
 80042c2:	9006      	str	r0, [sp, #24]
 80042c4:	4650      	mov	r0, sl
 80042c6:	f000 fcea 	bl	8004c9e <__mcmp>
 80042ca:	9a06      	ldr	r2, [sp, #24]
 80042cc:	4603      	mov	r3, r0
 80042ce:	4611      	mov	r1, r2
 80042d0:	4620      	mov	r0, r4
 80042d2:	9306      	str	r3, [sp, #24]
 80042d4:	f000 fb0e 	bl	80048f4 <_Bfree>
 80042d8:	9b06      	ldr	r3, [sp, #24]
 80042da:	b9a3      	cbnz	r3, 8004306 <_dtoa_r+0xa8e>
 80042dc:	9a07      	ldr	r2, [sp, #28]
 80042de:	b992      	cbnz	r2, 8004306 <_dtoa_r+0xa8e>
 80042e0:	9a05      	ldr	r2, [sp, #20]
 80042e2:	b982      	cbnz	r2, 8004306 <_dtoa_r+0xa8e>
 80042e4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80042e8:	d029      	beq.n	800433e <_dtoa_r+0xac6>
 80042ea:	9b00      	ldr	r3, [sp, #0]
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	dd01      	ble.n	80042f4 <_dtoa_r+0xa7c>
 80042f0:	f105 0931 	add.w	r9, r5, #49	; 0x31
 80042f4:	f108 0501 	add.w	r5, r8, #1
 80042f8:	f888 9000 	strb.w	r9, [r8]
 80042fc:	e753      	b.n	80041a6 <_dtoa_r+0x92e>
 80042fe:	4638      	mov	r0, r7
 8004300:	e7c2      	b.n	8004288 <_dtoa_r+0xa10>
 8004302:	2301      	movs	r3, #1
 8004304:	e7e3      	b.n	80042ce <_dtoa_r+0xa56>
 8004306:	9a00      	ldr	r2, [sp, #0]
 8004308:	2a00      	cmp	r2, #0
 800430a:	db04      	blt.n	8004316 <_dtoa_r+0xa9e>
 800430c:	d125      	bne.n	800435a <_dtoa_r+0xae2>
 800430e:	9a07      	ldr	r2, [sp, #28]
 8004310:	bb1a      	cbnz	r2, 800435a <_dtoa_r+0xae2>
 8004312:	9a05      	ldr	r2, [sp, #20]
 8004314:	bb0a      	cbnz	r2, 800435a <_dtoa_r+0xae2>
 8004316:	2b00      	cmp	r3, #0
 8004318:	ddec      	ble.n	80042f4 <_dtoa_r+0xa7c>
 800431a:	4651      	mov	r1, sl
 800431c:	2201      	movs	r2, #1
 800431e:	4620      	mov	r0, r4
 8004320:	f000 fc6c 	bl	8004bfc <__lshift>
 8004324:	4631      	mov	r1, r6
 8004326:	4682      	mov	sl, r0
 8004328:	f000 fcb9 	bl	8004c9e <__mcmp>
 800432c:	2800      	cmp	r0, #0
 800432e:	dc03      	bgt.n	8004338 <_dtoa_r+0xac0>
 8004330:	d1e0      	bne.n	80042f4 <_dtoa_r+0xa7c>
 8004332:	f019 0f01 	tst.w	r9, #1
 8004336:	d0dd      	beq.n	80042f4 <_dtoa_r+0xa7c>
 8004338:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800433c:	d1d8      	bne.n	80042f0 <_dtoa_r+0xa78>
 800433e:	2339      	movs	r3, #57	; 0x39
 8004340:	f888 3000 	strb.w	r3, [r8]
 8004344:	f108 0801 	add.w	r8, r8, #1
 8004348:	4645      	mov	r5, r8
 800434a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800434e:	2b39      	cmp	r3, #57	; 0x39
 8004350:	f105 32ff 	add.w	r2, r5, #4294967295
 8004354:	d03b      	beq.n	80043ce <_dtoa_r+0xb56>
 8004356:	3301      	adds	r3, #1
 8004358:	e040      	b.n	80043dc <_dtoa_r+0xb64>
 800435a:	2b00      	cmp	r3, #0
 800435c:	f108 0501 	add.w	r5, r8, #1
 8004360:	dd05      	ble.n	800436e <_dtoa_r+0xaf6>
 8004362:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8004366:	d0ea      	beq.n	800433e <_dtoa_r+0xac6>
 8004368:	f109 0901 	add.w	r9, r9, #1
 800436c:	e7c4      	b.n	80042f8 <_dtoa_r+0xa80>
 800436e:	9b02      	ldr	r3, [sp, #8]
 8004370:	9a04      	ldr	r2, [sp, #16]
 8004372:	f805 9c01 	strb.w	r9, [r5, #-1]
 8004376:	1aeb      	subs	r3, r5, r3
 8004378:	4293      	cmp	r3, r2
 800437a:	46a8      	mov	r8, r5
 800437c:	f43f af4b 	beq.w	8004216 <_dtoa_r+0x99e>
 8004380:	4651      	mov	r1, sl
 8004382:	2300      	movs	r3, #0
 8004384:	220a      	movs	r2, #10
 8004386:	4620      	mov	r0, r4
 8004388:	f000 facb 	bl	8004922 <__multadd>
 800438c:	9b03      	ldr	r3, [sp, #12]
 800438e:	9903      	ldr	r1, [sp, #12]
 8004390:	42bb      	cmp	r3, r7
 8004392:	4682      	mov	sl, r0
 8004394:	f04f 0300 	mov.w	r3, #0
 8004398:	f04f 020a 	mov.w	r2, #10
 800439c:	4620      	mov	r0, r4
 800439e:	d104      	bne.n	80043aa <_dtoa_r+0xb32>
 80043a0:	f000 fabf 	bl	8004922 <__multadd>
 80043a4:	9003      	str	r0, [sp, #12]
 80043a6:	4607      	mov	r7, r0
 80043a8:	e776      	b.n	8004298 <_dtoa_r+0xa20>
 80043aa:	f000 faba 	bl	8004922 <__multadd>
 80043ae:	2300      	movs	r3, #0
 80043b0:	9003      	str	r0, [sp, #12]
 80043b2:	220a      	movs	r2, #10
 80043b4:	4639      	mov	r1, r7
 80043b6:	4620      	mov	r0, r4
 80043b8:	f000 fab3 	bl	8004922 <__multadd>
 80043bc:	e7f3      	b.n	80043a6 <_dtoa_r+0xb2e>
 80043be:	4651      	mov	r1, sl
 80043c0:	2300      	movs	r3, #0
 80043c2:	220a      	movs	r2, #10
 80043c4:	4620      	mov	r0, r4
 80043c6:	f000 faac 	bl	8004922 <__multadd>
 80043ca:	4682      	mov	sl, r0
 80043cc:	e70d      	b.n	80041ea <_dtoa_r+0x972>
 80043ce:	9b02      	ldr	r3, [sp, #8]
 80043d0:	4293      	cmp	r3, r2
 80043d2:	d105      	bne.n	80043e0 <_dtoa_r+0xb68>
 80043d4:	9a02      	ldr	r2, [sp, #8]
 80043d6:	f10b 0b01 	add.w	fp, fp, #1
 80043da:	2331      	movs	r3, #49	; 0x31
 80043dc:	7013      	strb	r3, [r2, #0]
 80043de:	e6e2      	b.n	80041a6 <_dtoa_r+0x92e>
 80043e0:	4615      	mov	r5, r2
 80043e2:	e7b2      	b.n	800434a <_dtoa_r+0xad2>
 80043e4:	4b09      	ldr	r3, [pc, #36]	; (800440c <_dtoa_r+0xb94>)
 80043e6:	f7ff baae 	b.w	8003946 <_dtoa_r+0xce>
 80043ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80043ec:	2b00      	cmp	r3, #0
 80043ee:	f47f aa88 	bne.w	8003902 <_dtoa_r+0x8a>
 80043f2:	4b07      	ldr	r3, [pc, #28]	; (8004410 <_dtoa_r+0xb98>)
 80043f4:	f7ff baa7 	b.w	8003946 <_dtoa_r+0xce>
 80043f8:	9b04      	ldr	r3, [sp, #16]
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	f73f aef4 	bgt.w	80041e8 <_dtoa_r+0x970>
 8004400:	9b07      	ldr	r3, [sp, #28]
 8004402:	2b02      	cmp	r3, #2
 8004404:	f77f aef0 	ble.w	80041e8 <_dtoa_r+0x970>
 8004408:	e6b8      	b.n	800417c <_dtoa_r+0x904>
 800440a:	bf00      	nop
 800440c:	080055c4 	.word	0x080055c4
 8004410:	080055e6 	.word	0x080055e6

08004414 <_localeconv_r>:
 8004414:	4b04      	ldr	r3, [pc, #16]	; (8004428 <_localeconv_r+0x14>)
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	6a18      	ldr	r0, [r3, #32]
 800441a:	4b04      	ldr	r3, [pc, #16]	; (800442c <_localeconv_r+0x18>)
 800441c:	2800      	cmp	r0, #0
 800441e:	bf08      	it	eq
 8004420:	4618      	moveq	r0, r3
 8004422:	30f0      	adds	r0, #240	; 0xf0
 8004424:	4770      	bx	lr
 8004426:	bf00      	nop
 8004428:	20000080 	.word	0x20000080
 800442c:	20000584 	.word	0x20000584

08004430 <malloc>:
 8004430:	4b02      	ldr	r3, [pc, #8]	; (800443c <malloc+0xc>)
 8004432:	4601      	mov	r1, r0
 8004434:	6818      	ldr	r0, [r3, #0]
 8004436:	f000 b803 	b.w	8004440 <_malloc_r>
 800443a:	bf00      	nop
 800443c:	20000080 	.word	0x20000080

08004440 <_malloc_r>:
 8004440:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004444:	f101 040b 	add.w	r4, r1, #11
 8004448:	2c16      	cmp	r4, #22
 800444a:	4681      	mov	r9, r0
 800444c:	d907      	bls.n	800445e <_malloc_r+0x1e>
 800444e:	f034 0407 	bics.w	r4, r4, #7
 8004452:	d505      	bpl.n	8004460 <_malloc_r+0x20>
 8004454:	230c      	movs	r3, #12
 8004456:	f8c9 3000 	str.w	r3, [r9]
 800445a:	2600      	movs	r6, #0
 800445c:	e131      	b.n	80046c2 <_malloc_r+0x282>
 800445e:	2410      	movs	r4, #16
 8004460:	428c      	cmp	r4, r1
 8004462:	d3f7      	bcc.n	8004454 <_malloc_r+0x14>
 8004464:	4648      	mov	r0, r9
 8004466:	f000 fa05 	bl	8004874 <__malloc_lock>
 800446a:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 800446e:	4d9c      	ldr	r5, [pc, #624]	; (80046e0 <_malloc_r+0x2a0>)
 8004470:	d236      	bcs.n	80044e0 <_malloc_r+0xa0>
 8004472:	f104 0208 	add.w	r2, r4, #8
 8004476:	442a      	add	r2, r5
 8004478:	f1a2 0108 	sub.w	r1, r2, #8
 800447c:	6856      	ldr	r6, [r2, #4]
 800447e:	428e      	cmp	r6, r1
 8004480:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 8004484:	d102      	bne.n	800448c <_malloc_r+0x4c>
 8004486:	68d6      	ldr	r6, [r2, #12]
 8004488:	42b2      	cmp	r2, r6
 800448a:	d010      	beq.n	80044ae <_malloc_r+0x6e>
 800448c:	6873      	ldr	r3, [r6, #4]
 800448e:	68f2      	ldr	r2, [r6, #12]
 8004490:	68b1      	ldr	r1, [r6, #8]
 8004492:	f023 0303 	bic.w	r3, r3, #3
 8004496:	60ca      	str	r2, [r1, #12]
 8004498:	4433      	add	r3, r6
 800449a:	6091      	str	r1, [r2, #8]
 800449c:	685a      	ldr	r2, [r3, #4]
 800449e:	f042 0201 	orr.w	r2, r2, #1
 80044a2:	605a      	str	r2, [r3, #4]
 80044a4:	4648      	mov	r0, r9
 80044a6:	f000 f9eb 	bl	8004880 <__malloc_unlock>
 80044aa:	3608      	adds	r6, #8
 80044ac:	e109      	b.n	80046c2 <_malloc_r+0x282>
 80044ae:	3302      	adds	r3, #2
 80044b0:	4a8c      	ldr	r2, [pc, #560]	; (80046e4 <_malloc_r+0x2a4>)
 80044b2:	692e      	ldr	r6, [r5, #16]
 80044b4:	4296      	cmp	r6, r2
 80044b6:	4611      	mov	r1, r2
 80044b8:	d06d      	beq.n	8004596 <_malloc_r+0x156>
 80044ba:	6870      	ldr	r0, [r6, #4]
 80044bc:	f020 0003 	bic.w	r0, r0, #3
 80044c0:	1b07      	subs	r7, r0, r4
 80044c2:	2f0f      	cmp	r7, #15
 80044c4:	dd47      	ble.n	8004556 <_malloc_r+0x116>
 80044c6:	1933      	adds	r3, r6, r4
 80044c8:	f044 0401 	orr.w	r4, r4, #1
 80044cc:	6074      	str	r4, [r6, #4]
 80044ce:	616b      	str	r3, [r5, #20]
 80044d0:	612b      	str	r3, [r5, #16]
 80044d2:	60da      	str	r2, [r3, #12]
 80044d4:	609a      	str	r2, [r3, #8]
 80044d6:	f047 0201 	orr.w	r2, r7, #1
 80044da:	605a      	str	r2, [r3, #4]
 80044dc:	5037      	str	r7, [r6, r0]
 80044de:	e7e1      	b.n	80044a4 <_malloc_r+0x64>
 80044e0:	0a63      	lsrs	r3, r4, #9
 80044e2:	d02a      	beq.n	800453a <_malloc_r+0xfa>
 80044e4:	2b04      	cmp	r3, #4
 80044e6:	d812      	bhi.n	800450e <_malloc_r+0xce>
 80044e8:	09a3      	lsrs	r3, r4, #6
 80044ea:	3338      	adds	r3, #56	; 0x38
 80044ec:	1c5a      	adds	r2, r3, #1
 80044ee:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 80044f2:	f1a2 0008 	sub.w	r0, r2, #8
 80044f6:	6856      	ldr	r6, [r2, #4]
 80044f8:	4286      	cmp	r6, r0
 80044fa:	d006      	beq.n	800450a <_malloc_r+0xca>
 80044fc:	6872      	ldr	r2, [r6, #4]
 80044fe:	f022 0203 	bic.w	r2, r2, #3
 8004502:	1b11      	subs	r1, r2, r4
 8004504:	290f      	cmp	r1, #15
 8004506:	dd1c      	ble.n	8004542 <_malloc_r+0x102>
 8004508:	3b01      	subs	r3, #1
 800450a:	3301      	adds	r3, #1
 800450c:	e7d0      	b.n	80044b0 <_malloc_r+0x70>
 800450e:	2b14      	cmp	r3, #20
 8004510:	d801      	bhi.n	8004516 <_malloc_r+0xd6>
 8004512:	335b      	adds	r3, #91	; 0x5b
 8004514:	e7ea      	b.n	80044ec <_malloc_r+0xac>
 8004516:	2b54      	cmp	r3, #84	; 0x54
 8004518:	d802      	bhi.n	8004520 <_malloc_r+0xe0>
 800451a:	0b23      	lsrs	r3, r4, #12
 800451c:	336e      	adds	r3, #110	; 0x6e
 800451e:	e7e5      	b.n	80044ec <_malloc_r+0xac>
 8004520:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8004524:	d802      	bhi.n	800452c <_malloc_r+0xec>
 8004526:	0be3      	lsrs	r3, r4, #15
 8004528:	3377      	adds	r3, #119	; 0x77
 800452a:	e7df      	b.n	80044ec <_malloc_r+0xac>
 800452c:	f240 5254 	movw	r2, #1364	; 0x554
 8004530:	4293      	cmp	r3, r2
 8004532:	d804      	bhi.n	800453e <_malloc_r+0xfe>
 8004534:	0ca3      	lsrs	r3, r4, #18
 8004536:	337c      	adds	r3, #124	; 0x7c
 8004538:	e7d8      	b.n	80044ec <_malloc_r+0xac>
 800453a:	233f      	movs	r3, #63	; 0x3f
 800453c:	e7d6      	b.n	80044ec <_malloc_r+0xac>
 800453e:	237e      	movs	r3, #126	; 0x7e
 8004540:	e7d4      	b.n	80044ec <_malloc_r+0xac>
 8004542:	2900      	cmp	r1, #0
 8004544:	68f1      	ldr	r1, [r6, #12]
 8004546:	db04      	blt.n	8004552 <_malloc_r+0x112>
 8004548:	68b3      	ldr	r3, [r6, #8]
 800454a:	60d9      	str	r1, [r3, #12]
 800454c:	608b      	str	r3, [r1, #8]
 800454e:	18b3      	adds	r3, r6, r2
 8004550:	e7a4      	b.n	800449c <_malloc_r+0x5c>
 8004552:	460e      	mov	r6, r1
 8004554:	e7d0      	b.n	80044f8 <_malloc_r+0xb8>
 8004556:	2f00      	cmp	r7, #0
 8004558:	616a      	str	r2, [r5, #20]
 800455a:	612a      	str	r2, [r5, #16]
 800455c:	db05      	blt.n	800456a <_malloc_r+0x12a>
 800455e:	4430      	add	r0, r6
 8004560:	6843      	ldr	r3, [r0, #4]
 8004562:	f043 0301 	orr.w	r3, r3, #1
 8004566:	6043      	str	r3, [r0, #4]
 8004568:	e79c      	b.n	80044a4 <_malloc_r+0x64>
 800456a:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 800456e:	d244      	bcs.n	80045fa <_malloc_r+0x1ba>
 8004570:	08c0      	lsrs	r0, r0, #3
 8004572:	1087      	asrs	r7, r0, #2
 8004574:	2201      	movs	r2, #1
 8004576:	fa02 f707 	lsl.w	r7, r2, r7
 800457a:	686a      	ldr	r2, [r5, #4]
 800457c:	3001      	adds	r0, #1
 800457e:	433a      	orrs	r2, r7
 8004580:	606a      	str	r2, [r5, #4]
 8004582:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8004586:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 800458a:	60b7      	str	r7, [r6, #8]
 800458c:	3a08      	subs	r2, #8
 800458e:	60f2      	str	r2, [r6, #12]
 8004590:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 8004594:	60fe      	str	r6, [r7, #12]
 8004596:	2001      	movs	r0, #1
 8004598:	109a      	asrs	r2, r3, #2
 800459a:	fa00 f202 	lsl.w	r2, r0, r2
 800459e:	6868      	ldr	r0, [r5, #4]
 80045a0:	4282      	cmp	r2, r0
 80045a2:	f200 80a1 	bhi.w	80046e8 <_malloc_r+0x2a8>
 80045a6:	4202      	tst	r2, r0
 80045a8:	d106      	bne.n	80045b8 <_malloc_r+0x178>
 80045aa:	f023 0303 	bic.w	r3, r3, #3
 80045ae:	0052      	lsls	r2, r2, #1
 80045b0:	4202      	tst	r2, r0
 80045b2:	f103 0304 	add.w	r3, r3, #4
 80045b6:	d0fa      	beq.n	80045ae <_malloc_r+0x16e>
 80045b8:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 80045bc:	46e0      	mov	r8, ip
 80045be:	469e      	mov	lr, r3
 80045c0:	f8d8 600c 	ldr.w	r6, [r8, #12]
 80045c4:	4546      	cmp	r6, r8
 80045c6:	d153      	bne.n	8004670 <_malloc_r+0x230>
 80045c8:	f10e 0e01 	add.w	lr, lr, #1
 80045cc:	f01e 0f03 	tst.w	lr, #3
 80045d0:	f108 0808 	add.w	r8, r8, #8
 80045d4:	d1f4      	bne.n	80045c0 <_malloc_r+0x180>
 80045d6:	0798      	lsls	r0, r3, #30
 80045d8:	d179      	bne.n	80046ce <_malloc_r+0x28e>
 80045da:	686b      	ldr	r3, [r5, #4]
 80045dc:	ea23 0302 	bic.w	r3, r3, r2
 80045e0:	606b      	str	r3, [r5, #4]
 80045e2:	6868      	ldr	r0, [r5, #4]
 80045e4:	0052      	lsls	r2, r2, #1
 80045e6:	4282      	cmp	r2, r0
 80045e8:	d87e      	bhi.n	80046e8 <_malloc_r+0x2a8>
 80045ea:	2a00      	cmp	r2, #0
 80045ec:	d07c      	beq.n	80046e8 <_malloc_r+0x2a8>
 80045ee:	4673      	mov	r3, lr
 80045f0:	4202      	tst	r2, r0
 80045f2:	d1e1      	bne.n	80045b8 <_malloc_r+0x178>
 80045f4:	3304      	adds	r3, #4
 80045f6:	0052      	lsls	r2, r2, #1
 80045f8:	e7fa      	b.n	80045f0 <_malloc_r+0x1b0>
 80045fa:	0a42      	lsrs	r2, r0, #9
 80045fc:	2a04      	cmp	r2, #4
 80045fe:	d815      	bhi.n	800462c <_malloc_r+0x1ec>
 8004600:	0982      	lsrs	r2, r0, #6
 8004602:	3238      	adds	r2, #56	; 0x38
 8004604:	1c57      	adds	r7, r2, #1
 8004606:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 800460a:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 800460e:	45be      	cmp	lr, r7
 8004610:	d126      	bne.n	8004660 <_malloc_r+0x220>
 8004612:	2001      	movs	r0, #1
 8004614:	1092      	asrs	r2, r2, #2
 8004616:	fa00 f202 	lsl.w	r2, r0, r2
 800461a:	6868      	ldr	r0, [r5, #4]
 800461c:	4310      	orrs	r0, r2
 800461e:	6068      	str	r0, [r5, #4]
 8004620:	f8c6 e00c 	str.w	lr, [r6, #12]
 8004624:	60b7      	str	r7, [r6, #8]
 8004626:	f8ce 6008 	str.w	r6, [lr, #8]
 800462a:	e7b3      	b.n	8004594 <_malloc_r+0x154>
 800462c:	2a14      	cmp	r2, #20
 800462e:	d801      	bhi.n	8004634 <_malloc_r+0x1f4>
 8004630:	325b      	adds	r2, #91	; 0x5b
 8004632:	e7e7      	b.n	8004604 <_malloc_r+0x1c4>
 8004634:	2a54      	cmp	r2, #84	; 0x54
 8004636:	d802      	bhi.n	800463e <_malloc_r+0x1fe>
 8004638:	0b02      	lsrs	r2, r0, #12
 800463a:	326e      	adds	r2, #110	; 0x6e
 800463c:	e7e2      	b.n	8004604 <_malloc_r+0x1c4>
 800463e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8004642:	d802      	bhi.n	800464a <_malloc_r+0x20a>
 8004644:	0bc2      	lsrs	r2, r0, #15
 8004646:	3277      	adds	r2, #119	; 0x77
 8004648:	e7dc      	b.n	8004604 <_malloc_r+0x1c4>
 800464a:	f240 5754 	movw	r7, #1364	; 0x554
 800464e:	42ba      	cmp	r2, r7
 8004650:	bf9a      	itte	ls
 8004652:	0c82      	lsrls	r2, r0, #18
 8004654:	327c      	addls	r2, #124	; 0x7c
 8004656:	227e      	movhi	r2, #126	; 0x7e
 8004658:	e7d4      	b.n	8004604 <_malloc_r+0x1c4>
 800465a:	68bf      	ldr	r7, [r7, #8]
 800465c:	45be      	cmp	lr, r7
 800465e:	d004      	beq.n	800466a <_malloc_r+0x22a>
 8004660:	687a      	ldr	r2, [r7, #4]
 8004662:	f022 0203 	bic.w	r2, r2, #3
 8004666:	4290      	cmp	r0, r2
 8004668:	d3f7      	bcc.n	800465a <_malloc_r+0x21a>
 800466a:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 800466e:	e7d7      	b.n	8004620 <_malloc_r+0x1e0>
 8004670:	6870      	ldr	r0, [r6, #4]
 8004672:	68f7      	ldr	r7, [r6, #12]
 8004674:	f020 0003 	bic.w	r0, r0, #3
 8004678:	eba0 0a04 	sub.w	sl, r0, r4
 800467c:	f1ba 0f0f 	cmp.w	sl, #15
 8004680:	dd10      	ble.n	80046a4 <_malloc_r+0x264>
 8004682:	68b2      	ldr	r2, [r6, #8]
 8004684:	1933      	adds	r3, r6, r4
 8004686:	f044 0401 	orr.w	r4, r4, #1
 800468a:	6074      	str	r4, [r6, #4]
 800468c:	60d7      	str	r7, [r2, #12]
 800468e:	60ba      	str	r2, [r7, #8]
 8004690:	f04a 0201 	orr.w	r2, sl, #1
 8004694:	616b      	str	r3, [r5, #20]
 8004696:	612b      	str	r3, [r5, #16]
 8004698:	60d9      	str	r1, [r3, #12]
 800469a:	6099      	str	r1, [r3, #8]
 800469c:	605a      	str	r2, [r3, #4]
 800469e:	f846 a000 	str.w	sl, [r6, r0]
 80046a2:	e6ff      	b.n	80044a4 <_malloc_r+0x64>
 80046a4:	f1ba 0f00 	cmp.w	sl, #0
 80046a8:	db0f      	blt.n	80046ca <_malloc_r+0x28a>
 80046aa:	4430      	add	r0, r6
 80046ac:	6843      	ldr	r3, [r0, #4]
 80046ae:	f043 0301 	orr.w	r3, r3, #1
 80046b2:	6043      	str	r3, [r0, #4]
 80046b4:	f856 3f08 	ldr.w	r3, [r6, #8]!
 80046b8:	4648      	mov	r0, r9
 80046ba:	60df      	str	r7, [r3, #12]
 80046bc:	60bb      	str	r3, [r7, #8]
 80046be:	f000 f8df 	bl	8004880 <__malloc_unlock>
 80046c2:	4630      	mov	r0, r6
 80046c4:	b003      	add	sp, #12
 80046c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80046ca:	463e      	mov	r6, r7
 80046cc:	e77a      	b.n	80045c4 <_malloc_r+0x184>
 80046ce:	f85c 0908 	ldr.w	r0, [ip], #-8
 80046d2:	4584      	cmp	ip, r0
 80046d4:	f103 33ff 	add.w	r3, r3, #4294967295
 80046d8:	f43f af7d 	beq.w	80045d6 <_malloc_r+0x196>
 80046dc:	e781      	b.n	80045e2 <_malloc_r+0x1a2>
 80046de:	bf00      	nop
 80046e0:	20000174 	.word	0x20000174
 80046e4:	2000017c 	.word	0x2000017c
 80046e8:	f8d5 b008 	ldr.w	fp, [r5, #8]
 80046ec:	f8db 6004 	ldr.w	r6, [fp, #4]
 80046f0:	f026 0603 	bic.w	r6, r6, #3
 80046f4:	42b4      	cmp	r4, r6
 80046f6:	d803      	bhi.n	8004700 <_malloc_r+0x2c0>
 80046f8:	1b33      	subs	r3, r6, r4
 80046fa:	2b0f      	cmp	r3, #15
 80046fc:	f300 8096 	bgt.w	800482c <_malloc_r+0x3ec>
 8004700:	4a4f      	ldr	r2, [pc, #316]	; (8004840 <_malloc_r+0x400>)
 8004702:	6817      	ldr	r7, [r2, #0]
 8004704:	4a4f      	ldr	r2, [pc, #316]	; (8004844 <_malloc_r+0x404>)
 8004706:	6811      	ldr	r1, [r2, #0]
 8004708:	3710      	adds	r7, #16
 800470a:	3101      	adds	r1, #1
 800470c:	eb0b 0306 	add.w	r3, fp, r6
 8004710:	4427      	add	r7, r4
 8004712:	d005      	beq.n	8004720 <_malloc_r+0x2e0>
 8004714:	494c      	ldr	r1, [pc, #304]	; (8004848 <_malloc_r+0x408>)
 8004716:	3901      	subs	r1, #1
 8004718:	440f      	add	r7, r1
 800471a:	3101      	adds	r1, #1
 800471c:	4249      	negs	r1, r1
 800471e:	400f      	ands	r7, r1
 8004720:	4639      	mov	r1, r7
 8004722:	4648      	mov	r0, r9
 8004724:	9201      	str	r2, [sp, #4]
 8004726:	9300      	str	r3, [sp, #0]
 8004728:	f000 fb80 	bl	8004e2c <_sbrk_r>
 800472c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8004730:	4680      	mov	r8, r0
 8004732:	d056      	beq.n	80047e2 <_malloc_r+0x3a2>
 8004734:	9b00      	ldr	r3, [sp, #0]
 8004736:	9a01      	ldr	r2, [sp, #4]
 8004738:	4283      	cmp	r3, r0
 800473a:	d901      	bls.n	8004740 <_malloc_r+0x300>
 800473c:	45ab      	cmp	fp, r5
 800473e:	d150      	bne.n	80047e2 <_malloc_r+0x3a2>
 8004740:	4842      	ldr	r0, [pc, #264]	; (800484c <_malloc_r+0x40c>)
 8004742:	6801      	ldr	r1, [r0, #0]
 8004744:	4543      	cmp	r3, r8
 8004746:	eb07 0e01 	add.w	lr, r7, r1
 800474a:	f8c0 e000 	str.w	lr, [r0]
 800474e:	4940      	ldr	r1, [pc, #256]	; (8004850 <_malloc_r+0x410>)
 8004750:	4682      	mov	sl, r0
 8004752:	d113      	bne.n	800477c <_malloc_r+0x33c>
 8004754:	420b      	tst	r3, r1
 8004756:	d111      	bne.n	800477c <_malloc_r+0x33c>
 8004758:	68ab      	ldr	r3, [r5, #8]
 800475a:	443e      	add	r6, r7
 800475c:	f046 0601 	orr.w	r6, r6, #1
 8004760:	605e      	str	r6, [r3, #4]
 8004762:	4a3c      	ldr	r2, [pc, #240]	; (8004854 <_malloc_r+0x414>)
 8004764:	f8da 3000 	ldr.w	r3, [sl]
 8004768:	6811      	ldr	r1, [r2, #0]
 800476a:	428b      	cmp	r3, r1
 800476c:	bf88      	it	hi
 800476e:	6013      	strhi	r3, [r2, #0]
 8004770:	4a39      	ldr	r2, [pc, #228]	; (8004858 <_malloc_r+0x418>)
 8004772:	6811      	ldr	r1, [r2, #0]
 8004774:	428b      	cmp	r3, r1
 8004776:	bf88      	it	hi
 8004778:	6013      	strhi	r3, [r2, #0]
 800477a:	e032      	b.n	80047e2 <_malloc_r+0x3a2>
 800477c:	6810      	ldr	r0, [r2, #0]
 800477e:	3001      	adds	r0, #1
 8004780:	bf1b      	ittet	ne
 8004782:	eba8 0303 	subne.w	r3, r8, r3
 8004786:	4473      	addne	r3, lr
 8004788:	f8c2 8000 	streq.w	r8, [r2]
 800478c:	f8ca 3000 	strne.w	r3, [sl]
 8004790:	f018 0007 	ands.w	r0, r8, #7
 8004794:	bf1c      	itt	ne
 8004796:	f1c0 0008 	rsbne	r0, r0, #8
 800479a:	4480      	addne	r8, r0
 800479c:	4b2a      	ldr	r3, [pc, #168]	; (8004848 <_malloc_r+0x408>)
 800479e:	4447      	add	r7, r8
 80047a0:	4418      	add	r0, r3
 80047a2:	400f      	ands	r7, r1
 80047a4:	1bc7      	subs	r7, r0, r7
 80047a6:	4639      	mov	r1, r7
 80047a8:	4648      	mov	r0, r9
 80047aa:	f000 fb3f 	bl	8004e2c <_sbrk_r>
 80047ae:	1c43      	adds	r3, r0, #1
 80047b0:	bf08      	it	eq
 80047b2:	4640      	moveq	r0, r8
 80047b4:	f8da 3000 	ldr.w	r3, [sl]
 80047b8:	f8c5 8008 	str.w	r8, [r5, #8]
 80047bc:	bf08      	it	eq
 80047be:	2700      	moveq	r7, #0
 80047c0:	eba0 0008 	sub.w	r0, r0, r8
 80047c4:	443b      	add	r3, r7
 80047c6:	4407      	add	r7, r0
 80047c8:	f047 0701 	orr.w	r7, r7, #1
 80047cc:	45ab      	cmp	fp, r5
 80047ce:	f8ca 3000 	str.w	r3, [sl]
 80047d2:	f8c8 7004 	str.w	r7, [r8, #4]
 80047d6:	d0c4      	beq.n	8004762 <_malloc_r+0x322>
 80047d8:	2e0f      	cmp	r6, #15
 80047da:	d810      	bhi.n	80047fe <_malloc_r+0x3be>
 80047dc:	2301      	movs	r3, #1
 80047de:	f8c8 3004 	str.w	r3, [r8, #4]
 80047e2:	68ab      	ldr	r3, [r5, #8]
 80047e4:	685a      	ldr	r2, [r3, #4]
 80047e6:	f022 0203 	bic.w	r2, r2, #3
 80047ea:	4294      	cmp	r4, r2
 80047ec:	eba2 0304 	sub.w	r3, r2, r4
 80047f0:	d801      	bhi.n	80047f6 <_malloc_r+0x3b6>
 80047f2:	2b0f      	cmp	r3, #15
 80047f4:	dc1a      	bgt.n	800482c <_malloc_r+0x3ec>
 80047f6:	4648      	mov	r0, r9
 80047f8:	f000 f842 	bl	8004880 <__malloc_unlock>
 80047fc:	e62d      	b.n	800445a <_malloc_r+0x1a>
 80047fe:	f8db 3004 	ldr.w	r3, [fp, #4]
 8004802:	3e0c      	subs	r6, #12
 8004804:	f026 0607 	bic.w	r6, r6, #7
 8004808:	f003 0301 	and.w	r3, r3, #1
 800480c:	4333      	orrs	r3, r6
 800480e:	f8cb 3004 	str.w	r3, [fp, #4]
 8004812:	eb0b 0306 	add.w	r3, fp, r6
 8004816:	2205      	movs	r2, #5
 8004818:	2e0f      	cmp	r6, #15
 800481a:	605a      	str	r2, [r3, #4]
 800481c:	609a      	str	r2, [r3, #8]
 800481e:	d9a0      	bls.n	8004762 <_malloc_r+0x322>
 8004820:	f10b 0108 	add.w	r1, fp, #8
 8004824:	4648      	mov	r0, r9
 8004826:	f000 fc0f 	bl	8005048 <_free_r>
 800482a:	e79a      	b.n	8004762 <_malloc_r+0x322>
 800482c:	68ae      	ldr	r6, [r5, #8]
 800482e:	f044 0201 	orr.w	r2, r4, #1
 8004832:	4434      	add	r4, r6
 8004834:	f043 0301 	orr.w	r3, r3, #1
 8004838:	6072      	str	r2, [r6, #4]
 800483a:	60ac      	str	r4, [r5, #8]
 800483c:	6063      	str	r3, [r4, #4]
 800483e:	e631      	b.n	80044a4 <_malloc_r+0x64>
 8004840:	20000740 	.word	0x20000740
 8004844:	2000057c 	.word	0x2000057c
 8004848:	00000080 	.word	0x00000080
 800484c:	20000710 	.word	0x20000710
 8004850:	0000007f 	.word	0x0000007f
 8004854:	20000738 	.word	0x20000738
 8004858:	2000073c 	.word	0x2000073c

0800485c <memcpy>:
 800485c:	b510      	push	{r4, lr}
 800485e:	1e43      	subs	r3, r0, #1
 8004860:	440a      	add	r2, r1
 8004862:	4291      	cmp	r1, r2
 8004864:	d100      	bne.n	8004868 <memcpy+0xc>
 8004866:	bd10      	pop	{r4, pc}
 8004868:	f811 4b01 	ldrb.w	r4, [r1], #1
 800486c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004870:	e7f7      	b.n	8004862 <memcpy+0x6>
	...

08004874 <__malloc_lock>:
 8004874:	4801      	ldr	r0, [pc, #4]	; (800487c <__malloc_lock+0x8>)
 8004876:	f000 bca3 	b.w	80051c0 <__retarget_lock_acquire_recursive>
 800487a:	bf00      	nop
 800487c:	2000074c 	.word	0x2000074c

08004880 <__malloc_unlock>:
 8004880:	4801      	ldr	r0, [pc, #4]	; (8004888 <__malloc_unlock+0x8>)
 8004882:	f000 bc9e 	b.w	80051c2 <__retarget_lock_release_recursive>
 8004886:	bf00      	nop
 8004888:	2000074c 	.word	0x2000074c

0800488c <_Balloc>:
 800488c:	b570      	push	{r4, r5, r6, lr}
 800488e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8004890:	4604      	mov	r4, r0
 8004892:	460e      	mov	r6, r1
 8004894:	b93d      	cbnz	r5, 80048a6 <_Balloc+0x1a>
 8004896:	2010      	movs	r0, #16
 8004898:	f7ff fdca 	bl	8004430 <malloc>
 800489c:	6260      	str	r0, [r4, #36]	; 0x24
 800489e:	6045      	str	r5, [r0, #4]
 80048a0:	6085      	str	r5, [r0, #8]
 80048a2:	6005      	str	r5, [r0, #0]
 80048a4:	60c5      	str	r5, [r0, #12]
 80048a6:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80048a8:	68eb      	ldr	r3, [r5, #12]
 80048aa:	b183      	cbz	r3, 80048ce <_Balloc+0x42>
 80048ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80048ae:	68db      	ldr	r3, [r3, #12]
 80048b0:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80048b4:	b9b8      	cbnz	r0, 80048e6 <_Balloc+0x5a>
 80048b6:	2101      	movs	r1, #1
 80048b8:	fa01 f506 	lsl.w	r5, r1, r6
 80048bc:	1d6a      	adds	r2, r5, #5
 80048be:	0092      	lsls	r2, r2, #2
 80048c0:	4620      	mov	r0, r4
 80048c2:	f000 fb3d 	bl	8004f40 <_calloc_r>
 80048c6:	b160      	cbz	r0, 80048e2 <_Balloc+0x56>
 80048c8:	6046      	str	r6, [r0, #4]
 80048ca:	6085      	str	r5, [r0, #8]
 80048cc:	e00e      	b.n	80048ec <_Balloc+0x60>
 80048ce:	2221      	movs	r2, #33	; 0x21
 80048d0:	2104      	movs	r1, #4
 80048d2:	4620      	mov	r0, r4
 80048d4:	f000 fb34 	bl	8004f40 <_calloc_r>
 80048d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80048da:	60e8      	str	r0, [r5, #12]
 80048dc:	68db      	ldr	r3, [r3, #12]
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d1e4      	bne.n	80048ac <_Balloc+0x20>
 80048e2:	2000      	movs	r0, #0
 80048e4:	bd70      	pop	{r4, r5, r6, pc}
 80048e6:	6802      	ldr	r2, [r0, #0]
 80048e8:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 80048ec:	2300      	movs	r3, #0
 80048ee:	6103      	str	r3, [r0, #16]
 80048f0:	60c3      	str	r3, [r0, #12]
 80048f2:	bd70      	pop	{r4, r5, r6, pc}

080048f4 <_Bfree>:
 80048f4:	b570      	push	{r4, r5, r6, lr}
 80048f6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80048f8:	4606      	mov	r6, r0
 80048fa:	460d      	mov	r5, r1
 80048fc:	b93c      	cbnz	r4, 800490e <_Bfree+0x1a>
 80048fe:	2010      	movs	r0, #16
 8004900:	f7ff fd96 	bl	8004430 <malloc>
 8004904:	6270      	str	r0, [r6, #36]	; 0x24
 8004906:	6044      	str	r4, [r0, #4]
 8004908:	6084      	str	r4, [r0, #8]
 800490a:	6004      	str	r4, [r0, #0]
 800490c:	60c4      	str	r4, [r0, #12]
 800490e:	b13d      	cbz	r5, 8004920 <_Bfree+0x2c>
 8004910:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8004912:	686a      	ldr	r2, [r5, #4]
 8004914:	68db      	ldr	r3, [r3, #12]
 8004916:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800491a:	6029      	str	r1, [r5, #0]
 800491c:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8004920:	bd70      	pop	{r4, r5, r6, pc}

08004922 <__multadd>:
 8004922:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004926:	690d      	ldr	r5, [r1, #16]
 8004928:	461f      	mov	r7, r3
 800492a:	4606      	mov	r6, r0
 800492c:	460c      	mov	r4, r1
 800492e:	f101 0e14 	add.w	lr, r1, #20
 8004932:	2300      	movs	r3, #0
 8004934:	f8de 0000 	ldr.w	r0, [lr]
 8004938:	b281      	uxth	r1, r0
 800493a:	fb02 7101 	mla	r1, r2, r1, r7
 800493e:	0c0f      	lsrs	r7, r1, #16
 8004940:	0c00      	lsrs	r0, r0, #16
 8004942:	fb02 7000 	mla	r0, r2, r0, r7
 8004946:	b289      	uxth	r1, r1
 8004948:	3301      	adds	r3, #1
 800494a:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 800494e:	429d      	cmp	r5, r3
 8004950:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8004954:	f84e 1b04 	str.w	r1, [lr], #4
 8004958:	dcec      	bgt.n	8004934 <__multadd+0x12>
 800495a:	b1d7      	cbz	r7, 8004992 <__multadd+0x70>
 800495c:	68a3      	ldr	r3, [r4, #8]
 800495e:	429d      	cmp	r5, r3
 8004960:	db12      	blt.n	8004988 <__multadd+0x66>
 8004962:	6861      	ldr	r1, [r4, #4]
 8004964:	4630      	mov	r0, r6
 8004966:	3101      	adds	r1, #1
 8004968:	f7ff ff90 	bl	800488c <_Balloc>
 800496c:	6922      	ldr	r2, [r4, #16]
 800496e:	3202      	adds	r2, #2
 8004970:	f104 010c 	add.w	r1, r4, #12
 8004974:	4680      	mov	r8, r0
 8004976:	0092      	lsls	r2, r2, #2
 8004978:	300c      	adds	r0, #12
 800497a:	f7ff ff6f 	bl	800485c <memcpy>
 800497e:	4621      	mov	r1, r4
 8004980:	4630      	mov	r0, r6
 8004982:	f7ff ffb7 	bl	80048f4 <_Bfree>
 8004986:	4644      	mov	r4, r8
 8004988:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800498c:	3501      	adds	r5, #1
 800498e:	615f      	str	r7, [r3, #20]
 8004990:	6125      	str	r5, [r4, #16]
 8004992:	4620      	mov	r0, r4
 8004994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004998 <__hi0bits>:
 8004998:	0c02      	lsrs	r2, r0, #16
 800499a:	0412      	lsls	r2, r2, #16
 800499c:	4603      	mov	r3, r0
 800499e:	b9b2      	cbnz	r2, 80049ce <__hi0bits+0x36>
 80049a0:	0403      	lsls	r3, r0, #16
 80049a2:	2010      	movs	r0, #16
 80049a4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80049a8:	bf04      	itt	eq
 80049aa:	021b      	lsleq	r3, r3, #8
 80049ac:	3008      	addeq	r0, #8
 80049ae:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80049b2:	bf04      	itt	eq
 80049b4:	011b      	lsleq	r3, r3, #4
 80049b6:	3004      	addeq	r0, #4
 80049b8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80049bc:	bf04      	itt	eq
 80049be:	009b      	lsleq	r3, r3, #2
 80049c0:	3002      	addeq	r0, #2
 80049c2:	2b00      	cmp	r3, #0
 80049c4:	db06      	blt.n	80049d4 <__hi0bits+0x3c>
 80049c6:	005b      	lsls	r3, r3, #1
 80049c8:	d503      	bpl.n	80049d2 <__hi0bits+0x3a>
 80049ca:	3001      	adds	r0, #1
 80049cc:	4770      	bx	lr
 80049ce:	2000      	movs	r0, #0
 80049d0:	e7e8      	b.n	80049a4 <__hi0bits+0xc>
 80049d2:	2020      	movs	r0, #32
 80049d4:	4770      	bx	lr

080049d6 <__lo0bits>:
 80049d6:	6803      	ldr	r3, [r0, #0]
 80049d8:	f013 0207 	ands.w	r2, r3, #7
 80049dc:	4601      	mov	r1, r0
 80049de:	d00b      	beq.n	80049f8 <__lo0bits+0x22>
 80049e0:	07da      	lsls	r2, r3, #31
 80049e2:	d423      	bmi.n	8004a2c <__lo0bits+0x56>
 80049e4:	0798      	lsls	r0, r3, #30
 80049e6:	bf49      	itett	mi
 80049e8:	085b      	lsrmi	r3, r3, #1
 80049ea:	089b      	lsrpl	r3, r3, #2
 80049ec:	2001      	movmi	r0, #1
 80049ee:	600b      	strmi	r3, [r1, #0]
 80049f0:	bf5c      	itt	pl
 80049f2:	600b      	strpl	r3, [r1, #0]
 80049f4:	2002      	movpl	r0, #2
 80049f6:	4770      	bx	lr
 80049f8:	b298      	uxth	r0, r3
 80049fa:	b9a8      	cbnz	r0, 8004a28 <__lo0bits+0x52>
 80049fc:	0c1b      	lsrs	r3, r3, #16
 80049fe:	2010      	movs	r0, #16
 8004a00:	f013 0fff 	tst.w	r3, #255	; 0xff
 8004a04:	bf04      	itt	eq
 8004a06:	0a1b      	lsreq	r3, r3, #8
 8004a08:	3008      	addeq	r0, #8
 8004a0a:	071a      	lsls	r2, r3, #28
 8004a0c:	bf04      	itt	eq
 8004a0e:	091b      	lsreq	r3, r3, #4
 8004a10:	3004      	addeq	r0, #4
 8004a12:	079a      	lsls	r2, r3, #30
 8004a14:	bf04      	itt	eq
 8004a16:	089b      	lsreq	r3, r3, #2
 8004a18:	3002      	addeq	r0, #2
 8004a1a:	07da      	lsls	r2, r3, #31
 8004a1c:	d402      	bmi.n	8004a24 <__lo0bits+0x4e>
 8004a1e:	085b      	lsrs	r3, r3, #1
 8004a20:	d006      	beq.n	8004a30 <__lo0bits+0x5a>
 8004a22:	3001      	adds	r0, #1
 8004a24:	600b      	str	r3, [r1, #0]
 8004a26:	4770      	bx	lr
 8004a28:	4610      	mov	r0, r2
 8004a2a:	e7e9      	b.n	8004a00 <__lo0bits+0x2a>
 8004a2c:	2000      	movs	r0, #0
 8004a2e:	4770      	bx	lr
 8004a30:	2020      	movs	r0, #32
 8004a32:	4770      	bx	lr

08004a34 <__i2b>:
 8004a34:	b510      	push	{r4, lr}
 8004a36:	460c      	mov	r4, r1
 8004a38:	2101      	movs	r1, #1
 8004a3a:	f7ff ff27 	bl	800488c <_Balloc>
 8004a3e:	2201      	movs	r2, #1
 8004a40:	6144      	str	r4, [r0, #20]
 8004a42:	6102      	str	r2, [r0, #16]
 8004a44:	bd10      	pop	{r4, pc}

08004a46 <__multiply>:
 8004a46:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a4a:	4614      	mov	r4, r2
 8004a4c:	690a      	ldr	r2, [r1, #16]
 8004a4e:	6923      	ldr	r3, [r4, #16]
 8004a50:	429a      	cmp	r2, r3
 8004a52:	bfb8      	it	lt
 8004a54:	460b      	movlt	r3, r1
 8004a56:	4689      	mov	r9, r1
 8004a58:	bfbc      	itt	lt
 8004a5a:	46a1      	movlt	r9, r4
 8004a5c:	461c      	movlt	r4, r3
 8004a5e:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004a62:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8004a66:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004a6a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004a6e:	eb07 060a 	add.w	r6, r7, sl
 8004a72:	429e      	cmp	r6, r3
 8004a74:	bfc8      	it	gt
 8004a76:	3101      	addgt	r1, #1
 8004a78:	f7ff ff08 	bl	800488c <_Balloc>
 8004a7c:	f100 0514 	add.w	r5, r0, #20
 8004a80:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8004a84:	462b      	mov	r3, r5
 8004a86:	2200      	movs	r2, #0
 8004a88:	4543      	cmp	r3, r8
 8004a8a:	d316      	bcc.n	8004aba <__multiply+0x74>
 8004a8c:	f104 0214 	add.w	r2, r4, #20
 8004a90:	f109 0114 	add.w	r1, r9, #20
 8004a94:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8004a98:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8004a9c:	9301      	str	r3, [sp, #4]
 8004a9e:	9c01      	ldr	r4, [sp, #4]
 8004aa0:	4294      	cmp	r4, r2
 8004aa2:	4613      	mov	r3, r2
 8004aa4:	d80c      	bhi.n	8004ac0 <__multiply+0x7a>
 8004aa6:	2e00      	cmp	r6, #0
 8004aa8:	dd03      	ble.n	8004ab2 <__multiply+0x6c>
 8004aaa:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d054      	beq.n	8004b5c <__multiply+0x116>
 8004ab2:	6106      	str	r6, [r0, #16]
 8004ab4:	b003      	add	sp, #12
 8004ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004aba:	f843 2b04 	str.w	r2, [r3], #4
 8004abe:	e7e3      	b.n	8004a88 <__multiply+0x42>
 8004ac0:	f8b3 a000 	ldrh.w	sl, [r3]
 8004ac4:	3204      	adds	r2, #4
 8004ac6:	f1ba 0f00 	cmp.w	sl, #0
 8004aca:	d020      	beq.n	8004b0e <__multiply+0xc8>
 8004acc:	46ae      	mov	lr, r5
 8004ace:	4689      	mov	r9, r1
 8004ad0:	f04f 0c00 	mov.w	ip, #0
 8004ad4:	f859 4b04 	ldr.w	r4, [r9], #4
 8004ad8:	f8be b000 	ldrh.w	fp, [lr]
 8004adc:	b2a3      	uxth	r3, r4
 8004ade:	fb0a b303 	mla	r3, sl, r3, fp
 8004ae2:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8004ae6:	f8de 4000 	ldr.w	r4, [lr]
 8004aea:	4463      	add	r3, ip
 8004aec:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8004af0:	fb0a c40b 	mla	r4, sl, fp, ip
 8004af4:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8004af8:	b29b      	uxth	r3, r3
 8004afa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004afe:	454f      	cmp	r7, r9
 8004b00:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8004b04:	f84e 3b04 	str.w	r3, [lr], #4
 8004b08:	d8e4      	bhi.n	8004ad4 <__multiply+0x8e>
 8004b0a:	f8ce c000 	str.w	ip, [lr]
 8004b0e:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8004b12:	f1b9 0f00 	cmp.w	r9, #0
 8004b16:	d01f      	beq.n	8004b58 <__multiply+0x112>
 8004b18:	682b      	ldr	r3, [r5, #0]
 8004b1a:	46ae      	mov	lr, r5
 8004b1c:	468c      	mov	ip, r1
 8004b1e:	f04f 0a00 	mov.w	sl, #0
 8004b22:	f8bc 4000 	ldrh.w	r4, [ip]
 8004b26:	f8be b002 	ldrh.w	fp, [lr, #2]
 8004b2a:	fb09 b404 	mla	r4, r9, r4, fp
 8004b2e:	44a2      	add	sl, r4
 8004b30:	b29b      	uxth	r3, r3
 8004b32:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8004b36:	f84e 3b04 	str.w	r3, [lr], #4
 8004b3a:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004b3e:	f8be 4000 	ldrh.w	r4, [lr]
 8004b42:	0c1b      	lsrs	r3, r3, #16
 8004b44:	fb09 4303 	mla	r3, r9, r3, r4
 8004b48:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8004b4c:	4567      	cmp	r7, ip
 8004b4e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004b52:	d8e6      	bhi.n	8004b22 <__multiply+0xdc>
 8004b54:	f8ce 3000 	str.w	r3, [lr]
 8004b58:	3504      	adds	r5, #4
 8004b5a:	e7a0      	b.n	8004a9e <__multiply+0x58>
 8004b5c:	3e01      	subs	r6, #1
 8004b5e:	e7a2      	b.n	8004aa6 <__multiply+0x60>

08004b60 <__pow5mult>:
 8004b60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b64:	4615      	mov	r5, r2
 8004b66:	f012 0203 	ands.w	r2, r2, #3
 8004b6a:	4606      	mov	r6, r0
 8004b6c:	460f      	mov	r7, r1
 8004b6e:	d007      	beq.n	8004b80 <__pow5mult+0x20>
 8004b70:	3a01      	subs	r2, #1
 8004b72:	4c21      	ldr	r4, [pc, #132]	; (8004bf8 <__pow5mult+0x98>)
 8004b74:	2300      	movs	r3, #0
 8004b76:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004b7a:	f7ff fed2 	bl	8004922 <__multadd>
 8004b7e:	4607      	mov	r7, r0
 8004b80:	10ad      	asrs	r5, r5, #2
 8004b82:	d035      	beq.n	8004bf0 <__pow5mult+0x90>
 8004b84:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004b86:	b93c      	cbnz	r4, 8004b98 <__pow5mult+0x38>
 8004b88:	2010      	movs	r0, #16
 8004b8a:	f7ff fc51 	bl	8004430 <malloc>
 8004b8e:	6270      	str	r0, [r6, #36]	; 0x24
 8004b90:	6044      	str	r4, [r0, #4]
 8004b92:	6084      	str	r4, [r0, #8]
 8004b94:	6004      	str	r4, [r0, #0]
 8004b96:	60c4      	str	r4, [r0, #12]
 8004b98:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004b9c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004ba0:	b94c      	cbnz	r4, 8004bb6 <__pow5mult+0x56>
 8004ba2:	f240 2171 	movw	r1, #625	; 0x271
 8004ba6:	4630      	mov	r0, r6
 8004ba8:	f7ff ff44 	bl	8004a34 <__i2b>
 8004bac:	2300      	movs	r3, #0
 8004bae:	f8c8 0008 	str.w	r0, [r8, #8]
 8004bb2:	4604      	mov	r4, r0
 8004bb4:	6003      	str	r3, [r0, #0]
 8004bb6:	f04f 0800 	mov.w	r8, #0
 8004bba:	07eb      	lsls	r3, r5, #31
 8004bbc:	d50a      	bpl.n	8004bd4 <__pow5mult+0x74>
 8004bbe:	4639      	mov	r1, r7
 8004bc0:	4622      	mov	r2, r4
 8004bc2:	4630      	mov	r0, r6
 8004bc4:	f7ff ff3f 	bl	8004a46 <__multiply>
 8004bc8:	4639      	mov	r1, r7
 8004bca:	4681      	mov	r9, r0
 8004bcc:	4630      	mov	r0, r6
 8004bce:	f7ff fe91 	bl	80048f4 <_Bfree>
 8004bd2:	464f      	mov	r7, r9
 8004bd4:	106d      	asrs	r5, r5, #1
 8004bd6:	d00b      	beq.n	8004bf0 <__pow5mult+0x90>
 8004bd8:	6820      	ldr	r0, [r4, #0]
 8004bda:	b938      	cbnz	r0, 8004bec <__pow5mult+0x8c>
 8004bdc:	4622      	mov	r2, r4
 8004bde:	4621      	mov	r1, r4
 8004be0:	4630      	mov	r0, r6
 8004be2:	f7ff ff30 	bl	8004a46 <__multiply>
 8004be6:	6020      	str	r0, [r4, #0]
 8004be8:	f8c0 8000 	str.w	r8, [r0]
 8004bec:	4604      	mov	r4, r0
 8004bee:	e7e4      	b.n	8004bba <__pow5mult+0x5a>
 8004bf0:	4638      	mov	r0, r7
 8004bf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004bf6:	bf00      	nop
 8004bf8:	080056e8 	.word	0x080056e8

08004bfc <__lshift>:
 8004bfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c00:	460c      	mov	r4, r1
 8004c02:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004c06:	6923      	ldr	r3, [r4, #16]
 8004c08:	6849      	ldr	r1, [r1, #4]
 8004c0a:	eb0a 0903 	add.w	r9, sl, r3
 8004c0e:	68a3      	ldr	r3, [r4, #8]
 8004c10:	4607      	mov	r7, r0
 8004c12:	4616      	mov	r6, r2
 8004c14:	f109 0501 	add.w	r5, r9, #1
 8004c18:	42ab      	cmp	r3, r5
 8004c1a:	db31      	blt.n	8004c80 <__lshift+0x84>
 8004c1c:	4638      	mov	r0, r7
 8004c1e:	f7ff fe35 	bl	800488c <_Balloc>
 8004c22:	2200      	movs	r2, #0
 8004c24:	4680      	mov	r8, r0
 8004c26:	f100 0314 	add.w	r3, r0, #20
 8004c2a:	4611      	mov	r1, r2
 8004c2c:	4552      	cmp	r2, sl
 8004c2e:	db2a      	blt.n	8004c86 <__lshift+0x8a>
 8004c30:	6920      	ldr	r0, [r4, #16]
 8004c32:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004c36:	f104 0114 	add.w	r1, r4, #20
 8004c3a:	f016 021f 	ands.w	r2, r6, #31
 8004c3e:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8004c42:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8004c46:	d022      	beq.n	8004c8e <__lshift+0x92>
 8004c48:	f1c2 0c20 	rsb	ip, r2, #32
 8004c4c:	2000      	movs	r0, #0
 8004c4e:	680e      	ldr	r6, [r1, #0]
 8004c50:	4096      	lsls	r6, r2
 8004c52:	4330      	orrs	r0, r6
 8004c54:	f843 0b04 	str.w	r0, [r3], #4
 8004c58:	f851 0b04 	ldr.w	r0, [r1], #4
 8004c5c:	458e      	cmp	lr, r1
 8004c5e:	fa20 f00c 	lsr.w	r0, r0, ip
 8004c62:	d8f4      	bhi.n	8004c4e <__lshift+0x52>
 8004c64:	6018      	str	r0, [r3, #0]
 8004c66:	b108      	cbz	r0, 8004c6c <__lshift+0x70>
 8004c68:	f109 0502 	add.w	r5, r9, #2
 8004c6c:	3d01      	subs	r5, #1
 8004c6e:	4638      	mov	r0, r7
 8004c70:	f8c8 5010 	str.w	r5, [r8, #16]
 8004c74:	4621      	mov	r1, r4
 8004c76:	f7ff fe3d 	bl	80048f4 <_Bfree>
 8004c7a:	4640      	mov	r0, r8
 8004c7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004c80:	3101      	adds	r1, #1
 8004c82:	005b      	lsls	r3, r3, #1
 8004c84:	e7c8      	b.n	8004c18 <__lshift+0x1c>
 8004c86:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004c8a:	3201      	adds	r2, #1
 8004c8c:	e7ce      	b.n	8004c2c <__lshift+0x30>
 8004c8e:	3b04      	subs	r3, #4
 8004c90:	f851 2b04 	ldr.w	r2, [r1], #4
 8004c94:	f843 2f04 	str.w	r2, [r3, #4]!
 8004c98:	458e      	cmp	lr, r1
 8004c9a:	d8f9      	bhi.n	8004c90 <__lshift+0x94>
 8004c9c:	e7e6      	b.n	8004c6c <__lshift+0x70>

08004c9e <__mcmp>:
 8004c9e:	6903      	ldr	r3, [r0, #16]
 8004ca0:	690a      	ldr	r2, [r1, #16]
 8004ca2:	1a9b      	subs	r3, r3, r2
 8004ca4:	b530      	push	{r4, r5, lr}
 8004ca6:	d10c      	bne.n	8004cc2 <__mcmp+0x24>
 8004ca8:	0092      	lsls	r2, r2, #2
 8004caa:	3014      	adds	r0, #20
 8004cac:	3114      	adds	r1, #20
 8004cae:	1884      	adds	r4, r0, r2
 8004cb0:	4411      	add	r1, r2
 8004cb2:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004cb6:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004cba:	4295      	cmp	r5, r2
 8004cbc:	d003      	beq.n	8004cc6 <__mcmp+0x28>
 8004cbe:	d305      	bcc.n	8004ccc <__mcmp+0x2e>
 8004cc0:	2301      	movs	r3, #1
 8004cc2:	4618      	mov	r0, r3
 8004cc4:	bd30      	pop	{r4, r5, pc}
 8004cc6:	42a0      	cmp	r0, r4
 8004cc8:	d3f3      	bcc.n	8004cb2 <__mcmp+0x14>
 8004cca:	e7fa      	b.n	8004cc2 <__mcmp+0x24>
 8004ccc:	f04f 33ff 	mov.w	r3, #4294967295
 8004cd0:	e7f7      	b.n	8004cc2 <__mcmp+0x24>

08004cd2 <__mdiff>:
 8004cd2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cd6:	460d      	mov	r5, r1
 8004cd8:	4607      	mov	r7, r0
 8004cda:	4611      	mov	r1, r2
 8004cdc:	4628      	mov	r0, r5
 8004cde:	4614      	mov	r4, r2
 8004ce0:	f7ff ffdd 	bl	8004c9e <__mcmp>
 8004ce4:	1e06      	subs	r6, r0, #0
 8004ce6:	d108      	bne.n	8004cfa <__mdiff+0x28>
 8004ce8:	4631      	mov	r1, r6
 8004cea:	4638      	mov	r0, r7
 8004cec:	f7ff fdce 	bl	800488c <_Balloc>
 8004cf0:	2301      	movs	r3, #1
 8004cf2:	6103      	str	r3, [r0, #16]
 8004cf4:	6146      	str	r6, [r0, #20]
 8004cf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004cfa:	bfa4      	itt	ge
 8004cfc:	4623      	movge	r3, r4
 8004cfe:	462c      	movge	r4, r5
 8004d00:	4638      	mov	r0, r7
 8004d02:	6861      	ldr	r1, [r4, #4]
 8004d04:	bfa6      	itte	ge
 8004d06:	461d      	movge	r5, r3
 8004d08:	2600      	movge	r6, #0
 8004d0a:	2601      	movlt	r6, #1
 8004d0c:	f7ff fdbe 	bl	800488c <_Balloc>
 8004d10:	692b      	ldr	r3, [r5, #16]
 8004d12:	60c6      	str	r6, [r0, #12]
 8004d14:	6926      	ldr	r6, [r4, #16]
 8004d16:	f105 0914 	add.w	r9, r5, #20
 8004d1a:	f104 0214 	add.w	r2, r4, #20
 8004d1e:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8004d22:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8004d26:	f100 0514 	add.w	r5, r0, #20
 8004d2a:	f04f 0c00 	mov.w	ip, #0
 8004d2e:	f852 ab04 	ldr.w	sl, [r2], #4
 8004d32:	f859 4b04 	ldr.w	r4, [r9], #4
 8004d36:	fa1c f18a 	uxtah	r1, ip, sl
 8004d3a:	b2a3      	uxth	r3, r4
 8004d3c:	1ac9      	subs	r1, r1, r3
 8004d3e:	0c23      	lsrs	r3, r4, #16
 8004d40:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8004d44:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8004d48:	b289      	uxth	r1, r1
 8004d4a:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8004d4e:	45c8      	cmp	r8, r9
 8004d50:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8004d54:	4696      	mov	lr, r2
 8004d56:	f845 3b04 	str.w	r3, [r5], #4
 8004d5a:	d8e8      	bhi.n	8004d2e <__mdiff+0x5c>
 8004d5c:	45be      	cmp	lr, r7
 8004d5e:	d305      	bcc.n	8004d6c <__mdiff+0x9a>
 8004d60:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8004d64:	b18b      	cbz	r3, 8004d8a <__mdiff+0xb8>
 8004d66:	6106      	str	r6, [r0, #16]
 8004d68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d6c:	f85e 1b04 	ldr.w	r1, [lr], #4
 8004d70:	fa1c f381 	uxtah	r3, ip, r1
 8004d74:	141a      	asrs	r2, r3, #16
 8004d76:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8004d7a:	b29b      	uxth	r3, r3
 8004d7c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004d80:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004d84:	f845 3b04 	str.w	r3, [r5], #4
 8004d88:	e7e8      	b.n	8004d5c <__mdiff+0x8a>
 8004d8a:	3e01      	subs	r6, #1
 8004d8c:	e7e8      	b.n	8004d60 <__mdiff+0x8e>

08004d8e <__d2b>:
 8004d8e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004d92:	460e      	mov	r6, r1
 8004d94:	2101      	movs	r1, #1
 8004d96:	ec59 8b10 	vmov	r8, r9, d0
 8004d9a:	4615      	mov	r5, r2
 8004d9c:	f7ff fd76 	bl	800488c <_Balloc>
 8004da0:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8004da4:	4607      	mov	r7, r0
 8004da6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004daa:	bb34      	cbnz	r4, 8004dfa <__d2b+0x6c>
 8004dac:	9301      	str	r3, [sp, #4]
 8004dae:	f1b8 0f00 	cmp.w	r8, #0
 8004db2:	d027      	beq.n	8004e04 <__d2b+0x76>
 8004db4:	a802      	add	r0, sp, #8
 8004db6:	f840 8d08 	str.w	r8, [r0, #-8]!
 8004dba:	f7ff fe0c 	bl	80049d6 <__lo0bits>
 8004dbe:	9900      	ldr	r1, [sp, #0]
 8004dc0:	b1f0      	cbz	r0, 8004e00 <__d2b+0x72>
 8004dc2:	9a01      	ldr	r2, [sp, #4]
 8004dc4:	f1c0 0320 	rsb	r3, r0, #32
 8004dc8:	fa02 f303 	lsl.w	r3, r2, r3
 8004dcc:	430b      	orrs	r3, r1
 8004dce:	40c2      	lsrs	r2, r0
 8004dd0:	617b      	str	r3, [r7, #20]
 8004dd2:	9201      	str	r2, [sp, #4]
 8004dd4:	9b01      	ldr	r3, [sp, #4]
 8004dd6:	61bb      	str	r3, [r7, #24]
 8004dd8:	2b00      	cmp	r3, #0
 8004dda:	bf14      	ite	ne
 8004ddc:	2102      	movne	r1, #2
 8004dde:	2101      	moveq	r1, #1
 8004de0:	6139      	str	r1, [r7, #16]
 8004de2:	b1c4      	cbz	r4, 8004e16 <__d2b+0x88>
 8004de4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8004de8:	4404      	add	r4, r0
 8004dea:	6034      	str	r4, [r6, #0]
 8004dec:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004df0:	6028      	str	r0, [r5, #0]
 8004df2:	4638      	mov	r0, r7
 8004df4:	b003      	add	sp, #12
 8004df6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004dfa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004dfe:	e7d5      	b.n	8004dac <__d2b+0x1e>
 8004e00:	6179      	str	r1, [r7, #20]
 8004e02:	e7e7      	b.n	8004dd4 <__d2b+0x46>
 8004e04:	a801      	add	r0, sp, #4
 8004e06:	f7ff fde6 	bl	80049d6 <__lo0bits>
 8004e0a:	9b01      	ldr	r3, [sp, #4]
 8004e0c:	617b      	str	r3, [r7, #20]
 8004e0e:	2101      	movs	r1, #1
 8004e10:	6139      	str	r1, [r7, #16]
 8004e12:	3020      	adds	r0, #32
 8004e14:	e7e5      	b.n	8004de2 <__d2b+0x54>
 8004e16:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8004e1a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004e1e:	6030      	str	r0, [r6, #0]
 8004e20:	6918      	ldr	r0, [r3, #16]
 8004e22:	f7ff fdb9 	bl	8004998 <__hi0bits>
 8004e26:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8004e2a:	e7e1      	b.n	8004df0 <__d2b+0x62>

08004e2c <_sbrk_r>:
 8004e2c:	b538      	push	{r3, r4, r5, lr}
 8004e2e:	4c06      	ldr	r4, [pc, #24]	; (8004e48 <_sbrk_r+0x1c>)
 8004e30:	2300      	movs	r3, #0
 8004e32:	4605      	mov	r5, r0
 8004e34:	4608      	mov	r0, r1
 8004e36:	6023      	str	r3, [r4, #0]
 8004e38:	f000 fb86 	bl	8005548 <_sbrk>
 8004e3c:	1c43      	adds	r3, r0, #1
 8004e3e:	d102      	bne.n	8004e46 <_sbrk_r+0x1a>
 8004e40:	6823      	ldr	r3, [r4, #0]
 8004e42:	b103      	cbz	r3, 8004e46 <_sbrk_r+0x1a>
 8004e44:	602b      	str	r3, [r5, #0]
 8004e46:	bd38      	pop	{r3, r4, r5, pc}
 8004e48:	20000754 	.word	0x20000754

08004e4c <__ssprint_r>:
 8004e4c:	6893      	ldr	r3, [r2, #8]
 8004e4e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e52:	4681      	mov	r9, r0
 8004e54:	460c      	mov	r4, r1
 8004e56:	4617      	mov	r7, r2
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	d060      	beq.n	8004f1e <__ssprint_r+0xd2>
 8004e5c:	f04f 0b00 	mov.w	fp, #0
 8004e60:	f8d2 a000 	ldr.w	sl, [r2]
 8004e64:	465e      	mov	r6, fp
 8004e66:	b356      	cbz	r6, 8004ebe <__ssprint_r+0x72>
 8004e68:	68a3      	ldr	r3, [r4, #8]
 8004e6a:	429e      	cmp	r6, r3
 8004e6c:	d344      	bcc.n	8004ef8 <__ssprint_r+0xac>
 8004e6e:	89a2      	ldrh	r2, [r4, #12]
 8004e70:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004e74:	d03e      	beq.n	8004ef4 <__ssprint_r+0xa8>
 8004e76:	6825      	ldr	r5, [r4, #0]
 8004e78:	6921      	ldr	r1, [r4, #16]
 8004e7a:	eba5 0801 	sub.w	r8, r5, r1
 8004e7e:	6965      	ldr	r5, [r4, #20]
 8004e80:	2302      	movs	r3, #2
 8004e82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004e86:	fb95 f5f3 	sdiv	r5, r5, r3
 8004e8a:	f108 0301 	add.w	r3, r8, #1
 8004e8e:	4433      	add	r3, r6
 8004e90:	429d      	cmp	r5, r3
 8004e92:	bf38      	it	cc
 8004e94:	461d      	movcc	r5, r3
 8004e96:	0553      	lsls	r3, r2, #21
 8004e98:	d546      	bpl.n	8004f28 <__ssprint_r+0xdc>
 8004e9a:	4629      	mov	r1, r5
 8004e9c:	4648      	mov	r0, r9
 8004e9e:	f7ff facf 	bl	8004440 <_malloc_r>
 8004ea2:	b998      	cbnz	r0, 8004ecc <__ssprint_r+0x80>
 8004ea4:	230c      	movs	r3, #12
 8004ea6:	f8c9 3000 	str.w	r3, [r9]
 8004eaa:	89a3      	ldrh	r3, [r4, #12]
 8004eac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004eb0:	81a3      	strh	r3, [r4, #12]
 8004eb2:	2300      	movs	r3, #0
 8004eb4:	60bb      	str	r3, [r7, #8]
 8004eb6:	607b      	str	r3, [r7, #4]
 8004eb8:	f04f 30ff 	mov.w	r0, #4294967295
 8004ebc:	e031      	b.n	8004f22 <__ssprint_r+0xd6>
 8004ebe:	f8da b000 	ldr.w	fp, [sl]
 8004ec2:	f8da 6004 	ldr.w	r6, [sl, #4]
 8004ec6:	f10a 0a08 	add.w	sl, sl, #8
 8004eca:	e7cc      	b.n	8004e66 <__ssprint_r+0x1a>
 8004ecc:	4642      	mov	r2, r8
 8004ece:	6921      	ldr	r1, [r4, #16]
 8004ed0:	9001      	str	r0, [sp, #4]
 8004ed2:	f7ff fcc3 	bl	800485c <memcpy>
 8004ed6:	89a2      	ldrh	r2, [r4, #12]
 8004ed8:	9b01      	ldr	r3, [sp, #4]
 8004eda:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8004ede:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004ee2:	81a2      	strh	r2, [r4, #12]
 8004ee4:	6123      	str	r3, [r4, #16]
 8004ee6:	6165      	str	r5, [r4, #20]
 8004ee8:	4443      	add	r3, r8
 8004eea:	eba5 0508 	sub.w	r5, r5, r8
 8004eee:	6023      	str	r3, [r4, #0]
 8004ef0:	60a5      	str	r5, [r4, #8]
 8004ef2:	4633      	mov	r3, r6
 8004ef4:	429e      	cmp	r6, r3
 8004ef6:	d200      	bcs.n	8004efa <__ssprint_r+0xae>
 8004ef8:	4633      	mov	r3, r6
 8004efa:	461a      	mov	r2, r3
 8004efc:	4659      	mov	r1, fp
 8004efe:	6820      	ldr	r0, [r4, #0]
 8004f00:	9301      	str	r3, [sp, #4]
 8004f02:	f000 f971 	bl	80051e8 <memmove>
 8004f06:	68a2      	ldr	r2, [r4, #8]
 8004f08:	9b01      	ldr	r3, [sp, #4]
 8004f0a:	1ad2      	subs	r2, r2, r3
 8004f0c:	60a2      	str	r2, [r4, #8]
 8004f0e:	6822      	ldr	r2, [r4, #0]
 8004f10:	4413      	add	r3, r2
 8004f12:	6023      	str	r3, [r4, #0]
 8004f14:	68bb      	ldr	r3, [r7, #8]
 8004f16:	1b9e      	subs	r6, r3, r6
 8004f18:	60be      	str	r6, [r7, #8]
 8004f1a:	2e00      	cmp	r6, #0
 8004f1c:	d1cf      	bne.n	8004ebe <__ssprint_r+0x72>
 8004f1e:	2000      	movs	r0, #0
 8004f20:	6078      	str	r0, [r7, #4]
 8004f22:	b003      	add	sp, #12
 8004f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f28:	462a      	mov	r2, r5
 8004f2a:	4648      	mov	r0, r9
 8004f2c:	f000 f97e 	bl	800522c <_realloc_r>
 8004f30:	4603      	mov	r3, r0
 8004f32:	2800      	cmp	r0, #0
 8004f34:	d1d6      	bne.n	8004ee4 <__ssprint_r+0x98>
 8004f36:	6921      	ldr	r1, [r4, #16]
 8004f38:	4648      	mov	r0, r9
 8004f3a:	f000 f885 	bl	8005048 <_free_r>
 8004f3e:	e7b1      	b.n	8004ea4 <__ssprint_r+0x58>

08004f40 <_calloc_r>:
 8004f40:	b510      	push	{r4, lr}
 8004f42:	4351      	muls	r1, r2
 8004f44:	f7ff fa7c 	bl	8004440 <_malloc_r>
 8004f48:	4604      	mov	r4, r0
 8004f4a:	b198      	cbz	r0, 8004f74 <_calloc_r+0x34>
 8004f4c:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8004f50:	f022 0203 	bic.w	r2, r2, #3
 8004f54:	3a04      	subs	r2, #4
 8004f56:	2a24      	cmp	r2, #36	; 0x24
 8004f58:	d81b      	bhi.n	8004f92 <_calloc_r+0x52>
 8004f5a:	2a13      	cmp	r2, #19
 8004f5c:	d917      	bls.n	8004f8e <_calloc_r+0x4e>
 8004f5e:	2100      	movs	r1, #0
 8004f60:	2a1b      	cmp	r2, #27
 8004f62:	6001      	str	r1, [r0, #0]
 8004f64:	6041      	str	r1, [r0, #4]
 8004f66:	d807      	bhi.n	8004f78 <_calloc_r+0x38>
 8004f68:	f100 0308 	add.w	r3, r0, #8
 8004f6c:	2200      	movs	r2, #0
 8004f6e:	601a      	str	r2, [r3, #0]
 8004f70:	605a      	str	r2, [r3, #4]
 8004f72:	609a      	str	r2, [r3, #8]
 8004f74:	4620      	mov	r0, r4
 8004f76:	bd10      	pop	{r4, pc}
 8004f78:	2a24      	cmp	r2, #36	; 0x24
 8004f7a:	6081      	str	r1, [r0, #8]
 8004f7c:	60c1      	str	r1, [r0, #12]
 8004f7e:	bf11      	iteee	ne
 8004f80:	f100 0310 	addne.w	r3, r0, #16
 8004f84:	6101      	streq	r1, [r0, #16]
 8004f86:	f100 0318 	addeq.w	r3, r0, #24
 8004f8a:	6141      	streq	r1, [r0, #20]
 8004f8c:	e7ee      	b.n	8004f6c <_calloc_r+0x2c>
 8004f8e:	4603      	mov	r3, r0
 8004f90:	e7ec      	b.n	8004f6c <_calloc_r+0x2c>
 8004f92:	2100      	movs	r1, #0
 8004f94:	f000 f942 	bl	800521c <memset>
 8004f98:	e7ec      	b.n	8004f74 <_calloc_r+0x34>
	...

08004f9c <_malloc_trim_r>:
 8004f9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004fa0:	4f25      	ldr	r7, [pc, #148]	; (8005038 <_malloc_trim_r+0x9c>)
 8004fa2:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8005044 <_malloc_trim_r+0xa8>
 8004fa6:	4689      	mov	r9, r1
 8004fa8:	4606      	mov	r6, r0
 8004faa:	f7ff fc63 	bl	8004874 <__malloc_lock>
 8004fae:	68bb      	ldr	r3, [r7, #8]
 8004fb0:	685d      	ldr	r5, [r3, #4]
 8004fb2:	f1a8 0411 	sub.w	r4, r8, #17
 8004fb6:	f025 0503 	bic.w	r5, r5, #3
 8004fba:	eba4 0409 	sub.w	r4, r4, r9
 8004fbe:	442c      	add	r4, r5
 8004fc0:	fbb4 f4f8 	udiv	r4, r4, r8
 8004fc4:	3c01      	subs	r4, #1
 8004fc6:	fb08 f404 	mul.w	r4, r8, r4
 8004fca:	4544      	cmp	r4, r8
 8004fcc:	da05      	bge.n	8004fda <_malloc_trim_r+0x3e>
 8004fce:	4630      	mov	r0, r6
 8004fd0:	f7ff fc56 	bl	8004880 <__malloc_unlock>
 8004fd4:	2000      	movs	r0, #0
 8004fd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004fda:	2100      	movs	r1, #0
 8004fdc:	4630      	mov	r0, r6
 8004fde:	f7ff ff25 	bl	8004e2c <_sbrk_r>
 8004fe2:	68bb      	ldr	r3, [r7, #8]
 8004fe4:	442b      	add	r3, r5
 8004fe6:	4298      	cmp	r0, r3
 8004fe8:	d1f1      	bne.n	8004fce <_malloc_trim_r+0x32>
 8004fea:	4261      	negs	r1, r4
 8004fec:	4630      	mov	r0, r6
 8004fee:	f7ff ff1d 	bl	8004e2c <_sbrk_r>
 8004ff2:	3001      	adds	r0, #1
 8004ff4:	d110      	bne.n	8005018 <_malloc_trim_r+0x7c>
 8004ff6:	2100      	movs	r1, #0
 8004ff8:	4630      	mov	r0, r6
 8004ffa:	f7ff ff17 	bl	8004e2c <_sbrk_r>
 8004ffe:	68ba      	ldr	r2, [r7, #8]
 8005000:	1a83      	subs	r3, r0, r2
 8005002:	2b0f      	cmp	r3, #15
 8005004:	dde3      	ble.n	8004fce <_malloc_trim_r+0x32>
 8005006:	490d      	ldr	r1, [pc, #52]	; (800503c <_malloc_trim_r+0xa0>)
 8005008:	6809      	ldr	r1, [r1, #0]
 800500a:	1a40      	subs	r0, r0, r1
 800500c:	490c      	ldr	r1, [pc, #48]	; (8005040 <_malloc_trim_r+0xa4>)
 800500e:	f043 0301 	orr.w	r3, r3, #1
 8005012:	6008      	str	r0, [r1, #0]
 8005014:	6053      	str	r3, [r2, #4]
 8005016:	e7da      	b.n	8004fce <_malloc_trim_r+0x32>
 8005018:	68bb      	ldr	r3, [r7, #8]
 800501a:	4a09      	ldr	r2, [pc, #36]	; (8005040 <_malloc_trim_r+0xa4>)
 800501c:	1b2d      	subs	r5, r5, r4
 800501e:	f045 0501 	orr.w	r5, r5, #1
 8005022:	605d      	str	r5, [r3, #4]
 8005024:	6813      	ldr	r3, [r2, #0]
 8005026:	4630      	mov	r0, r6
 8005028:	1b1c      	subs	r4, r3, r4
 800502a:	6014      	str	r4, [r2, #0]
 800502c:	f7ff fc28 	bl	8004880 <__malloc_unlock>
 8005030:	2001      	movs	r0, #1
 8005032:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005036:	bf00      	nop
 8005038:	20000174 	.word	0x20000174
 800503c:	2000057c 	.word	0x2000057c
 8005040:	20000710 	.word	0x20000710
 8005044:	00000080 	.word	0x00000080

08005048 <_free_r>:
 8005048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800504c:	4604      	mov	r4, r0
 800504e:	4688      	mov	r8, r1
 8005050:	2900      	cmp	r1, #0
 8005052:	f000 80ab 	beq.w	80051ac <_free_r+0x164>
 8005056:	f7ff fc0d 	bl	8004874 <__malloc_lock>
 800505a:	f858 2c04 	ldr.w	r2, [r8, #-4]
 800505e:	4d54      	ldr	r5, [pc, #336]	; (80051b0 <_free_r+0x168>)
 8005060:	f022 0001 	bic.w	r0, r2, #1
 8005064:	f1a8 0308 	sub.w	r3, r8, #8
 8005068:	181f      	adds	r7, r3, r0
 800506a:	68a9      	ldr	r1, [r5, #8]
 800506c:	687e      	ldr	r6, [r7, #4]
 800506e:	428f      	cmp	r7, r1
 8005070:	f026 0603 	bic.w	r6, r6, #3
 8005074:	f002 0201 	and.w	r2, r2, #1
 8005078:	d11b      	bne.n	80050b2 <_free_r+0x6a>
 800507a:	4430      	add	r0, r6
 800507c:	b93a      	cbnz	r2, 800508e <_free_r+0x46>
 800507e:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8005082:	1a9b      	subs	r3, r3, r2
 8005084:	4410      	add	r0, r2
 8005086:	6899      	ldr	r1, [r3, #8]
 8005088:	68da      	ldr	r2, [r3, #12]
 800508a:	60ca      	str	r2, [r1, #12]
 800508c:	6091      	str	r1, [r2, #8]
 800508e:	f040 0201 	orr.w	r2, r0, #1
 8005092:	605a      	str	r2, [r3, #4]
 8005094:	60ab      	str	r3, [r5, #8]
 8005096:	4b47      	ldr	r3, [pc, #284]	; (80051b4 <_free_r+0x16c>)
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	4298      	cmp	r0, r3
 800509c:	d304      	bcc.n	80050a8 <_free_r+0x60>
 800509e:	4b46      	ldr	r3, [pc, #280]	; (80051b8 <_free_r+0x170>)
 80050a0:	4620      	mov	r0, r4
 80050a2:	6819      	ldr	r1, [r3, #0]
 80050a4:	f7ff ff7a 	bl	8004f9c <_malloc_trim_r>
 80050a8:	4620      	mov	r0, r4
 80050aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80050ae:	f7ff bbe7 	b.w	8004880 <__malloc_unlock>
 80050b2:	607e      	str	r6, [r7, #4]
 80050b4:	2a00      	cmp	r2, #0
 80050b6:	d139      	bne.n	800512c <_free_r+0xe4>
 80050b8:	f858 1c08 	ldr.w	r1, [r8, #-8]
 80050bc:	1a5b      	subs	r3, r3, r1
 80050be:	4408      	add	r0, r1
 80050c0:	6899      	ldr	r1, [r3, #8]
 80050c2:	f105 0e08 	add.w	lr, r5, #8
 80050c6:	4571      	cmp	r1, lr
 80050c8:	d032      	beq.n	8005130 <_free_r+0xe8>
 80050ca:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 80050ce:	f8c1 e00c 	str.w	lr, [r1, #12]
 80050d2:	f8ce 1008 	str.w	r1, [lr, #8]
 80050d6:	19b9      	adds	r1, r7, r6
 80050d8:	6849      	ldr	r1, [r1, #4]
 80050da:	07c9      	lsls	r1, r1, #31
 80050dc:	d40a      	bmi.n	80050f4 <_free_r+0xac>
 80050de:	4430      	add	r0, r6
 80050e0:	68b9      	ldr	r1, [r7, #8]
 80050e2:	bb3a      	cbnz	r2, 8005134 <_free_r+0xec>
 80050e4:	4e35      	ldr	r6, [pc, #212]	; (80051bc <_free_r+0x174>)
 80050e6:	42b1      	cmp	r1, r6
 80050e8:	d124      	bne.n	8005134 <_free_r+0xec>
 80050ea:	616b      	str	r3, [r5, #20]
 80050ec:	612b      	str	r3, [r5, #16]
 80050ee:	2201      	movs	r2, #1
 80050f0:	60d9      	str	r1, [r3, #12]
 80050f2:	6099      	str	r1, [r3, #8]
 80050f4:	f040 0101 	orr.w	r1, r0, #1
 80050f8:	6059      	str	r1, [r3, #4]
 80050fa:	5018      	str	r0, [r3, r0]
 80050fc:	2a00      	cmp	r2, #0
 80050fe:	d1d3      	bne.n	80050a8 <_free_r+0x60>
 8005100:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8005104:	d21a      	bcs.n	800513c <_free_r+0xf4>
 8005106:	08c0      	lsrs	r0, r0, #3
 8005108:	1081      	asrs	r1, r0, #2
 800510a:	2201      	movs	r2, #1
 800510c:	408a      	lsls	r2, r1
 800510e:	6869      	ldr	r1, [r5, #4]
 8005110:	3001      	adds	r0, #1
 8005112:	430a      	orrs	r2, r1
 8005114:	606a      	str	r2, [r5, #4]
 8005116:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 800511a:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 800511e:	6099      	str	r1, [r3, #8]
 8005120:	3a08      	subs	r2, #8
 8005122:	60da      	str	r2, [r3, #12]
 8005124:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 8005128:	60cb      	str	r3, [r1, #12]
 800512a:	e7bd      	b.n	80050a8 <_free_r+0x60>
 800512c:	2200      	movs	r2, #0
 800512e:	e7d2      	b.n	80050d6 <_free_r+0x8e>
 8005130:	2201      	movs	r2, #1
 8005132:	e7d0      	b.n	80050d6 <_free_r+0x8e>
 8005134:	68fe      	ldr	r6, [r7, #12]
 8005136:	60ce      	str	r6, [r1, #12]
 8005138:	60b1      	str	r1, [r6, #8]
 800513a:	e7db      	b.n	80050f4 <_free_r+0xac>
 800513c:	0a42      	lsrs	r2, r0, #9
 800513e:	2a04      	cmp	r2, #4
 8005140:	d813      	bhi.n	800516a <_free_r+0x122>
 8005142:	0982      	lsrs	r2, r0, #6
 8005144:	3238      	adds	r2, #56	; 0x38
 8005146:	1c51      	adds	r1, r2, #1
 8005148:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 800514c:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8005150:	428e      	cmp	r6, r1
 8005152:	d124      	bne.n	800519e <_free_r+0x156>
 8005154:	2001      	movs	r0, #1
 8005156:	1092      	asrs	r2, r2, #2
 8005158:	fa00 f202 	lsl.w	r2, r0, r2
 800515c:	6868      	ldr	r0, [r5, #4]
 800515e:	4302      	orrs	r2, r0
 8005160:	606a      	str	r2, [r5, #4]
 8005162:	60de      	str	r6, [r3, #12]
 8005164:	6099      	str	r1, [r3, #8]
 8005166:	60b3      	str	r3, [r6, #8]
 8005168:	e7de      	b.n	8005128 <_free_r+0xe0>
 800516a:	2a14      	cmp	r2, #20
 800516c:	d801      	bhi.n	8005172 <_free_r+0x12a>
 800516e:	325b      	adds	r2, #91	; 0x5b
 8005170:	e7e9      	b.n	8005146 <_free_r+0xfe>
 8005172:	2a54      	cmp	r2, #84	; 0x54
 8005174:	d802      	bhi.n	800517c <_free_r+0x134>
 8005176:	0b02      	lsrs	r2, r0, #12
 8005178:	326e      	adds	r2, #110	; 0x6e
 800517a:	e7e4      	b.n	8005146 <_free_r+0xfe>
 800517c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8005180:	d802      	bhi.n	8005188 <_free_r+0x140>
 8005182:	0bc2      	lsrs	r2, r0, #15
 8005184:	3277      	adds	r2, #119	; 0x77
 8005186:	e7de      	b.n	8005146 <_free_r+0xfe>
 8005188:	f240 5154 	movw	r1, #1364	; 0x554
 800518c:	428a      	cmp	r2, r1
 800518e:	bf9a      	itte	ls
 8005190:	0c82      	lsrls	r2, r0, #18
 8005192:	327c      	addls	r2, #124	; 0x7c
 8005194:	227e      	movhi	r2, #126	; 0x7e
 8005196:	e7d6      	b.n	8005146 <_free_r+0xfe>
 8005198:	6889      	ldr	r1, [r1, #8]
 800519a:	428e      	cmp	r6, r1
 800519c:	d004      	beq.n	80051a8 <_free_r+0x160>
 800519e:	684a      	ldr	r2, [r1, #4]
 80051a0:	f022 0203 	bic.w	r2, r2, #3
 80051a4:	4290      	cmp	r0, r2
 80051a6:	d3f7      	bcc.n	8005198 <_free_r+0x150>
 80051a8:	68ce      	ldr	r6, [r1, #12]
 80051aa:	e7da      	b.n	8005162 <_free_r+0x11a>
 80051ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051b0:	20000174 	.word	0x20000174
 80051b4:	20000580 	.word	0x20000580
 80051b8:	20000740 	.word	0x20000740
 80051bc:	2000017c 	.word	0x2000017c

080051c0 <__retarget_lock_acquire_recursive>:
 80051c0:	4770      	bx	lr

080051c2 <__retarget_lock_release_recursive>:
 80051c2:	4770      	bx	lr

080051c4 <__ascii_mbtowc>:
 80051c4:	b082      	sub	sp, #8
 80051c6:	b901      	cbnz	r1, 80051ca <__ascii_mbtowc+0x6>
 80051c8:	a901      	add	r1, sp, #4
 80051ca:	b142      	cbz	r2, 80051de <__ascii_mbtowc+0x1a>
 80051cc:	b14b      	cbz	r3, 80051e2 <__ascii_mbtowc+0x1e>
 80051ce:	7813      	ldrb	r3, [r2, #0]
 80051d0:	600b      	str	r3, [r1, #0]
 80051d2:	7812      	ldrb	r2, [r2, #0]
 80051d4:	1c10      	adds	r0, r2, #0
 80051d6:	bf18      	it	ne
 80051d8:	2001      	movne	r0, #1
 80051da:	b002      	add	sp, #8
 80051dc:	4770      	bx	lr
 80051de:	4610      	mov	r0, r2
 80051e0:	e7fb      	b.n	80051da <__ascii_mbtowc+0x16>
 80051e2:	f06f 0001 	mvn.w	r0, #1
 80051e6:	e7f8      	b.n	80051da <__ascii_mbtowc+0x16>

080051e8 <memmove>:
 80051e8:	4288      	cmp	r0, r1
 80051ea:	b510      	push	{r4, lr}
 80051ec:	eb01 0302 	add.w	r3, r1, r2
 80051f0:	d803      	bhi.n	80051fa <memmove+0x12>
 80051f2:	1e42      	subs	r2, r0, #1
 80051f4:	4299      	cmp	r1, r3
 80051f6:	d10c      	bne.n	8005212 <memmove+0x2a>
 80051f8:	bd10      	pop	{r4, pc}
 80051fa:	4298      	cmp	r0, r3
 80051fc:	d2f9      	bcs.n	80051f2 <memmove+0xa>
 80051fe:	1881      	adds	r1, r0, r2
 8005200:	1ad2      	subs	r2, r2, r3
 8005202:	42d3      	cmn	r3, r2
 8005204:	d100      	bne.n	8005208 <memmove+0x20>
 8005206:	bd10      	pop	{r4, pc}
 8005208:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800520c:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005210:	e7f7      	b.n	8005202 <memmove+0x1a>
 8005212:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005216:	f802 4f01 	strb.w	r4, [r2, #1]!
 800521a:	e7eb      	b.n	80051f4 <memmove+0xc>

0800521c <memset>:
 800521c:	4402      	add	r2, r0
 800521e:	4603      	mov	r3, r0
 8005220:	4293      	cmp	r3, r2
 8005222:	d100      	bne.n	8005226 <memset+0xa>
 8005224:	4770      	bx	lr
 8005226:	f803 1b01 	strb.w	r1, [r3], #1
 800522a:	e7f9      	b.n	8005220 <memset+0x4>

0800522c <_realloc_r>:
 800522c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005230:	4682      	mov	sl, r0
 8005232:	460c      	mov	r4, r1
 8005234:	b929      	cbnz	r1, 8005242 <_realloc_r+0x16>
 8005236:	4611      	mov	r1, r2
 8005238:	b003      	add	sp, #12
 800523a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800523e:	f7ff b8ff 	b.w	8004440 <_malloc_r>
 8005242:	9201      	str	r2, [sp, #4]
 8005244:	f7ff fb16 	bl	8004874 <__malloc_lock>
 8005248:	9a01      	ldr	r2, [sp, #4]
 800524a:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800524e:	f102 080b 	add.w	r8, r2, #11
 8005252:	f1b8 0f16 	cmp.w	r8, #22
 8005256:	f1a4 0908 	sub.w	r9, r4, #8
 800525a:	f025 0603 	bic.w	r6, r5, #3
 800525e:	d90a      	bls.n	8005276 <_realloc_r+0x4a>
 8005260:	f038 0807 	bics.w	r8, r8, #7
 8005264:	d509      	bpl.n	800527a <_realloc_r+0x4e>
 8005266:	230c      	movs	r3, #12
 8005268:	f8ca 3000 	str.w	r3, [sl]
 800526c:	2700      	movs	r7, #0
 800526e:	4638      	mov	r0, r7
 8005270:	b003      	add	sp, #12
 8005272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005276:	f04f 0810 	mov.w	r8, #16
 800527a:	4590      	cmp	r8, r2
 800527c:	d3f3      	bcc.n	8005266 <_realloc_r+0x3a>
 800527e:	45b0      	cmp	r8, r6
 8005280:	f340 8145 	ble.w	800550e <_realloc_r+0x2e2>
 8005284:	4ba8      	ldr	r3, [pc, #672]	; (8005528 <_realloc_r+0x2fc>)
 8005286:	f8d3 e008 	ldr.w	lr, [r3, #8]
 800528a:	eb09 0106 	add.w	r1, r9, r6
 800528e:	4571      	cmp	r1, lr
 8005290:	469b      	mov	fp, r3
 8005292:	684b      	ldr	r3, [r1, #4]
 8005294:	d005      	beq.n	80052a2 <_realloc_r+0x76>
 8005296:	f023 0001 	bic.w	r0, r3, #1
 800529a:	4408      	add	r0, r1
 800529c:	6840      	ldr	r0, [r0, #4]
 800529e:	07c7      	lsls	r7, r0, #31
 80052a0:	d447      	bmi.n	8005332 <_realloc_r+0x106>
 80052a2:	f023 0303 	bic.w	r3, r3, #3
 80052a6:	4571      	cmp	r1, lr
 80052a8:	eb06 0703 	add.w	r7, r6, r3
 80052ac:	d119      	bne.n	80052e2 <_realloc_r+0xb6>
 80052ae:	f108 0010 	add.w	r0, r8, #16
 80052b2:	4287      	cmp	r7, r0
 80052b4:	db3f      	blt.n	8005336 <_realloc_r+0x10a>
 80052b6:	eb09 0308 	add.w	r3, r9, r8
 80052ba:	eba7 0708 	sub.w	r7, r7, r8
 80052be:	f047 0701 	orr.w	r7, r7, #1
 80052c2:	f8cb 3008 	str.w	r3, [fp, #8]
 80052c6:	605f      	str	r7, [r3, #4]
 80052c8:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80052cc:	f003 0301 	and.w	r3, r3, #1
 80052d0:	ea43 0308 	orr.w	r3, r3, r8
 80052d4:	f844 3c04 	str.w	r3, [r4, #-4]
 80052d8:	4650      	mov	r0, sl
 80052da:	f7ff fad1 	bl	8004880 <__malloc_unlock>
 80052de:	4627      	mov	r7, r4
 80052e0:	e7c5      	b.n	800526e <_realloc_r+0x42>
 80052e2:	45b8      	cmp	r8, r7
 80052e4:	dc27      	bgt.n	8005336 <_realloc_r+0x10a>
 80052e6:	68cb      	ldr	r3, [r1, #12]
 80052e8:	688a      	ldr	r2, [r1, #8]
 80052ea:	60d3      	str	r3, [r2, #12]
 80052ec:	609a      	str	r2, [r3, #8]
 80052ee:	eba7 0008 	sub.w	r0, r7, r8
 80052f2:	280f      	cmp	r0, #15
 80052f4:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80052f8:	eb09 0207 	add.w	r2, r9, r7
 80052fc:	f240 8109 	bls.w	8005512 <_realloc_r+0x2e6>
 8005300:	eb09 0108 	add.w	r1, r9, r8
 8005304:	f003 0301 	and.w	r3, r3, #1
 8005308:	ea43 0308 	orr.w	r3, r3, r8
 800530c:	f040 0001 	orr.w	r0, r0, #1
 8005310:	f8c9 3004 	str.w	r3, [r9, #4]
 8005314:	6048      	str	r0, [r1, #4]
 8005316:	6853      	ldr	r3, [r2, #4]
 8005318:	f043 0301 	orr.w	r3, r3, #1
 800531c:	6053      	str	r3, [r2, #4]
 800531e:	3108      	adds	r1, #8
 8005320:	4650      	mov	r0, sl
 8005322:	f7ff fe91 	bl	8005048 <_free_r>
 8005326:	4650      	mov	r0, sl
 8005328:	f7ff faaa 	bl	8004880 <__malloc_unlock>
 800532c:	f109 0708 	add.w	r7, r9, #8
 8005330:	e79d      	b.n	800526e <_realloc_r+0x42>
 8005332:	2300      	movs	r3, #0
 8005334:	4619      	mov	r1, r3
 8005336:	07e8      	lsls	r0, r5, #31
 8005338:	f100 8084 	bmi.w	8005444 <_realloc_r+0x218>
 800533c:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8005340:	eba9 0505 	sub.w	r5, r9, r5
 8005344:	6868      	ldr	r0, [r5, #4]
 8005346:	f020 0003 	bic.w	r0, r0, #3
 800534a:	4430      	add	r0, r6
 800534c:	2900      	cmp	r1, #0
 800534e:	d076      	beq.n	800543e <_realloc_r+0x212>
 8005350:	4571      	cmp	r1, lr
 8005352:	d150      	bne.n	80053f6 <_realloc_r+0x1ca>
 8005354:	4403      	add	r3, r0
 8005356:	f108 0110 	add.w	r1, r8, #16
 800535a:	428b      	cmp	r3, r1
 800535c:	db6f      	blt.n	800543e <_realloc_r+0x212>
 800535e:	462f      	mov	r7, r5
 8005360:	68ea      	ldr	r2, [r5, #12]
 8005362:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8005366:	60ca      	str	r2, [r1, #12]
 8005368:	6091      	str	r1, [r2, #8]
 800536a:	1f32      	subs	r2, r6, #4
 800536c:	2a24      	cmp	r2, #36	; 0x24
 800536e:	d83b      	bhi.n	80053e8 <_realloc_r+0x1bc>
 8005370:	2a13      	cmp	r2, #19
 8005372:	d936      	bls.n	80053e2 <_realloc_r+0x1b6>
 8005374:	6821      	ldr	r1, [r4, #0]
 8005376:	60a9      	str	r1, [r5, #8]
 8005378:	6861      	ldr	r1, [r4, #4]
 800537a:	60e9      	str	r1, [r5, #12]
 800537c:	2a1b      	cmp	r2, #27
 800537e:	d81c      	bhi.n	80053ba <_realloc_r+0x18e>
 8005380:	f105 0210 	add.w	r2, r5, #16
 8005384:	f104 0108 	add.w	r1, r4, #8
 8005388:	6808      	ldr	r0, [r1, #0]
 800538a:	6010      	str	r0, [r2, #0]
 800538c:	6848      	ldr	r0, [r1, #4]
 800538e:	6050      	str	r0, [r2, #4]
 8005390:	6889      	ldr	r1, [r1, #8]
 8005392:	6091      	str	r1, [r2, #8]
 8005394:	eb05 0208 	add.w	r2, r5, r8
 8005398:	eba3 0308 	sub.w	r3, r3, r8
 800539c:	f043 0301 	orr.w	r3, r3, #1
 80053a0:	f8cb 2008 	str.w	r2, [fp, #8]
 80053a4:	6053      	str	r3, [r2, #4]
 80053a6:	686b      	ldr	r3, [r5, #4]
 80053a8:	f003 0301 	and.w	r3, r3, #1
 80053ac:	ea43 0308 	orr.w	r3, r3, r8
 80053b0:	606b      	str	r3, [r5, #4]
 80053b2:	4650      	mov	r0, sl
 80053b4:	f7ff fa64 	bl	8004880 <__malloc_unlock>
 80053b8:	e759      	b.n	800526e <_realloc_r+0x42>
 80053ba:	68a1      	ldr	r1, [r4, #8]
 80053bc:	6129      	str	r1, [r5, #16]
 80053be:	68e1      	ldr	r1, [r4, #12]
 80053c0:	6169      	str	r1, [r5, #20]
 80053c2:	2a24      	cmp	r2, #36	; 0x24
 80053c4:	bf01      	itttt	eq
 80053c6:	6922      	ldreq	r2, [r4, #16]
 80053c8:	61aa      	streq	r2, [r5, #24]
 80053ca:	6960      	ldreq	r0, [r4, #20]
 80053cc:	61e8      	streq	r0, [r5, #28]
 80053ce:	bf19      	ittee	ne
 80053d0:	f105 0218 	addne.w	r2, r5, #24
 80053d4:	f104 0110 	addne.w	r1, r4, #16
 80053d8:	f105 0220 	addeq.w	r2, r5, #32
 80053dc:	f104 0118 	addeq.w	r1, r4, #24
 80053e0:	e7d2      	b.n	8005388 <_realloc_r+0x15c>
 80053e2:	463a      	mov	r2, r7
 80053e4:	4621      	mov	r1, r4
 80053e6:	e7cf      	b.n	8005388 <_realloc_r+0x15c>
 80053e8:	4621      	mov	r1, r4
 80053ea:	4638      	mov	r0, r7
 80053ec:	9301      	str	r3, [sp, #4]
 80053ee:	f7ff fefb 	bl	80051e8 <memmove>
 80053f2:	9b01      	ldr	r3, [sp, #4]
 80053f4:	e7ce      	b.n	8005394 <_realloc_r+0x168>
 80053f6:	18c7      	adds	r7, r0, r3
 80053f8:	45b8      	cmp	r8, r7
 80053fa:	dc20      	bgt.n	800543e <_realloc_r+0x212>
 80053fc:	68cb      	ldr	r3, [r1, #12]
 80053fe:	688a      	ldr	r2, [r1, #8]
 8005400:	60d3      	str	r3, [r2, #12]
 8005402:	609a      	str	r2, [r3, #8]
 8005404:	4628      	mov	r0, r5
 8005406:	68eb      	ldr	r3, [r5, #12]
 8005408:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800540c:	60d3      	str	r3, [r2, #12]
 800540e:	609a      	str	r2, [r3, #8]
 8005410:	1f32      	subs	r2, r6, #4
 8005412:	2a24      	cmp	r2, #36	; 0x24
 8005414:	d842      	bhi.n	800549c <_realloc_r+0x270>
 8005416:	2a13      	cmp	r2, #19
 8005418:	d93e      	bls.n	8005498 <_realloc_r+0x26c>
 800541a:	6823      	ldr	r3, [r4, #0]
 800541c:	60ab      	str	r3, [r5, #8]
 800541e:	6863      	ldr	r3, [r4, #4]
 8005420:	60eb      	str	r3, [r5, #12]
 8005422:	2a1b      	cmp	r2, #27
 8005424:	d824      	bhi.n	8005470 <_realloc_r+0x244>
 8005426:	f105 0010 	add.w	r0, r5, #16
 800542a:	f104 0308 	add.w	r3, r4, #8
 800542e:	681a      	ldr	r2, [r3, #0]
 8005430:	6002      	str	r2, [r0, #0]
 8005432:	685a      	ldr	r2, [r3, #4]
 8005434:	6042      	str	r2, [r0, #4]
 8005436:	689b      	ldr	r3, [r3, #8]
 8005438:	6083      	str	r3, [r0, #8]
 800543a:	46a9      	mov	r9, r5
 800543c:	e757      	b.n	80052ee <_realloc_r+0xc2>
 800543e:	4580      	cmp	r8, r0
 8005440:	4607      	mov	r7, r0
 8005442:	dddf      	ble.n	8005404 <_realloc_r+0x1d8>
 8005444:	4611      	mov	r1, r2
 8005446:	4650      	mov	r0, sl
 8005448:	f7fe fffa 	bl	8004440 <_malloc_r>
 800544c:	4607      	mov	r7, r0
 800544e:	2800      	cmp	r0, #0
 8005450:	d0af      	beq.n	80053b2 <_realloc_r+0x186>
 8005452:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005456:	f023 0301 	bic.w	r3, r3, #1
 800545a:	f1a0 0208 	sub.w	r2, r0, #8
 800545e:	444b      	add	r3, r9
 8005460:	429a      	cmp	r2, r3
 8005462:	d11f      	bne.n	80054a4 <_realloc_r+0x278>
 8005464:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8005468:	f027 0703 	bic.w	r7, r7, #3
 800546c:	4437      	add	r7, r6
 800546e:	e73e      	b.n	80052ee <_realloc_r+0xc2>
 8005470:	68a3      	ldr	r3, [r4, #8]
 8005472:	612b      	str	r3, [r5, #16]
 8005474:	68e3      	ldr	r3, [r4, #12]
 8005476:	616b      	str	r3, [r5, #20]
 8005478:	2a24      	cmp	r2, #36	; 0x24
 800547a:	bf01      	itttt	eq
 800547c:	6923      	ldreq	r3, [r4, #16]
 800547e:	61ab      	streq	r3, [r5, #24]
 8005480:	6962      	ldreq	r2, [r4, #20]
 8005482:	61ea      	streq	r2, [r5, #28]
 8005484:	bf19      	ittee	ne
 8005486:	f105 0018 	addne.w	r0, r5, #24
 800548a:	f104 0310 	addne.w	r3, r4, #16
 800548e:	f105 0020 	addeq.w	r0, r5, #32
 8005492:	f104 0318 	addeq.w	r3, r4, #24
 8005496:	e7ca      	b.n	800542e <_realloc_r+0x202>
 8005498:	4623      	mov	r3, r4
 800549a:	e7c8      	b.n	800542e <_realloc_r+0x202>
 800549c:	4621      	mov	r1, r4
 800549e:	f7ff fea3 	bl	80051e8 <memmove>
 80054a2:	e7ca      	b.n	800543a <_realloc_r+0x20e>
 80054a4:	1f32      	subs	r2, r6, #4
 80054a6:	2a24      	cmp	r2, #36	; 0x24
 80054a8:	d82d      	bhi.n	8005506 <_realloc_r+0x2da>
 80054aa:	2a13      	cmp	r2, #19
 80054ac:	d928      	bls.n	8005500 <_realloc_r+0x2d4>
 80054ae:	6823      	ldr	r3, [r4, #0]
 80054b0:	6003      	str	r3, [r0, #0]
 80054b2:	6863      	ldr	r3, [r4, #4]
 80054b4:	6043      	str	r3, [r0, #4]
 80054b6:	2a1b      	cmp	r2, #27
 80054b8:	d80e      	bhi.n	80054d8 <_realloc_r+0x2ac>
 80054ba:	f100 0308 	add.w	r3, r0, #8
 80054be:	f104 0208 	add.w	r2, r4, #8
 80054c2:	6811      	ldr	r1, [r2, #0]
 80054c4:	6019      	str	r1, [r3, #0]
 80054c6:	6851      	ldr	r1, [r2, #4]
 80054c8:	6059      	str	r1, [r3, #4]
 80054ca:	6892      	ldr	r2, [r2, #8]
 80054cc:	609a      	str	r2, [r3, #8]
 80054ce:	4621      	mov	r1, r4
 80054d0:	4650      	mov	r0, sl
 80054d2:	f7ff fdb9 	bl	8005048 <_free_r>
 80054d6:	e76c      	b.n	80053b2 <_realloc_r+0x186>
 80054d8:	68a3      	ldr	r3, [r4, #8]
 80054da:	6083      	str	r3, [r0, #8]
 80054dc:	68e3      	ldr	r3, [r4, #12]
 80054de:	60c3      	str	r3, [r0, #12]
 80054e0:	2a24      	cmp	r2, #36	; 0x24
 80054e2:	bf01      	itttt	eq
 80054e4:	6923      	ldreq	r3, [r4, #16]
 80054e6:	6103      	streq	r3, [r0, #16]
 80054e8:	6961      	ldreq	r1, [r4, #20]
 80054ea:	6141      	streq	r1, [r0, #20]
 80054ec:	bf19      	ittee	ne
 80054ee:	f100 0310 	addne.w	r3, r0, #16
 80054f2:	f104 0210 	addne.w	r2, r4, #16
 80054f6:	f100 0318 	addeq.w	r3, r0, #24
 80054fa:	f104 0218 	addeq.w	r2, r4, #24
 80054fe:	e7e0      	b.n	80054c2 <_realloc_r+0x296>
 8005500:	4603      	mov	r3, r0
 8005502:	4622      	mov	r2, r4
 8005504:	e7dd      	b.n	80054c2 <_realloc_r+0x296>
 8005506:	4621      	mov	r1, r4
 8005508:	f7ff fe6e 	bl	80051e8 <memmove>
 800550c:	e7df      	b.n	80054ce <_realloc_r+0x2a2>
 800550e:	4637      	mov	r7, r6
 8005510:	e6ed      	b.n	80052ee <_realloc_r+0xc2>
 8005512:	f003 0301 	and.w	r3, r3, #1
 8005516:	431f      	orrs	r7, r3
 8005518:	f8c9 7004 	str.w	r7, [r9, #4]
 800551c:	6853      	ldr	r3, [r2, #4]
 800551e:	f043 0301 	orr.w	r3, r3, #1
 8005522:	6053      	str	r3, [r2, #4]
 8005524:	e6ff      	b.n	8005326 <_realloc_r+0xfa>
 8005526:	bf00      	nop
 8005528:	20000174 	.word	0x20000174

0800552c <__ascii_wctomb>:
 800552c:	b149      	cbz	r1, 8005542 <__ascii_wctomb+0x16>
 800552e:	2aff      	cmp	r2, #255	; 0xff
 8005530:	bf85      	ittet	hi
 8005532:	238a      	movhi	r3, #138	; 0x8a
 8005534:	6003      	strhi	r3, [r0, #0]
 8005536:	700a      	strbls	r2, [r1, #0]
 8005538:	f04f 30ff 	movhi.w	r0, #4294967295
 800553c:	bf98      	it	ls
 800553e:	2001      	movls	r0, #1
 8005540:	4770      	bx	lr
 8005542:	4608      	mov	r0, r1
 8005544:	4770      	bx	lr
	...

08005548 <_sbrk>:
 8005548:	4b04      	ldr	r3, [pc, #16]	; (800555c <_sbrk+0x14>)
 800554a:	6819      	ldr	r1, [r3, #0]
 800554c:	4602      	mov	r2, r0
 800554e:	b909      	cbnz	r1, 8005554 <_sbrk+0xc>
 8005550:	4903      	ldr	r1, [pc, #12]	; (8005560 <_sbrk+0x18>)
 8005552:	6019      	str	r1, [r3, #0]
 8005554:	6818      	ldr	r0, [r3, #0]
 8005556:	4402      	add	r2, r0
 8005558:	601a      	str	r2, [r3, #0]
 800555a:	4770      	bx	lr
 800555c:	20000744 	.word	0x20000744
 8005560:	20000758 	.word	0x20000758

08005564 <_init>:
 8005564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005566:	bf00      	nop
 8005568:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800556a:	bc08      	pop	{r3}
 800556c:	469e      	mov	lr, r3
 800556e:	4770      	bx	lr

08005570 <_fini>:
 8005570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005572:	bf00      	nop
 8005574:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005576:	bc08      	pop	{r3}
 8005578:	469e      	mov	lr, r3
 800557a:	4770      	bx	lr
